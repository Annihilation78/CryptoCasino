/*! For license information please see 2.598f5b3e.chunk.js.LICENSE.txt */
(this.webpackJsonpcasino=this.webpackJsonpcasino||[]).push([[2],[function(e,t,n){"use strict";n.d(t,"hc",(function(){return I.hc})),n.d(t,"kd",(function(){return I.kd})),n.d(t,"ld",(function(){return I.ld})),n.d(t,"zf",(function(){return I.zf})),n.d(t,"Lf",(function(){return I.Lf})),n.d(t,"wd",(function(){return I.wd})),n.d(t,"xd",(function(){return I.xd})),n.d(t,"yd",(function(){return I.yd})),n.d(t,"zd",(function(){return I.zd})),n.d(t,"Ad",(function(){return I.Ad})),n.d(t,"Bd",(function(){return I.Bd})),n.d(t,"Cd",(function(){return I.Cd})),n.d(t,"Fd",(function(){return I.Fd})),n.d(t,"Gd",(function(){return I.Gd})),n.d(t,"Hd",(function(){return I.Hd})),n.d(t,"Id",(function(){return I.Id})),n.d(t,"Ld",(function(){return I.Ld})),n.d(t,"Md",(function(){return I.Md})),n.d(t,"Nd",(function(){return I.Nd})),n.d(t,"Od",(function(){return I.Od})),n.d(t,"Pd",(function(){return I.Pd})),n.d(t,"Qd",(function(){return I.Qd})),n.d(t,"Rd",(function(){return I.Rd})),n.d(t,"Sd",(function(){return I.Sd})),n.d(t,"Td",(function(){return I.Td})),n.d(t,"Ud",(function(){return I.Ud})),n.d(t,"Vd",(function(){return I.Vd})),n.d(t,"Wd",(function(){return I.Wd})),n.d(t,"Xd",(function(){return I.Xd})),n.d(t,"Yd",(function(){return I.Yd})),n.d(t,"Zd",(function(){return I.Zd})),n.d(t,"ae",(function(){return I.ae})),n.d(t,"de",(function(){return I.de})),n.d(t,"fe",(function(){return I.fe})),n.d(t,"ie",(function(){return I.ie})),n.d(t,"je",(function(){return I.je})),n.d(t,"ke",(function(){return I.ke})),n.d(t,"le",(function(){return I.le})),n.d(t,"me",(function(){return I.me})),n.d(t,"ne",(function(){return I.ne})),n.d(t,"pe",(function(){return I.pe})),n.d(t,"qe",(function(){return I.qe})),n.d(t,"re",(function(){return I.re})),n.d(t,"we",(function(){return I.we})),n.d(t,"ye",(function(){return I.ye})),n.d(t,"ze",(function(){return I.ze})),n.d(t,"Ae",(function(){return I.Ae})),n.d(t,"Be",(function(){return I.Be})),n.d(t,"Ce",(function(){return I.Ce})),n.d(t,"De",(function(){return I.De})),n.d(t,"Ee",(function(){return I.Ee})),n.d(t,"Fe",(function(){return I.Fe})),n.d(t,"Ge",(function(){return I.Ge})),n.d(t,"He",(function(){return I.He})),n.d(t,"Ie",(function(){return I.Ie})),n.d(t,"Ke",(function(){return I.Ke})),n.d(t,"Le",(function(){return I.Le})),n.d(t,"Me",(function(){return I.Me})),n.d(t,"Ne",(function(){return I.Ne})),n.d(t,"Oe",(function(){return I.Oe})),n.d(t,"Qe",(function(){return I.Qe})),n.d(t,"Re",(function(){return I.Re})),n.d(t,"Se",(function(){return I.Se})),n.d(t,"Te",(function(){return I.Te})),n.d(t,"Ue",(function(){return I.Ue})),n.d(t,"Ve",(function(){return I.Ve})),n.d(t,"We",(function(){return I.We})),n.d(t,"Xe",(function(){return I.Xe})),n.d(t,"Ye",(function(){return I.Ye})),n.d(t,"Ze",(function(){return I.Ze})),n.d(t,"cf",(function(){return I.cf})),n.d(t,"df",(function(){return I.df})),n.d(t,"ef",(function(){return I.ef})),n.d(t,"ff",(function(){return I.ff})),n.d(t,"gf",(function(){return I.gf})),n.d(t,"hf",(function(){return I.hf})),n.d(t,"kf",(function(){return I.kf})),n.d(t,"lf",(function(){return I.lf})),n.d(t,"mf",(function(){return I.mf})),n.d(t,"nf",(function(){return I.nf})),n.d(t,"of",(function(){return I.of})),n.d(t,"pf",(function(){return I.pf})),n.d(t,"rf",(function(){return I.rf})),n.d(t,"sf",(function(){return I.sf})),n.d(t,"tf",(function(){return I.tf})),n.d(t,"uf",(function(){return I.uf})),n.d(t,"vf",(function(){return I.vf})),n.d(t,"wf",(function(){return I.wf})),n.d(t,"xf",(function(){return I.xf})),n.d(t,"yf",(function(){return I.yf})),n.d(t,"Af",(function(){return I.Af})),n.d(t,"Bf",(function(){return I.Bf})),n.d(t,"Cf",(function(){return I.Cf})),n.d(t,"Df",(function(){return I.Df})),n.d(t,"Gf",(function(){return I.Gf})),n.d(t,"Jf",(function(){return I.Jf})),n.d(t,"Kf",(function(){return I.Kf})),n.d(t,"Nf",(function(){return I.Nf})),n.d(t,"Qf",(function(){return I.Qf})),n.d(t,"Rf",(function(){return I.Rf})),n.d(t,"Sf",(function(){return I.Sf})),n.d(t,"If",(function(){return I.If})),n.d(t,"ee",(function(){return I.ee})),n.d(t,"se",(function(){return I.se})),n.d(t,"xe",(function(){return I.xe})),n.d(t,"oe",(function(){return I.oe})),n.d(t,"Hf",(function(){return I.Hf})),n.d(t,"ge",(function(){return I.ge})),n.d(t,"Je",(function(){return I.Je})),n.d(t,"Ff",(function(){return I.Ff})),n.d(t,"ce",(function(){return I.ce})),n.d(t,"ue",(function(){return I.ue})),n.d(t,"jf",(function(){return I.jf})),n.d(t,"af",(function(){return I.af})),n.d(t,"Dd",(function(){return I.Dd})),n.d(t,"bf",(function(){return I.bf})),n.d(t,"Of",(function(){return I.Of})),n.d(t,"he",(function(){return I.he})),n.d(t,"Pf",(function(){return I.Pf})),n.d(t,"Pe",(function(){return I.Pe})),n.d(t,"Kd",(function(){return I.Kd})),n.d(t,"te",(function(){return I.te})),n.d(t,"if",(function(){return I.if})),n.d(t,"Mf",(function(){return I.Mf})),n.d(t,"Ed",(function(){return I.Ed})),n.d(t,"Jd",(function(){return I.Jd})),n.d(t,"Ef",(function(){return I.Ef})),n.d(t,"qf",(function(){return I.qf})),n.d(t,"be",(function(){return I.be})),n.d(t,"ve",(function(){return I.ve})),n.d(t,"Ab",(function(){return I.Ab})),n.d(t,"O",(function(){return I.O})),n.d(t,"a",(function(){return I.a})),n.d(t,"b",(function(){return I.b})),n.d(t,"c",(function(){return I.c})),n.d(t,"d",(function(){return I.d})),n.d(t,"e",(function(){return I.e})),n.d(t,"f",(function(){return I.f})),n.d(t,"g",(function(){return I.g})),n.d(t,"h",(function(){return I.h})),n.d(t,"i",(function(){return I.i})),n.d(t,"j",(function(){return I.j})),n.d(t,"k",(function(){return I.k})),n.d(t,"l",(function(){return I.l})),n.d(t,"n",(function(){return I.n})),n.d(t,"m",(function(){return I.m})),n.d(t,"o",(function(){return I.o})),n.d(t,"r",(function(){return I.r})),n.d(t,"p",(function(){return I.p})),n.d(t,"q",(function(){return I.q})),n.d(t,"s",(function(){return I.s})),n.d(t,"t",(function(){return I.t})),n.d(t,"u",(function(){return I.u})),n.d(t,"v",(function(){return I.v})),n.d(t,"w",(function(){return I.w})),n.d(t,"x",(function(){return I.x})),n.d(t,"y",(function(){return I.y})),n.d(t,"z",(function(){return I.z})),n.d(t,"A",(function(){return I.A})),n.d(t,"B",(function(){return I.B})),n.d(t,"C",(function(){return I.C})),n.d(t,"D",(function(){return I.D})),n.d(t,"E",(function(){return I.E})),n.d(t,"F",(function(){return I.F})),n.d(t,"G",(function(){return I.G})),n.d(t,"H",(function(){return I.H})),n.d(t,"I",(function(){return I.I})),n.d(t,"J",(function(){return I.J})),n.d(t,"K",(function(){return I.K})),n.d(t,"M",(function(){return I.M})),n.d(t,"N",(function(){return I.N})),n.d(t,"L",(function(){return I.L})),n.d(t,"P",(function(){return I.P})),n.d(t,"Q",(function(){return I.Q})),n.d(t,"R",(function(){return I.R})),n.d(t,"S",(function(){return I.S})),n.d(t,"T",(function(){return I.T})),n.d(t,"U",(function(){return I.U})),n.d(t,"V",(function(){return I.V})),n.d(t,"X",(function(){return I.X})),n.d(t,"W",(function(){return I.W})),n.d(t,"Y",(function(){return I.Y})),n.d(t,"sc",(function(){return I.sc})),n.d(t,"Z",(function(){return I.Z})),n.d(t,"ab",(function(){return I.ab})),n.d(t,"bb",(function(){return I.bb})),n.d(t,"db",(function(){return I.db})),n.d(t,"cb",(function(){return I.cb})),n.d(t,"eb",(function(){return I.eb})),n.d(t,"fb",(function(){return I.fb})),n.d(t,"gb",(function(){return I.gb})),n.d(t,"hb",(function(){return I.hb})),n.d(t,"ib",(function(){return I.ib})),n.d(t,"jb",(function(){return I.jb})),n.d(t,"kb",(function(){return I.kb})),n.d(t,"lb",(function(){return I.lb})),n.d(t,"nb",(function(){return I.nb})),n.d(t,"rb",(function(){return I.rb})),n.d(t,"qb",(function(){return I.qb})),n.d(t,"sb",(function(){return I.sb})),n.d(t,"tb",(function(){return I.tb})),n.d(t,"vb",(function(){return I.vb})),n.d(t,"ub",(function(){return I.ub})),n.d(t,"wb",(function(){return I.wb})),n.d(t,"xb",(function(){return I.xb})),n.d(t,"yb",(function(){return I.yb})),n.d(t,"zb",(function(){return I.zb})),n.d(t,"Db",(function(){return I.Db})),n.d(t,"Eb",(function(){return I.Eb})),n.d(t,"Fb",(function(){return I.Fb})),n.d(t,"Gb",(function(){return I.Gb})),n.d(t,"Hb",(function(){return I.Hb})),n.d(t,"Ib",(function(){return I.Ib})),n.d(t,"Jb",(function(){return I.Jb})),n.d(t,"Kb",(function(){return I.Kb})),n.d(t,"Lb",(function(){return I.Lb})),n.d(t,"Bb",(function(){return I.Bb})),n.d(t,"Cb",(function(){return I.Cb})),n.d(t,"Mb",(function(){return I.Mb})),n.d(t,"Sb",(function(){return I.Sb})),n.d(t,"Nb",(function(){return I.Nb})),n.d(t,"Qb",(function(){return I.Qb})),n.d(t,"Ob",(function(){return I.Ob})),n.d(t,"Pb",(function(){return I.Pb})),n.d(t,"Rb",(function(){return I.Rb})),n.d(t,"Tb",(function(){return I.Tb})),n.d(t,"Ub",(function(){return I.Ub})),n.d(t,"Vb",(function(){return I.Vb})),n.d(t,"Wb",(function(){return I.Wb})),n.d(t,"Xb",(function(){return I.Xb})),n.d(t,"Yb",(function(){return I.Yb})),n.d(t,"Zb",(function(){return I.Zb})),n.d(t,"ac",(function(){return I.ac})),n.d(t,"ec",(function(){return I.ec})),n.d(t,"bc",(function(){return I.bc})),n.d(t,"cc",(function(){return I.cc})),n.d(t,"dc",(function(){return I.dc})),n.d(t,"gc",(function(){return I.gc})),n.d(t,"fc",(function(){return I.fc})),n.d(t,"ic",(function(){return I.ic})),n.d(t,"jc",(function(){return I.jc})),n.d(t,"kc",(function(){return I.kc})),n.d(t,"lc",(function(){return I.lc})),n.d(t,"mc",(function(){return I.mc})),n.d(t,"nc",(function(){return I.nc})),n.d(t,"oc",(function(){return I.oc})),n.d(t,"pc",(function(){return I.pc})),n.d(t,"qc",(function(){return I.qc})),n.d(t,"rc",(function(){return I.rc})),n.d(t,"tc",(function(){return I.tc})),n.d(t,"uc",(function(){return I.uc})),n.d(t,"wc",(function(){return I.wc})),n.d(t,"zc",(function(){return I.zc})),n.d(t,"Ac",(function(){return I.Ac})),n.d(t,"xc",(function(){return I.xc})),n.d(t,"yc",(function(){return I.yc})),n.d(t,"vc",(function(){return I.vc})),n.d(t,"Bc",(function(){return I.Bc})),n.d(t,"Dc",(function(){return I.Dc})),n.d(t,"Ec",(function(){return I.Ec})),n.d(t,"Fc",(function(){return I.Fc})),n.d(t,"md",(function(){return I.md})),n.d(t,"Gc",(function(){return I.Gc})),n.d(t,"Hc",(function(){return I.Hc})),n.d(t,"Ic",(function(){return I.Ic})),n.d(t,"Nc",(function(){return I.Nc})),n.d(t,"Lc",(function(){return I.Lc})),n.d(t,"Mc",(function(){return I.Mc})),n.d(t,"Kc",(function(){return I.Kc})),n.d(t,"Jc",(function(){return I.Jc})),n.d(t,"Pc",(function(){return I.Pc})),n.d(t,"Xc",(function(){return I.Xc})),n.d(t,"hd",(function(){return I.hd})),n.d(t,"Qc",(function(){return I.Qc})),n.d(t,"Wc",(function(){return I.Wc})),n.d(t,"Oc",(function(){return I.Oc})),n.d(t,"Rc",(function(){return I.Rc})),n.d(t,"Sc",(function(){return I.Sc})),n.d(t,"Tc",(function(){return I.Tc})),n.d(t,"Uc",(function(){return I.Uc})),n.d(t,"Vc",(function(){return I.Vc})),n.d(t,"Zc",(function(){return I.Zc})),n.d(t,"Yc",(function(){return I.Yc})),n.d(t,"ad",(function(){return I.ad})),n.d(t,"cd",(function(){return I.cd})),n.d(t,"dd",(function(){return I.dd})),n.d(t,"ed",(function(){return I.ed})),n.d(t,"fd",(function(){return I.fd})),n.d(t,"gd",(function(){return I.gd})),n.d(t,"id",(function(){return I.id})),n.d(t,"jd",(function(){return I.jd})),n.d(t,"nd",(function(){return I.nd})),n.d(t,"od",(function(){return I.od})),n.d(t,"pd",(function(){return I.pd})),n.d(t,"qd",(function(){return I.qd})),n.d(t,"rd",(function(){return I.rd})),n.d(t,"sd",(function(){return I.sd})),n.d(t,"td",(function(){return I.td})),n.d(t,"ud",(function(){return I.ud})),n.d(t,"bd",(function(){return I.bd})),n.d(t,"mb",(function(){return I.mb})),n.d(t,"Cc",(function(){return I.Cc})),n.d(t,"vd",(function(){return I.vd})),n.d(t,"ob",(function(){return I.ob})),n.d(t,"pb",(function(){return I.pb}));var r=n(5),a=(n(135),n(18)),s=n(178),o=n(179),i=n(85),c=n(177);class u{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got ".concat(t));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&Object(a.b)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))):setTimeout(e,t)}isTypedArray(e){return Object(c.a)(e)}}if(Object(a.b)().get("IS_BROWSER")){Object(a.b)().setPlatform("browser",new u);try{i.a.registerManager(o.a.URL_SCHEME,new o.b)}catch(N){}try{i.a.registerManager(s.a.URL_SCHEME,new s.b)}catch(N){}}n(245);var l=n(42),d=n(11),h=n(64),p=n(143),f=n(6);Object(r.b)();const m={buffer:l.a,cast:d.a,clone:h.a,print:p.a};Object(f.f)(m);var g=n(107),b=n(110),y=n(111),v=n(112),x=n(113),w=n(114),O=n(88),k=n(108);const S=[g.a,b.a,y.a,v.a,x.a,w.a,O.a];var I=n(139);!function(){for(const e of S)Object(k.registerClass)(e)}()},function(e,t,n){"use strict";n.d(t,"d",(function(){return a})),n.d(t,"e",(function(){return s})),n.d(t,"f",(function(){return o})),n.d(t,"b",(function(){return i})),n.d(t,"g",(function(){return u})),n.d(t,"c",(function(){return l})),n.d(t,"a",(function(){return d}));var r=n(0);function a(e,t,n,a,o){const i=t.inputParams[e];if(i&&void 0!==i.inputIndexStart){const e=i.inputIndexStart,c=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?e+1:i.inputIndexEnd,u=e<0?t.inputNames.length+e:e;if("tensor"===i.type)return s(t.inputNames[u],n,a,o);if("tensors"===i.type){const r=t.inputs.slice(e,c);return t.inputNames.slice(e,c).filter((e,t)=>{var n;return"NoOp"!==(null===(n=r[t])||void 0===n?void 0:n.op)}).map(e=>s(e,n,a,o))}const l=s(t.inputNames[u],n,a,o),d=l.dataSync();return"number"===i.type?d[0]:r.Mf.toNestedArray(l.shape,d)}const c=t.attrParams[e];return c&&c.value}function s(e,t,n,r){const[a,s]=u(e,n);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const o=n.currentContextIds.find(e=>!!t[c(a,e)]);return void 0!==o?t[c(a,o)][s]:void 0}function o(e,t,n){return t[c(e,n.currentContextId)]}function i(e,t){const[n,r,a]=u(e,t);return[c(n,t&&t.currentContextId),r,a]}function c(e,t){return t?"".concat(e,"-").concat(t):e}function u(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let a;if(1===r.length)a=[e,0,void 0];else{const e=r[0],t=3===r.length?r[1]:void 0;a=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,a),a}function l(e,t,n){let r=a("pad",e,t,n);if("explicit"===r){r=a("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function d(e){return e.kept?e:Object(r.Od)(e)}},function(e,t,n){"use strict";n.d(t,"c",(function(){return u})),n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return h}));var r=n(5),a=n(18),s=n(6),o=n(52),i=n(10),c=n(8);function u(e,t){let n=e;if(Object(i.isTypedArray)(e))return"string"===t?[]:[e.length];if(Object(o.a)(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Object(o.b)(e))return[e.buffer.size/(null==t?4:Object(c.h)(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Object(i.isTypedArray)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Object(a.b)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,n,r){if(r=r||[],!Array.isArray(t)&&!Object(i.isTypedArray)(t))return void Object(c.c)(0===n.length,()=>"Element arr[".concat(r.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(n[0]," elements"));Object(c.c)(n.length>0,()=>"Element arr[".concat(r.join("]["),"] should be a primitive, ")+"but is an array of ".concat(t.length," elements")),Object(c.c)(t.length===n[0],()=>"Element arr[".concat(r.join("]["),"] should have ").concat(n[0]," ")+"elements, but has ".concat(t.length," elements"));const a=n.slice(1);for(let s=0;s<t.length;++s)e(t[s],a,r.concat(s))}(e,r,[]),r}function l(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error("Argument '".concat(n,"' passed to '").concat(r,"' must ")+"be ".concat(e," tensor, but got ").concat(t," tensor"))}}function d(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof Object(s.d)())return l(a,e.dtype,t,n),e;let o=Object(c.s)(e);if("string"!==o&&["bool","int32","float32"].indexOf(a)>=0&&(o=a),l(a,o,t,n),null==e||!Object(i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const r=null==e?"null":e.constructor.name;throw new Error("Argument '".concat(t,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(r,"'"))}const d=u(e,o);Object(i.isTypedArray)(e)||Array.isArray(e)||(e=[e]);const h=!0,p="string"!==o?Object(i.toTypedArray)(e,o):Object(i.flatten)(e,[],h);return r.a.makeTensor(p,d,o)}function h(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error("Argument ".concat(t," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");const a=e;return a.map((e,a)=>d(e,"".concat(t,"[").concat(a,"]"),n,r))}},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return s})),n.d(t,"d",(function(){return o})),n.d(t,"e",(function(){return i})),n.d(t,"f",(function(){return c})),n.d(t,"g",(function(){return u})),n.d(t,"h",(function(){return l})),n.d(t,"i",(function(){return d})),n.d(t,"j",(function(){return h})),n.d(t,"k",(function(){return p})),n.d(t,"l",(function(){return f})),n.d(t,"n",(function(){return m})),n.d(t,"m",(function(){return g})),n.d(t,"o",(function(){return b})),n.d(t,"r",(function(){return y})),n.d(t,"p",(function(){return v})),n.d(t,"q",(function(){return x})),n.d(t,"s",(function(){return w})),n.d(t,"t",(function(){return O})),n.d(t,"u",(function(){return k})),n.d(t,"v",(function(){return S})),n.d(t,"x",(function(){return I})),n.d(t,"w",(function(){return N})),n.d(t,"y",(function(){return T})),n.d(t,"z",(function(){return j})),n.d(t,"A",(function(){return E})),n.d(t,"B",(function(){return C})),n.d(t,"C",(function(){return A})),n.d(t,"D",(function(){return R})),n.d(t,"E",(function(){return F})),n.d(t,"F",(function(){return _})),n.d(t,"G",(function(){return M})),n.d(t,"H",(function(){return D})),n.d(t,"I",(function(){return L})),n.d(t,"J",(function(){return z})),n.d(t,"K",(function(){return P})),n.d(t,"L",(function(){return B})),n.d(t,"N",(function(){return W})),n.d(t,"O",(function(){return U})),n.d(t,"M",(function(){return V})),n.d(t,"P",(function(){return G})),n.d(t,"Q",(function(){return H})),n.d(t,"R",(function(){return q})),n.d(t,"S",(function(){return K})),n.d(t,"T",(function(){return X})),n.d(t,"U",(function(){return Y})),n.d(t,"V",(function(){return Q})),n.d(t,"X",(function(){return Z})),n.d(t,"W",(function(){return J})),n.d(t,"Y",(function(){return $})),n.d(t,"rc",(function(){return ee})),n.d(t,"Z",(function(){return te})),n.d(t,"ab",(function(){return ne})),n.d(t,"bb",(function(){return re})),n.d(t,"db",(function(){return ae})),n.d(t,"cb",(function(){return se})),n.d(t,"eb",(function(){return oe})),n.d(t,"fb",(function(){return ie})),n.d(t,"gb",(function(){return ce})),n.d(t,"hb",(function(){return ue})),n.d(t,"ib",(function(){return le})),n.d(t,"jb",(function(){return de})),n.d(t,"kb",(function(){return he})),n.d(t,"lb",(function(){return pe})),n.d(t,"nb",(function(){return fe})),n.d(t,"rb",(function(){return me})),n.d(t,"qb",(function(){return ge})),n.d(t,"sb",(function(){return be})),n.d(t,"tb",(function(){return ye})),n.d(t,"vb",(function(){return ve})),n.d(t,"ub",(function(){return xe})),n.d(t,"wb",(function(){return we})),n.d(t,"xb",(function(){return Oe})),n.d(t,"yb",(function(){return ke})),n.d(t,"zb",(function(){return Se})),n.d(t,"Cb",(function(){return Ie})),n.d(t,"Db",(function(){return Ne})),n.d(t,"Eb",(function(){return Te})),n.d(t,"Fb",(function(){return je})),n.d(t,"Gb",(function(){return Ee})),n.d(t,"Hb",(function(){return Ce})),n.d(t,"Jb",(function(){return Ae})),n.d(t,"Kb",(function(){return Re})),n.d(t,"Lb",(function(){return Fe})),n.d(t,"Ib",(function(){return _e})),n.d(t,"Ab",(function(){return Me})),n.d(t,"Bb",(function(){return De})),n.d(t,"Mb",(function(){return Le})),n.d(t,"Sb",(function(){return ze})),n.d(t,"Nb",(function(){return Pe})),n.d(t,"Qb",(function(){return Be})),n.d(t,"Ob",(function(){return We})),n.d(t,"Pb",(function(){return Ue})),n.d(t,"Rb",(function(){return Ve})),n.d(t,"Tb",(function(){return Ge})),n.d(t,"Ub",(function(){return He})),n.d(t,"Vb",(function(){return qe})),n.d(t,"Wb",(function(){return Ke})),n.d(t,"Xb",(function(){return Xe})),n.d(t,"Yb",(function(){return Ye})),n.d(t,"Zb",(function(){return Qe})),n.d(t,"ac",(function(){return Ze})),n.d(t,"ec",(function(){return Je})),n.d(t,"bc",(function(){return $e})),n.d(t,"cc",(function(){return et})),n.d(t,"dc",(function(){return tt})),n.d(t,"gc",(function(){return nt})),n.d(t,"fc",(function(){return rt})),n.d(t,"hc",(function(){return at})),n.d(t,"ic",(function(){return st})),n.d(t,"jc",(function(){return ot})),n.d(t,"kc",(function(){return it})),n.d(t,"lc",(function(){return ct})),n.d(t,"mc",(function(){return ut})),n.d(t,"nc",(function(){return lt})),n.d(t,"oc",(function(){return dt})),n.d(t,"pc",(function(){return ht})),n.d(t,"qc",(function(){return pt})),n.d(t,"sc",(function(){return ft})),n.d(t,"tc",(function(){return mt})),n.d(t,"vc",(function(){return gt})),n.d(t,"yc",(function(){return bt})),n.d(t,"zc",(function(){return yt})),n.d(t,"wc",(function(){return vt})),n.d(t,"xc",(function(){return xt})),n.d(t,"uc",(function(){return wt})),n.d(t,"Ac",(function(){return Ot})),n.d(t,"Cc",(function(){return kt})),n.d(t,"Dc",(function(){return St})),n.d(t,"Ec",(function(){return It})),n.d(t,"jd",(function(){return Nt})),n.d(t,"Fc",(function(){return Tt})),n.d(t,"Gc",(function(){return jt})),n.d(t,"Hc",(function(){return Et})),n.d(t,"Mc",(function(){return Ct})),n.d(t,"Kc",(function(){return At})),n.d(t,"Lc",(function(){return Rt})),n.d(t,"Jc",(function(){return Ft})),n.d(t,"Ic",(function(){return _t})),n.d(t,"Oc",(function(){return Mt})),n.d(t,"Wc",(function(){return Dt})),n.d(t,"gd",(function(){return Lt})),n.d(t,"Pc",(function(){return zt})),n.d(t,"Vc",(function(){return Pt})),n.d(t,"Nc",(function(){return Bt})),n.d(t,"Qc",(function(){return Wt})),n.d(t,"Rc",(function(){return Ut})),n.d(t,"Sc",(function(){return Vt})),n.d(t,"Tc",(function(){return Gt})),n.d(t,"Uc",(function(){return Ht})),n.d(t,"Yc",(function(){return qt})),n.d(t,"Xc",(function(){return Kt})),n.d(t,"Zc",(function(){return Xt})),n.d(t,"bd",(function(){return Yt})),n.d(t,"cd",(function(){return Qt})),n.d(t,"dd",(function(){return Zt})),n.d(t,"ed",(function(){return Jt})),n.d(t,"fd",(function(){return $t})),n.d(t,"hd",(function(){return en})),n.d(t,"id",(function(){return tn})),n.d(t,"kd",(function(){return nn})),n.d(t,"ld",(function(){return rn})),n.d(t,"md",(function(){return an})),n.d(t,"nd",(function(){return sn})),n.d(t,"od",(function(){return on})),n.d(t,"pd",(function(){return cn})),n.d(t,"qd",(function(){return un})),n.d(t,"rd",(function(){return ln})),n.d(t,"ad",(function(){return dn})),n.d(t,"mb",(function(){return hn})),n.d(t,"Bc",(function(){return pn})),n.d(t,"sd",(function(){return fn})),n.d(t,"ob",(function(){return mn})),n.d(t,"pb",(function(){return gn}));const r="Abs",a="Acos",s="Acosh",o="Add",i="AddN",c="All",u="Any",l="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",g="Atan2",b="AvgPool",y="AvgPoolGrad",v="AvgPool3D",x="AvgPool3DGrad",w="BatchMatMul",O="BatchToSpaceND",k="Bincount",S="BitwiseAnd",I="BroadcastTo",N="BroadcastArgs",T="Cast",j="Ceil",E="ClipByValue",C="Complex",A="ComplexAbs",R="Concat",F="Conv2D",_="Conv2DBackpropFilter",M="Conv2DBackpropInput",D="Conv3D",L="Conv3DBackpropFilterV2",z="Conv3DBackpropInputV2",P="Cos",B="Cosh",W="Cumprod",U="Cumsum",V="CropAndResize",G="DenseBincount",H="DepthToSpace",q="DepthwiseConv2dNative",K="DepthwiseConv2dNativeBackpropFilter",X="DepthwiseConv2dNativeBackpropInput",Y="Diag",Q="Dilation2D",Z="Dilation2DBackpropInput",J="Dilation2DBackpropFilter",$="Draw",ee="RealDiv",te="Einsum",ne="Elu",re="EluGrad",ae="Erf",se="Equal",oe="Exp",ie="ExpandDims",ce="Expm1",ue="FFT",le="Fill",de="FlipLeftRight",he="Floor",pe="FloorDiv",fe="FusedBatchNorm",me="GatherV2",ge="GatherNd",be="Greater",ye="GreaterEqual",ve="Identity",xe="IFFT",we="Imag",Oe="IsFinite",ke="IsInf",Se="IsNan",Ie="LeakyRelu",Ne="Less",Te="LessEqual",je="LinSpace",Ee="Log",Ce="Log1p",Ae="LogicalAnd",Re="LogicalNot",Fe="LogicalOr",_e="LogSoftmax",Me="LRN",De="LRNGrad",Le="Max",ze="Maximum",Pe="MaxPool",Be="MaxPoolGrad",We="MaxPool3D",Ue="MaxPool3DGrad",Ve="MaxPoolWithArgmax",Ge="Mean",He="Min",qe="Minimum",Ke="MirrorPad",Xe="Mod",Ye="Multinomial",Qe="Multiply",Ze="Neg",Je="NotEqual",$e="NonMaxSuppressionV3",et="NonMaxSuppressionV4",tt="NonMaxSuppressionV5",nt="OnesLike",rt="OneHot",at="Pack",st="PadV2",ot="Pow",it="Prelu",ct="Prod",ut="RaggedGather",lt="RaggedRange",dt="RaggedTensorToTensor",ht="Range",pt="Real",ft="Reciprocal",mt="Relu",gt="Reshape",bt="ResizeNearestNeighbor",yt="ResizeNearestNeighborGrad",vt="ResizeBilinear",xt="ResizeBilinearGrad",wt="Relu6",Ot="Reverse",kt="Round",St="Rsqrt",It="ScatterNd",Nt="TensorScatterUpdate",Tt="SearchSorted",jt="Select",Et="Selu",Ct="Slice",At="Sin",Rt="Sinh",Ft="Sign",_t="Sigmoid",Mt="Softplus",Dt="Sqrt",Lt="Sum",zt="SpaceToBatchND",Pt="SplitV",Bt="Softmax",Wt="SparseFillEmptyRows",Ut="SparseReshape",Vt="SparseSegmentMean",Gt="SparseSegmentSum",Ht="SparseToDense",qt="SquaredDifference",Kt="Square",Xt="StaticRegexReplace",Yt="StridedSlice",Qt="StringNGrams",Zt="StringSplit",Jt="StringToHashBucketFast",$t="Sub",en="Tan",tn="Tanh",nn="Tile",rn="TopK",an="Transform",sn="Transpose",on="Unique",cn="Unpack",un="UnsortedSegmentSum",ln="ZerosLike",dn="Step",hn="FromPixels",pn="RotateWithOffset",fn="_FusedMatMul",mn="FusedConv2D",gn="FusedDepthwiseConv2D"},function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return o}));var r=n(5),a=n(8);const s="__op";function o(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(t.length," keys."));let n=t[0];const o=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const i=function(){r.a.startScope(n);try{const e=o(...arguments);return Object(a.y)(e)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(e),e}catch(e){throw r.a.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return v})),n.d(t,"a",(function(){return x}));var r=n(136),a=n(18),s=n(103),o=n(3),i=n(56),c=n(70),u=n(10),l=n(8);class d{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let o;const i=u.now();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();o=Promise.resolve({kernelMs:u.now()-i})}if(Object(a.b)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let a=0;a<r.length;a++){const t=r[a];t.data().then(n=>{h(n,t.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then(e=>e.kernelMs),extraInfo:o.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(e=>{Promise.all([e.data(),r,s]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])})})}}function h(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn("Found ".concat(t," in the result of '").concat(n,"'")),!0}return!1}class p{logKernelProfile(e,t,n,r,a,s){const o="number"===typeof r?l.L("".concat(r,"ms"),9):r.error,i=l.L(e,25),c=t.rank,u=t.size,d=l.L(t.shape.toString(),14);let h="";for(const l in a){const e=a[l];if(null!=e){const n=e.shape||t.shape,r=n.length;h+="".concat(l,": ").concat(r,"D ").concat(r>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(o,"\t%c").concat(c,"D ").concat(d,"\t%c").concat(u,"\t%c").concat(h,"\t%c").concat(s),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(6),m=n(23);function g(e){return null!=e.kernelName}class b{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class y{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new b}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error("The highest priority backend '".concat(e,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(c.b("".concat(e," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error("Backend name '".concat(e,"' not found in registry"));if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new d(this.backendInstance),!0}setupRegisteredKernels(){Object(i.c)(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Object(i.c)(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error("Cannot initialize backend ".concat(e,", no registration found."));try{const n=t.factory();if(!n||n instanceof r.b||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,c.b("Initialization of backend ".concat(e," failed")),c.b(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return c.b("Initialization of backend ".concat(e," failed")),c.b(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error("".concat(e," backend not found in registry"));this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return y.nextTensorId++}nextVariableId(){return y.nextVariableId++}clone(e){const t=x.runKernel(o.vb,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],e=>({x:()=>{const t={x:e},n={dtype:"float32"};return x.runKernel(o.y,t,n)}}),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=Object(i.b)(e,this.backendName)))throw new Error("Kernel '".concat(e,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-a-s;if(o>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(o," data ids) after running '").concat(e,"'"))}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let o,c;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const u=Object(i.b)(t,this.backendName);l.c(null!=u,()=>"Cannot find registered kernel '".concat(t,"' for backend '").concat(this.backendName,"'")),o=()=>{const e=this.backend.numDataIds();c=u.kernelFunc({inputs:a,attrs:s,backend:this.backend});const o=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const i=o.map(e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e));if(r){const e=this.getTensorsForGradient(t,a,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};o=()=>{const e=this.backend.numDataIds();c=this.tidy(()=>t(this.backend,a));const n=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:d,attrs:h}=e,p=g(e)?null:e.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(u,d,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=o()}),r&&this.addTapeNode(u,d,t,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(e=>null!=d[e]?d[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(c)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=Object(i.a)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(l.c(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(t).map(e=>t[e])):s=e.map(e=>t[e]);const o=n.filter((e,t)=>a[t]);return s.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&l.A(e[0])&&(a=e.map(e=>u.encodeString(e)));const s=r.write(a,t,n),o=new f.a(t,n,s,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(s),t=Object(l.g)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){const a={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:a}=e,s=new f.a(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new f.c(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error("Variable with name ".concat(a.name," was already registered"));return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*l.h(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f.c||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*l.h(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},c=Object(i.a)(e);null!=c&&(r=c.gradFunc),null!=r&&(o.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=l.F(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Object(m.getTensorsInContainer)(e),n=new Set(t.map(e=>e.id));for(let a=0;a<this.state.activeScope.track.length;a++){const e=this.state.activeScope.track[a];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(l.c(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));l.c(a instanceof f.a,()=>"The result y returned by f() must be a tensor.");const s=function(e,t,n){const r={},a={};for(let c=0;c<t.length;c++)r[t[c].id]=!0;for(let c=0;c<e.length;c++){const n=e[c],s=n.inputs;for(const e in s){const o=s[e];let i=!1;for(let e=0;e<t.length;e++)if(r[o.id]){n.outputs.forEach(e=>r[e.id]=!0),i=!0,a[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let c=e.length-1;c>=0;c--){const t=e[c],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let c=0;c<e.length;c++){const t=e[c];if(a[t.id]&&o[t.id]){const e={};for(const a in t.inputs){const n=t.inputs[a];r[n.id]&&(e[a]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[a.id]=null==n?function(e){const t=Object(l.D)(Object(l.O)(e),"float32");return x.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],o=[];if(s.outputs.forEach(t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)}),null==s.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(s.kernelName,"."));const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error("Cannot backprop through input ".concat(t,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const a=n(()=>i[t]());if("float32"!==a.dtype)throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"".concat(t," must have 'float32' dtype, but has '").concat(a.dtype,"'"));const o=s.inputs[t];if(!l.a(a.shape,o.shape))throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"'".concat(t,"' has shape '").concat(a.shape,"', which does not match ")+"the shape of the input '".concat(o.shape,"'"));if(null==e[o.id])e[o.id]=a;else{const t=e[o.id];e[o.id]=r(t,a),t.dispose()}}}}(e,s,e=>this.tidy(e),w);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(e){var t=this;return l.c(l.v(e),()=>"The f passed in customGrad(f) must be a function."),function(){for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];let s;l.c(r.every(e=>e instanceof f.a),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const o={};r.forEach((e,t)=>{o[t]=e});const i=(t,n)=>(s=e(...r,n),l.c(s.value instanceof f.a,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),l.c(l.v(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),c=(e,t)=>{const n=s.gradFunc(e,t),a=Array.isArray(n)?n:[n];l.c(a.length===r.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),l.c(a.every(e=>e instanceof f.a),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const o={};return a.forEach((e,t)=>{o[t]=()=>e}),o};return t.runKernelFunc({forwardFunc:i,backwardsFunc:c,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Object(u.now)(),n=await this.backend.time(e);return n.wallMs=Object(u.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new b;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function v(){const e=Object(s.b)();if(null==e._tfengine){const t=new a.a(e);e._tfengine=new y(t)}return Object(a.c)(e._tfengine.ENV),Object(f.g)(()=>e._tfengine),e._tfengine}y.nextTensorId=0,y.nextVariableId=0;const x=v();function w(e,t){const n={a:e,b:t};return x.runKernel(o.d,n)}},function(e,t,n){"use strict";n.d(t,"b",(function(){return l})),n.d(t,"g",(function(){return f})),n.d(t,"f",(function(){return m})),n.d(t,"e",(function(){return g})),n.d(t,"a",(function(){return b})),n.d(t,"d",(function(){return y})),n.d(t,"c",(function(){return v}));var r=n(103),a=n(8);function s(e,t,n,r){const s=Object(a.k)(t),u=function(e,t,n,r){const s=Object(a.O)(t),i=r[r.length-1],u=new Array(i).fill(0),l=t.length,d="complex64"===n?c(e):e;if(l>1)for(let a=0;a<s/i;a++){const e=a*i;for(let t=0;t<i;t++)u[t]=Math.max(u[t],o(d[e+t],0,n).length)}return u}(e,t,n,s),l=t.length,d=function e(t,n,r,a,s){let u=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const l="complex64"===r?2:1,d=n[0],h=n.length;if(0===h){if("complex64"===r){return[o(c(t)[0],0,r)]}return"bool"===r?[i(t[0])]:[t[0].toString()]}if(1===h){if(d>20){const e=3*l;let n=Array.from(t.slice(0,e)),a=Array.from(t.slice((d-3)*l,d*l));return"complex64"===r&&(n=c(n),a=c(a)),["["+n.map((e,t)=>o(e,s[t],r)).join(", ")+", ..., "+a.map((e,t)=>o(e,s[d-3+t],r)).join(", ")+"]"]}return["["+("complex64"===r?c(t):Array.from(t)).map((e,t)=>o(e,s[t],r)).join(", ")+"]"]}const p=n.slice(1),f=a.slice(1),m=a[0]*l,g=[];if(d>20){for(let n=0;n<3;n++){const a=n*m,o=a+m;g.push(...e(t.slice(a,o),p,r,f,s,!1))}g.push("...");for(let n=d-3;n<d;n++){const a=n*m,o=a+m;g.push(...e(t.slice(a,o),p,r,f,s,n===d-1))}}else for(let o=0;o<d;o++){const n=o*m,a=n+m;g.push(...e(t.slice(n,a),p,r,f,s,o===d-1))}const b=2===h?",":"";g[0]="["+(d>0?g[0]+b:"");for(let o=1;o<g.length-1;o++)g[o]=" "+g[o]+b;let y=",\n";for(let o=2;o<h;o++)y+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(u?"":y),g}(e,t,n,s,u),h=["Tensor"];return r&&(h.push("  dtype: ".concat(n)),h.push("  rank: ".concat(l)),h.push("  shape: [".concat(t,"]")),h.push("  values:")),h.push(d.map(e=>"    "+e).join("\n")),h.join("\n")}function o(e,t,n){let r;return r=Array.isArray(e)?"".concat(parseFloat(e[0].toFixed(7))," + ")+"".concat(parseFloat(e[1].toFixed(7)),"j"):Object(a.A)(e)?"'".concat(e,"'"):"bool"===n?i(e):parseFloat(e.toFixed(7)).toString(),Object(a.L)(r,t)}function i(e){return 0===e?"false":"true"}function c(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var u=n(10);class l{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.O(e),null!=n){const e=n.length;a.c(e===this.size,()=>"Length of values '".concat(e,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'."))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.o(t,this.size),this.strides=Object(a.k)(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),a.c(n.length===this.rank,()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")"));const s=this.locToIndex(n);this.values[s]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let r=0;for(const s of t){if(s<0||s>=this.shape[r]){const e="Requested out of range element at ".concat(t,". ")+"  Buffer shape=".concat(this.shape);throw new Error(e)}r++}let a=t[t.length-1];for(let s=0;s<t.length-1;++s)a+=this.strides[s]*t[s];return this.values[a]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return d().makeTensor(this.values,this.shape,this.dtype)}}let d=null,h=null,p=null;function f(e){d=e}function m(e){h=e}function g(e){p=e}class b{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.O(e),this.strides=Object(a.k)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return h.buffer(this.shape,this.dtype,e)}bufferSync(){return h.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Object(a.U)(this.shape,e,"complex64"===this.dtype)}arraySync(){return Object(a.U)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=d().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map(e=>u.decodeString(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),d().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=d().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>u.decodeString(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await d().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),d().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return h.print(this,e)}clone(){return this.throwIfDisposed(),h.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),h.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),d().makeVariable(this,e,t,n)}}function y(){return Object(r.a)("Tensor",()=>b)}Object.defineProperty(b,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),y();class v extends b{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(e.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!a.a(e.shape,this.shape))throw new Error("shape of the new value (".concat(e.shape,") and ")+"previous value (".concat(this.shape,") must match"));d().disposeTensor(this),this.dataId=e.dataId,d().incRef(this,null)}dispose(){d().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(v,Symbol.hasInstance,{value:e=>e instanceof b&&null!=e.assign&&e.assign instanceof Function})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({reshape_:function(e,t){const n={x:Object(s.a)(e,"x","reshape","string_or_numeric")},o={shape:t};return r.a.runKernel(a.vc,n,o)}})},function(e,t,n){"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,i(e,t,n)}function a(e,t){if(e.length!==t.length)throw new Error("Array sizes must match to be shuffled together "+"First array length was ".concat(e.length)+"Second array length was ".concat(t.length));let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,i(e,n,r),i(t,n,r)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function o(e){return e%2===0?e:e+1}function i(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function c(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function u(e,t){const n=Math.random();return t*n+(1-n)*e}function l(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function d(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function h(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";d(b(e,t),()=>n+" Shapes ".concat(e," and ").concat(t," must match"))}function p(e){d(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function b(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function y(e){return e%1===0}function v(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function O(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function k(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return new Promise((a,s)=>{let o=0;const i=()=>{if(e())return void a();o++;const c=t(o);null!=n&&o>=n?s():null!=r?r(i,c):setTimeout(i,c)};i()})}function S(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==r)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(r," and dim ").concat(s));r=s}else if(e[s]<0)throw Error("Shapes can not be < 0. Found ".concat(e[s]," at dim ").concat(s));if(-1===r){if(t>0&&t!==n)throw Error("Size(".concat(t,") must match the product of shape ").concat(e));return e}if(0===n)throw Error("Cannot infer the missing size in [".concat(e,"] when ")+"there are 0 elements");if(t%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(t," / ").concat(n));const a=e.slice();return a[r]=t/n,a}function I(e,t){const n=t.length;return d((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(e)),d(e.every(e=>y(e)),()=>"All values in axis param must be integers but "+"got axis ".concat(e)),e.map(e=>e<0?n+e:e)}function N(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:I(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=s){if(s[o]===i&&1!==e[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(e[i],"' is not 1"));(null==s[o]||s[o]>i)&&1===e[i]&&(n.push(e[i]),r.push(i)),s[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),r.push(i))}return{newShape:n,keptDims:r}}function T(e,t){return j(e,t)}function j(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type ".concat(e));n=new Array(t)}return n}function E(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error("A tensor of type ".concat(t," being uploaded contains ").concat(r,"."))}}function C(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function A(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function R(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype ".concat(e))}function F(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function _(e){return"string"===typeof e||e instanceof String}function M(e){return"boolean"===typeof e}function D(e){return"number"===typeof e}function L(e){return Array.isArray(e)?L(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":D(e)?"float32":_(e)?"string":M(e)?"bool":"float32"}function z(e){return!!(e&&e.constructor&&e.call&&e.apply)}function P(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function B(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function W(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce((e,t)=>e*t)*(r?2:1);for(let t=0;t<s;t++)a[t]=W(e+t*i,o,n,r)}return a}function U(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error("[".concat(e,"] does not match the input size ").concat(t.length).concat(n?" for a complex tensor":"","."));return W(0,e,t,n)}function V(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error("Unknown dtype ".concat(t))}function G(e,t){const n=H(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function H(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type ".concat(t))}function q(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return U(e,new Float32Array(n));if("int32"===t)return U(e,new Int32Array(n));if("bool"===t)return U(e,new Uint8Array(n));throw new Error("Unknown data type ".concat(t))}function K(e){e.forEach(t=>{d(Number.isInteger(t)&&t>=0,()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(e,"]."))})}function X(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function Y(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function Q(e){return e&&e.then&&"function"===typeof e.then}n.d(t,"M",(function(){return r})),n.d(t,"N",(function(){return a})),n.d(t,"j",(function(){return s})),n.d(t,"H",(function(){return o})),n.d(t,"S",(function(){return i})),n.d(t,"R",(function(){return c})),n.d(t,"J",(function(){return u})),n.d(t,"n",(function(){return l})),n.d(t,"c",(function(){return d})),n.d(t,"f",(function(){return h})),n.d(t,"e",(function(){return p})),n.d(t,"O",(function(){return f})),n.d(t,"z",(function(){return m})),n.d(t,"b",(function(){return g})),n.d(t,"a",(function(){return b})),n.d(t,"w",(function(){return y})),n.d(t,"T",(function(){return v})),n.d(t,"P",(function(){return x})),n.d(t,"m",(function(){return w})),n.d(t,"L",(function(){return O})),n.d(t,"K",(function(){return k})),n.d(t,"t",(function(){return S})),n.d(t,"I",(function(){return I})),n.d(t,"Q",(function(){return N})),n.d(t,"p",(function(){return T})),n.d(t,"o",(function(){return j})),n.d(t,"i",(function(){return E})),n.d(t,"B",(function(){return C})),n.d(t,"q",(function(){return A})),n.d(t,"h",(function(){return R})),n.d(t,"g",(function(){return F})),n.d(t,"A",(function(){return _})),n.d(t,"u",(function(){return M})),n.d(t,"x",(function(){return D})),n.d(t,"s",(function(){return L})),n.d(t,"v",(function(){return z})),n.d(t,"G",(function(){return P})),n.d(t,"k",(function(){return B})),n.d(t,"U",(function(){return U})),n.d(t,"l",(function(){return V})),n.d(t,"D",(function(){return G})),n.d(t,"F",(function(){return H})),n.d(t,"E",(function(){return q})),n.d(t,"d",(function(){return K})),n.d(t,"C",(function(){return X})),n.d(t,"r",(function(){return Y})),n.d(t,"y",(function(){return Q}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(23),o=n(2),i=n(4);const c=Object(i.b)({mul_:function(e,t){let n=Object(o.a)(e,"a","mul"),i=Object(o.a)(t,"b","mul");[n,i]=Object(s.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.Zb,c)}})},function(e,t,n){"use strict";n.r(t),n.d(t,"shuffle",(function(){return s.M})),n.d(t,"shuffleCombo",(function(){return s.N})),n.d(t,"clamp",(function(){return s.j})),n.d(t,"nearestLargerEven",(function(){return s.H})),n.d(t,"swap",(function(){return s.S})),n.d(t,"sum",(function(){return s.R})),n.d(t,"randUniform",(function(){return s.J})),n.d(t,"distSquared",(function(){return s.n})),n.d(t,"assert",(function(){return s.c})),n.d(t,"assertShapesMatch",(function(){return s.f})),n.d(t,"assertNonNull",(function(){return s.e})),n.d(t,"sizeFromShape",(function(){return s.O})),n.d(t,"isScalarShape",(function(){return s.z})),n.d(t,"arraysEqualWithNull",(function(){return s.b})),n.d(t,"arraysEqual",(function(){return s.a})),n.d(t,"isInt",(function(){return s.w})),n.d(t,"tanh",(function(){return s.T})),n.d(t,"sizeToSquarishShape",(function(){return s.P})),n.d(t,"createShuffledIndices",(function(){return s.m})),n.d(t,"rightPad",(function(){return s.L})),n.d(t,"repeatedTry",(function(){return s.K})),n.d(t,"inferFromImplicitShape",(function(){return s.t})),n.d(t,"parseAxisParam",(function(){return s.I})),n.d(t,"squeezeShape",(function(){return s.Q})),n.d(t,"getTypedArrayFromDType",(function(){return s.p})),n.d(t,"getArrayFromDType",(function(){return s.o})),n.d(t,"checkConversionForErrors",(function(){return s.i})),n.d(t,"isValidDtype",(function(){return s.B})),n.d(t,"hasEncodingLoss",(function(){return s.q})),n.d(t,"bytesPerElement",(function(){return s.h})),n.d(t,"bytesFromStringArray",(function(){return s.g})),n.d(t,"isString",(function(){return s.A})),n.d(t,"isBoolean",(function(){return s.u})),n.d(t,"isNumber",(function(){return s.x})),n.d(t,"inferDtype",(function(){return s.s})),n.d(t,"isFunction",(function(){return s.v})),n.d(t,"nearestDivisor",(function(){return s.G})),n.d(t,"computeStrides",(function(){return s.k})),n.d(t,"toNestedArray",(function(){return s.U})),n.d(t,"convertBackendValuesAndArrayBuffer",(function(){return s.l})),n.d(t,"makeOnesTypedArray",(function(){return s.D})),n.d(t,"makeZerosTypedArray",(function(){return s.F})),n.d(t,"makeZerosNestedTypedArray",(function(){return s.E})),n.d(t,"assertNonNegativeIntegerDimensions",(function(){return s.d})),n.d(t,"locToIndex",(function(){return s.C})),n.d(t,"indexToLoc",(function(){return s.r})),n.d(t,"isPromise",(function(){return s.y})),n.d(t,"hexToLong",(function(){return c})),n.d(t,"fingerPrint64",(function(){return O})),n.d(t,"createScalarValue",(function(){return k})),n.d(t,"toTypedArray",(function(){return S})),n.d(t,"now",(function(){return I})),n.d(t,"fetch",(function(){return N})),n.d(t,"encodeString",(function(){return T})),n.d(t,"decodeString",(function(){return j})),n.d(t,"isTypedArray",(function(){return E})),n.d(t,"flatten",(function(){return C}));var r=n(18),a=n(177),s=n(8),o=n(186);const i=n.n(o).a||o;function c(e){return i.fromString(e,!0,16)}const u=c("c3a5c85c97cb3127"),l=c("b492b66fbe98f273"),d=c("9ae16a3b2f90404f");function h(e){return e.xor(e.shru(47))}function p(e,t,n){const r=e.slice(t,t+n);return i.fromBytes(Array.from(r),!0,!0)}function f(e,t){return p(e,t,8)}function m(e,t){return p(e,t,4)}function g(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function b(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:c("9ddfea08eb382d69"),r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function y(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=g(s.add(a).add(r),21);const o=a;return a=(a=a.add(t)).add(n),s=s.add(g(a,44)),[a.add(r),s.add(o)]}(f(e,t),f(e,t+8),f(e,t+16),f(e,t+24),n,r)}function v(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=d.add(2*t),r=f(e,0).add(d),a=f(e,t-8);return b(g(a,37).mul(n).add(r),g(r,25).add(a).mul(n),n)}if(t>=4){const n=d.add(2*t);return b(m(e,0).shl(3).add(t),m(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return h(d.mul(n).xor(u.mul(r))).mul(d)}return d}function x(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),r=f(e,0).mul(l),a=f(e,8),s=f(e,t-8).mul(n),o=f(e,t-16).mul(d);return b(g(r.add(a),43).add(g(s,30)).add(o),r.add(g(a.add(d),18)).add(s),n)}function w(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),r=f(e,0).mul(d),a=f(e,8),s=f(e,t-8).mul(n),o=f(e,t-16).mul(d),i=g(r.add(a),43).add(g(s,30)).add(o),c=b(i,r.add(g(a.add(d),18)).add(s),n),u=f(e,16).mul(n),l=f(e,24),h=i.add(f(e,t-32)).mul(n),p=c.add(f(e,t-24)).mul(n);return b(g(u.add(l),43).add(g(h,30)).add(p),u.add(g(l.add(r),18)).add(h),n)}function O(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=i.fromNumber(81,!0);if(t<=32)return t<=16?v(e,t):x(e,t);if(t<=64)return w(e,t);let r=n,a=n.mul(l).add(113),s=h(a.mul(d).add(113)).mul(d),o=[i.UZERO,i.UZERO],c=[i.UZERO,i.UZERO];r=r.mul(d).add(f(e,0));let p=0;const m=64*(t-1>>6),O=m+(t-1&63)-63;do{r=g(r.add(a).add(o[0]).add(f(e,p+8)),37).mul(l),a=g(a.add(o[1]).add(f(e,p+48)),42).mul(l),r=r.xor(c[1]),a=a.add(o[0]).add(f(e,p+40)),s=g(s.add(c[0]),33).mul(l),o=y(e,p,o[1].mul(l),r.add(c[0])),c=y(e,p+32,s.add(c[1]),a.add(f(e,p+16))),[s,r]=[r,s],p+=64}while(p!==m);const k=l.add(s.and(255).shl(1));return p=O,c[0]=c[0].add(t-1&63),o[0]=o[0].add(c[0]),c[0]=c[0].add(o[0]),r=g(r.add(a).add(o[0]).add(f(e,p+8)),37).mul(k),a=g(a.add(o[1]).add(f(e,p+48)),42).mul(k),r=r.xor(c[1].mul(9)),a=a.add(o[0].mul(9).add(f(e,p+40))),s=g(s.add(c[0]),33).mul(k),o=y(e,p,o[1].mul(k),r.add(c[0])),c=y(e,p+32,s.add(c[1]),a.add(f(e,p+16))),[s,r]=[r,s],b(b(o[0],c[0],k).add(h(a).mul(u)).add(s),b(o[1],c[1],k).add(r),k)}function k(e,t){return"string"===t?T(e):S([e],t)}function S(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=C(e)),Object(r.b)().getBool("DEBUG")&&s.i(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type ".concat(t))}function I(){return Object(r.b)().platform.now()}function N(e,t){return Object(r.b)().platform.fetch(e,t)}function T(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Object(r.b)().platform.encode(e,t)}function j(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Object(r.b)().platform.decode(e,t)}function E(e){return null!=Object(r.b)().platform.isTypedArray?Object(r.b)().platform.isTypedArray(e):Object(a.a)(e)}function C(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||s.y(e)||null==e||E(e)&&n)t.push(e);else if(Array.isArray(e)||E(e))for(let r=0;r<e.length;++r)C(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let a=0;a<=r;a++)C(e[a],t,n)}return t}},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(4);const c=Object(i.b)({cast_:function(e,t){const n=Object(s.a)(e,"x","cast");if(!o.B(t))throw new Error("Failed to cast to unknown dtype ".concat(t));if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},c={dtype:t};return r.a.runKernel(a.y,i,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(23),o=n(2),i=n(4);const c=Object(i.b)({add_:function(e,t){let n=Object(o.a)(e,"a","add"),i=Object(o.a)(t,"b","add");[n,i]=Object(s.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.d,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(23),o=n(2),i=n(4);const c=Object(i.b)({sub_:function(e,t){let n=Object(o.a)(e,"a","sub"),i=Object(o.a)(t,"b","sub");[n,i]=Object(s.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.fd,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(3),s=n(23),o=n(2),i=n(109),c=n(4);const u=Object(c.b)({div_:function(e,t){let n=Object(o.a)(e,"a","div"),c=Object(o.a)(t,"b","div");if([n,c]=Object(s.makeTypesMatch)(n,c),"int32"===n.dtype&&"int32"===c.dtype)return Object(i.a)(n,c);const u={a:n,b:c};return r.a.runKernel(a.rc,u,{})}})},function(e,t,n){"use strict";function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,o=e[s]||1;(t[t.length-1-a]||1)>1&&1===o&&r.unshift(s)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,o=t[s];(null==a||1===a&&o>1)&&n.unshift(s)}return n}function s(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let a=0;a<n;a++){let s=e[e.length-a-1];null==s&&(s=1);let o=t[t.length-a-1];if(null==o&&(o=1),1===s)r[n-a-1]=o;else if(1===o)r[n-a-1]=s;else{if(s!==o){const n="Operands could not be broadcast together with shapes "+"".concat(e," and ").concat(t,".");throw Error(n)}r[n-a-1]=s}}return r}n.r(t),n.d(t,"getBroadcastDims",(function(){return r})),n.d(t,"getReductionAxes",(function(){return a})),n.d(t,"assertAndGetBroadcastShape",(function(){return s}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(2),o=n(11),i=n(4);const c=Object(i.b)({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=Object(s.a)(e,"x","sum");"bool"===i.dtype&&(i=Object(o.a)(i,"int32"));const c={x:i},u={axis:t,keepDims:n};return r.a.runKernel(a.gd,c,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(10),a=n(46);function s(e,t){if((Object(r.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Object(r.isTypedArray)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(a.a)(e,[],[],t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return i})),n.d(t,"c",(function(){return u}));var r=n(8);class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=s,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,"."))),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Setting feature override from URL ".concat(e,": ").concat(t,".")),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Object(r.y)(t))throw new Error("Flag ".concat(e," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag ".concat(e," as it has not been registered."));this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '".concat(e,"': no evaluation function found."));return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if("tfjsflags"in e){e.tfjsflags.split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:t}(0,n)})}}}function s(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];return o(t,r[0],r[1]),r.join("=")})),t}function o(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function i(){return c}let c=null;function u(e){c=e}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({zerosLike_:function(e){const t={x:Object(s.a)(e,"x","zerosLike")};return r.a.runKernel(a.rd,t)}})},function(e,t,n){"use strict";n.d(t,"e",(function(){return a})),n.d(t,"f",(function(){return s})),n.d(t,"g",(function(){return o})),n.d(t,"b",(function(){return i})),n.d(t,"c",(function(){return c})),n.d(t,"d",(function(){return u})),n.d(t,"k",(function(){return g})),n.d(t,"i",(function(){return b})),n.d(t,"j",(function(){return y})),n.d(t,"h",(function(){return v})),n.d(t,"a",(function(){return x}));var r=n(8);function a(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0;const o=e[3],c=[...t,o],u=v(a);return i(e,c,n,s,r,null,null,u)}function s(e,t,n,r,a,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[c,u]=l(t);let d;if("channelsLast"===o)d=[c,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));d=[c,u,e[1],e[1]]}return i(e,d,n,r,a,s,!1,o)}function o(e,t,n,r,a,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,u,l]=d(t);let h,p;if("NDHWC"===o)p="channelsLast",h=[i,u,l,e[4],e[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat ".concat(o));p="channelsFirst",h=[i,u,l,e[1],e[1]]}return c(e,h,n,r,a,!1,p,s)}function i(e,t,n,r,a,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,u,d,f]=[-1,-1,-1,-1];if("channelsLast"===i)[c,u,d,f]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,f,u,d]=e}const[m,g,,b]=t,[y,v]=l(n),[x,w]=l(r),O=h(m,x),k=h(g,w),{padInfo:S,outHeight:I,outWidth:N}=p(a,u,d,y,v,O,k,s,i),T=o?b*f:b;let j;return"channelsFirst"===i?j=[c,T,I,N]:"channelsLast"===i&&(j=[c,I,N,T]),{batchSize:c,dataFormat:i,inHeight:u,inWidth:d,inChannels:f,outHeight:I,outWidth:N,outChannels:T,padInfo:S,strideHeight:y,strideWidth:v,filterHeight:m,filterWidth:g,effectiveFilterHeight:O,effectiveFilterWidth:k,dilationHeight:x,dilationWidth:w,inShape:e,outShape:j,filterShape:t}}function c(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,u,l,p,m]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[c,u,l,p,m]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));[c,m,u,l,p]=e}const[g,b,y,,v]=t,[x,w,O]=d(n),[k,S,I]=d(r),N=h(g,k),T=h(b,S),j=h(y,I),{padInfo:E,outDepth:C,outHeight:A,outWidth:R}=f(a,u,l,p,x,w,O,N,T,j,i),F=s?v*m:v;let _;return"channelsFirst"===o?_=[c,F,C,A,R]:"channelsLast"===o&&(_=[c,C,A,R,F]),{batchSize:c,dataFormat:o,inDepth:u,inHeight:l,inWidth:p,inChannels:m,outDepth:C,outHeight:A,outWidth:R,outChannels:F,padInfo:E,strideDepth:x,strideHeight:w,strideWidth:O,filterDepth:g,filterHeight:b,filterWidth:y,effectiveFilterDepth:N,effectiveFilterHeight:T,effectiveFilterWidth:j,dilationDepth:k,dilationHeight:S,dilationWidth:I,inShape:e,outShape:_,filterShape:t}}function u(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;const a=h(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function l(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function d(e){return"number"===typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t,n,r,a,s,o,i,c){let l,d,h;if("number"===typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=u(e,t,n));const s=e[0],o=e[1];return[m((s-t+2*r)/n+1,a),m((o-t+2*r)/n+1,a)]}([t,n],s,r,e,i);d=a[0],h=a[1]}else if("same"===e){d=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(d-1)*r+s-t),i=Math.max(0,(h-1)*a+o-n),c=Math.floor(e/2),u=e-c,p=Math.floor(i/2);l={top:c,bottom:u,left:p,right:i-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),h=Math.ceil((n-o+1)/a);else{if("object"!==typeof e)throw Error("Unknown padding parameter: ".concat(e));{const u="channelsLast"===c?e[1][0]:e[2][0],p="channelsLast"===c?e[1][1]:e[2][1],f="channelsLast"===c?e[2][0]:e[3][0],g="channelsLast"===c?e[2][1]:e[3][1];l={top:u,bottom:p,left:f,right:g,type:0===u&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},d=m((t-s+u+p)/r+1,i),h=m((n-o+f+g)/a+1,i)}}return{padInfo:l,outHeight:d,outWidth:h}}function f(e,t,n,r,a,s,o,i,c,l,d){let h,p,f,g;if("valid"===e&&(e=0),"number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const b=function(e,t,n,r,a,s){null==a&&(a=u(e,t[0],r[0]));const o=[0,0,0,n];for(let i=0;i<3;i++)e[i]+2*a>=t[i]&&(o[i]=m((e[i]-t[i]+2*a)/r[i]+1,s));return o}([t,n,r,1],[i,c,l],1,[a,s,o],e,d);p=b[0],f=b[1],g=b[2]}else{if("same"!==e)throw Error("Unknown padding parameter: ".concat(e));{p=Math.ceil(t/a),f=Math.ceil(n/s),g=Math.ceil(r/o);const e=(p-1)*a+i-t,u=(f-1)*s+c-n,d=(g-1)*o+l-r,m=Math.floor(e/2),b=e-m,y=Math.floor(u/2),v=u-y,x=Math.floor(d/2);h={top:y,bottom:v,left:x,right:d-x,front:m,back:b,type:"SAME"}}}return{padInfo:h,outDepth:p,outHeight:f,outWidth:g}}function m(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode ".concat(t))}}function g(e){const[t,n,r]=l(e);return 1===t&&1===n&&1===r}function b(e,t){return g(e)||g(t)}function y(e){return l(e).every(e=>e>0)}function v(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(e))}function x(e,t,n){if(null!=n){if("string"===typeof t)throw Error("Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."));if("number"===typeof t)r.c(r.w(t),()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."));else{if("object"!==typeof t)throw Error("Error in ".concat(e,": Unknown padding parameter: ").concat(t));t.forEach(t=>{t.forEach(t=>{r.c(r.w(t),()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."))})})}}}},function(e,t,n){"use strict";e.exports=n(237)},function(e,t,n){"use strict";n.d(t,"b",(function(){return a.a})),n.d(t,"c",(function(){return s.a})),n.d(t,"d",(function(){return o.a})),n.d(t,"e",(function(){return i.a})),n.d(t,"f",(function(){return p})),n.d(t,"g",(function(){return f.a})),n.d(t,"h",(function(){return m.a})),n.d(t,"i",(function(){return g.a})),n.d(t,"j",(function(){return b.a})),n.d(t,"k",(function(){return y.a})),n.d(t,"l",(function(){return v.a})),n.d(t,"m",(function(){return x.a})),n.d(t,"n",(function(){return w.a})),n.d(t,"o",(function(){return O.a})),n.d(t,"p",(function(){return k.a})),n.d(t,"q",(function(){return T})),n.d(t,"r",(function(){return _})),n.d(t,"w",(function(){return M.a})),n.d(t,"s",(function(){return D.a})),n.d(t,"t",(function(){return L})),n.d(t,"u",(function(){return z})),n.d(t,"v",(function(){return P})),n.d(t,"x",(function(){return B})),n.d(t,"y",(function(){return W})),n.d(t,"A",(function(){return U})),n.d(t,"B",(function(){return V.a})),n.d(t,"C",(function(){return G.a})),n.d(t,"D",(function(){return S.a})),n.d(t,"E",(function(){return H.a})),n.d(t,"F",(function(){return q.a})),n.d(t,"G",(function(){return K.a})),n.d(t,"H",(function(){return X.a})),n.d(t,"I",(function(){return j.a})),n.d(t,"J",(function(){return Y})),n.d(t,"K",(function(){return Q})),n.d(t,"L",(function(){return Z})),n.d(t,"M",(function(){return J})),n.d(t,"N",(function(){return $.a})),n.d(t,"O",(function(){return ee.a})),n.d(t,"P",(function(){return te.a})),n.d(t,"Q",(function(){return ne})),n.d(t,"R",(function(){return ae})),n.d(t,"S",(function(){return se.a})),n.d(t,"T",(function(){return oe.a})),n.d(t,"V",(function(){return ie.a})),n.d(t,"W",(function(){return ce.a})),n.d(t,"X",(function(){return ue})),n.d(t,"Y",(function(){return le.a})),n.d(t,"Z",(function(){return de.a})),n.d(t,"ab",(function(){return he})),n.d(t,"bb",(function(){return pe.a})),n.d(t,"cb",(function(){return fe.a})),n.d(t,"db",(function(){return me.a})),n.d(t,"eb",(function(){return ge.a})),n.d(t,"gb",(function(){return be})),n.d(t,"hb",(function(){return ye.a})),n.d(t,"jb",(function(){return ve})),n.d(t,"kb",(function(){return xe.a})),n.d(t,"lb",(function(){return we.a})),n.d(t,"mb",(function(){return Oe.a})),n.d(t,"nb",(function(){return ke.a})),n.d(t,"ob",(function(){return Se.a})),n.d(t,"pb",(function(){return Ie.a})),n.d(t,"qb",(function(){return Te})),n.d(t,"sb",(function(){return je.a})),n.d(t,"tb",(function(){return Ee.a})),n.d(t,"ub",(function(){return Ce.a})),n.d(t,"wb",(function(){return Ae.a})),n.d(t,"yb",(function(){return Re.a})),n.d(t,"zb",(function(){return Fe.a})),n.d(t,"Bb",(function(){return _e.a})),n.d(t,"Fb",(function(){return Me.a})),n.d(t,"Gb",(function(){return De.a})),n.d(t,"Hb",(function(){return Le.a})),n.d(t,"Ib",(function(){return ze.a})),n.d(t,"Jb",(function(){return Pe.a})),n.d(t,"Kb",(function(){return Be.a})),n.d(t,"Mb",(function(){return We})),n.d(t,"Nb",(function(){return Ue.a})),n.d(t,"Ob",(function(){return Ve.a})),n.d(t,"Pb",(function(){return Ge.a})),n.d(t,"Qb",(function(){return He.a})),n.d(t,"Rb",(function(){return qe.a})),n.d(t,"Sb",(function(){return Ke.a})),n.d(t,"Tb",(function(){return Xe.a})),n.d(t,"Ub",(function(){return Ye.a})),n.d(t,"Vb",(function(){return Qe.a})),n.d(t,"Wb",(function(){return Ze.a})),n.d(t,"Yb",(function(){return $e})),n.d(t,"Zb",(function(){return E.a})),n.d(t,"ac",(function(){return et.a})),n.d(t,"bc",(function(){return tt.a})),n.d(t,"cc",(function(){return nt})),n.d(t,"dc",(function(){return rt})),n.d(t,"ec",(function(){return at.a})),n.d(t,"fc",(function(){return st.a})),n.d(t,"gc",(function(){return ct})),n.d(t,"hc",(function(){return ut.a})),n.d(t,"ic",(function(){return lt.a})),n.d(t,"jc",(function(){return dt.a})),n.d(t,"kc",(function(){return ht.a})),n.d(t,"lc",(function(){return gt})),n.d(t,"nc",(function(){return C.a})),n.d(t,"oc",(function(){return bt})),n.d(t,"pc",(function(){return yt})),n.d(t,"qc",(function(){return vt.a})),n.d(t,"sc",(function(){return xt.a})),n.d(t,"tc",(function(){return wt.a})),n.d(t,"uc",(function(){return ot.a})),n.d(t,"vc",(function(){return Ot.a})),n.d(t,"xc",(function(){return kt})),n.d(t,"yc",(function(){return St.a})),n.d(t,"zc",(function(){return It})),n.d(t,"Ac",(function(){return Nt})),n.d(t,"Bc",(function(){return Tt})),n.d(t,"Cc",(function(){return jt})),n.d(t,"Dc",(function(){return Et.a})),n.d(t,"Ec",(function(){return Ct.a})),n.d(t,"Fc",(function(){return At.a})),n.d(t,"Gc",(function(){return Rt.a})),n.d(t,"Hc",(function(){return Ft.a})),n.d(t,"Ic",(function(){return _t})),n.d(t,"Jc",(function(){return Mt})),n.d(t,"Kc",(function(){return Dt})),n.d(t,"Lc",(function(){return Lt})),n.d(t,"Mc",(function(){return Ut})),n.d(t,"Nc",(function(){return Vt})),n.d(t,"Oc",(function(){return Gt})),n.d(t,"Pc",(function(){return Ht})),n.d(t,"Qc",(function(){return qt})),n.d(t,"Rc",(function(){return Kt})),n.d(t,"Sc",(function(){return Xt.a})),n.d(t,"Tc",(function(){return Yt.a})),n.d(t,"Uc",(function(){return Qt.a})),n.d(t,"Vc",(function(){return Zt.a})),n.d(t,"Wc",(function(){return N.a})),n.d(t,"Xc",(function(){return Jt.a})),n.d(t,"Yc",(function(){return $t})),n.d(t,"Zc",(function(){return en})),n.d(t,"ad",(function(){return tn})),n.d(t,"bd",(function(){return nn})),n.d(t,"dd",(function(){return rn.a})),n.d(t,"ed",(function(){return an.a})),n.d(t,"fd",(function(){return sn.a})),n.d(t,"id",(function(){return on.a})),n.d(t,"jd",(function(){return cn.a})),n.d(t,"kd",(function(){return un})),n.d(t,"ld",(function(){return A.a})),n.d(t,"md",(function(){return ln.a})),n.d(t,"od",(function(){return dn.a})),n.d(t,"pd",(function(){return hn.a})),n.d(t,"qd",(function(){return R.a})),n.d(t,"rd",(function(){return pn})),n.d(t,"sd",(function(){return fn})),n.d(t,"td",(function(){return mn})),n.d(t,"ud",(function(){return gn})),n.d(t,"vd",(function(){return bn.a})),n.d(t,"wd",(function(){return yn.a})),n.d(t,"xd",(function(){return vn.a})),n.d(t,"rb",(function(){return xn.a})),n.d(t,"Ab",(function(){return wn.a})),n.d(t,"Eb",(function(){return On.a})),n.d(t,"cd",(function(){return kn.a})),n.d(t,"Bd",(function(){return Sn.a})),n.d(t,"Cd",(function(){return In.a})),n.d(t,"Dd",(function(){return ft.a})),n.d(t,"Ed",(function(){return Nn.a})),n.d(t,"Fd",(function(){return Tn.a})),n.d(t,"Gd",(function(){return jn.a})),n.d(t,"Hd",(function(){return En.a})),n.d(t,"Id",(function(){return Cn.a})),n.d(t,"Kd",(function(){return mt.a})),n.d(t,"Ld",(function(){return An.a})),n.d(t,"Md",(function(){return Rn.a})),n.d(t,"Nd",(function(){return F.a})),n.d(t,"Od",(function(){return Fn.a})),n.d(t,"Pd",(function(){return Mn})),n.d(t,"Qd",(function(){return Dn})),n.d(t,"Rd",(function(){return Ln.a})),n.d(t,"Sd",(function(){return zn})),n.d(t,"Td",(function(){return Pn})),n.d(t,"Ud",(function(){return Bn})),n.d(t,"Vd",(function(){return Un})),n.d(t,"Wd",(function(){return Ne.a})),n.d(t,"Xd",(function(){return Vn.a})),n.d(t,"Zd",(function(){return Gn})),n.d(t,"ae",(function(){return Hn.a})),n.d(t,"be",(function(){return qn.a})),n.d(t,"ce",(function(){return Kn.a})),n.d(t,"de",(function(){return Xn})),n.d(t,"ee",(function(){return Yn})),n.d(t,"fe",(function(){return Qn.a})),n.d(t,"ge",(function(){return Jn})),n.d(t,"he",(function(){return $n.a})),n.d(t,"ie",(function(){return er.a})),n.d(t,"z",(function(){return tr})),n.d(t,"Yd",(function(){return nr.a})),n.d(t,"rc",(function(){return rr.a})),n.d(t,"mc",(function(){return sr})),n.d(t,"gd",(function(){return or})),n.d(t,"hd",(function(){return Je})),n.d(t,"zd",(function(){return cr})),n.d(t,"xb",(function(){return ur})),n.d(t,"fb",(function(){return lr})),n.d(t,"ib",(function(){return dr})),n.d(t,"U",(function(){return hr})),n.d(t,"Db",(function(){return pr})),n.d(t,"wc",(function(){return h.b})),n.d(t,"a",(function(){return h.a})),n.d(t,"Cb",(function(){return va})),n.d(t,"Lb",(function(){return xa})),n.d(t,"Xb",(function(){return wa})),n.d(t,"Ad",(function(){return ba})),n.d(t,"vb",(function(){return r})),n.d(t,"nd",(function(){return ya})),n.d(t,"yd",(function(){return Oa})),n.d(t,"Jd",(function(){return ka}));var r={};n.r(r),n.d(r,"conv2d",(function(){return vr})),n.d(r,"depthwiseConv2d",(function(){return Or})),n.d(r,"matMul",(function(){return kr}));var a=n(39),s=n(189),o=n(190),i=n(12),c=n(5),u=n(3),l=n(2),d=n(8),h=n(4);const p=Object(h.b)({addN_:function(e){d.c(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),d.c(e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(e.length));const t=e.map((e,t)=>Object(l.a)(e,"tensors".concat(t),"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!d.a(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=t;return c.a.runKernel(u.e,r)}});var f=n(144),m=n(145),g=n(146),b=n(147),y=n(191),v=n(192),x=n(193),w=n(148),O=n(194),k=n(115),S=n(11),I=n(20),N=n(7);const T=Object(h.b)({avgPool3d_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=Object(l.a)(e,"x","avgPool3d","float32");let i=o,h=!1;4===o.rank&&(h=!0,i=Object(N.a)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.c(5===i.rank,()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,".")),d.c("NDHWC"===s,()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s)),d.c("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'")),Object(I.a)("avgPool3d",r,a);const p={x:i},f={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let m=c.a.runKernel(u.p,p,f);return m=Object(S.a)(m,i.dtype),h?Object(N.a)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});var j=n(30),E=n(26),C=n(9),A=n(65),R=n(27),F=n(137);const _=Object(h.b)({basicLSTMCell_:function(e,t,n,r,a,s){const o=Object(l.a)(e,"forgetBias","basicLSTMCell"),c=Object(l.a)(t,"lstmKernel","basicLSTMCell"),u=Object(l.a)(n,"lstmBias","basicLSTMCell"),d=Object(l.a)(r,"data","basicLSTMCell"),h=Object(l.a)(a,"c","basicLSTMCell"),p=Object(l.a)(s,"h","basicLSTMCell"),f=Object(j.a)([d,p],1),m=Object(E.a)(f,c),g=Object(i.a)(m,u),b=g.shape[0],y=g.shape[1]/4,v=[b,y],x=Object(R.a)(g,[0,0],v),w=Object(R.a)(g,[0,y],v),O=Object(R.a)(g,[0,2*y],v),k=Object(R.a)(g,[0,3*y],v),S=Object(i.a)(Object(C.a)(Object(A.a)(x),Object(F.a)(w)),Object(C.a)(h,Object(A.a)(Object(i.a)(o,O))));return[S,Object(C.a)(Object(F.a)(S),Object(A.a)(k))]}});var M=n(89),D=n(77);const L=Object(h.b)({batchNorm2d_:function(e,t,n,r,a,s){const o=Object(l.a)(e,"x","batchNorm"),i=Object(l.a)(t,"mean","batchNorm"),c=Object(l.a)(n,"variance","batchNorm");let u,h;return null!=a&&(u=Object(l.a)(a,"scale","batchNorm")),null!=r&&(h=Object(l.a)(r,"offset","batchNorm")),d.c(2===o.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(o.rank,".")),d.c(2===i.rank||1===i.rank,()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,".")),d.c(2===c.rank||1===c.rank,()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,".")),null!=u&&d.c(2===u.rank||1===u.rank,()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(u.rank,".")),null!=h&&d.c(2===h.rank||1===h.rank,()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(h.rank,".")),Object(D.a)(o,i,c,h,u,s)}});const z=Object(h.b)({batchNorm3d_:function(e,t,n,r,a,s){const o=Object(l.a)(e,"x","batchNorm"),i=Object(l.a)(t,"mean","batchNorm"),c=Object(l.a)(n,"variance","batchNorm");let u,h;return null!=a&&(u=Object(l.a)(a,"scale","batchNorm")),null!=r&&(h=Object(l.a)(r,"offset","batchNorm")),d.c(3===o.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(o.rank,".")),d.c(3===i.rank||1===i.rank,()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,".")),d.c(3===c.rank||1===c.rank,()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,".")),null!=u&&d.c(3===u.rank||1===u.rank,()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(u.rank,".")),null!=h&&d.c(3===h.rank||1===h.rank,()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(h.rank,".")),Object(D.a)(o,i,c,h,u,s)}});const P=Object(h.b)({batchNorm4d_:function(e,t,n,r,a,s){const o=Object(l.a)(e,"x","batchNorm"),i=Object(l.a)(t,"mean","batchNorm"),c=Object(l.a)(n,"variance","batchNorm");let u,h;return null!=a&&(u=Object(l.a)(a,"scale","batchNorm")),null!=r&&(h=Object(l.a)(r,"offset","batchNorm")),d.c(4===o.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(o.rank,".")),d.c(4===i.rank||1===i.rank,()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,".")),d.c(4===c.rank||1===c.rank,()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,".")),null!=u&&d.c(4===u.rank||1===u.rank,()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(u.rank,".")),null!=h&&d.c(4===h.rank||1===h.rank,()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(h.rank,".")),Object(D.a)(o,i,c,h,u,s)}});const B=Object(h.b)({bincount_:function(e,t,n){const r=Object(l.a)(e,"x","bincount"),a=Object(l.a)(t,"weights","bincount");d.c("int32"===r.dtype,()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(r.dtype)),d.c(n>=0,()=>"size must be non-negative, but got ".concat(n,".")),d.c(a.size===r.size||0===a.size,()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(r.shape,", weights shape: ")+"".concat(a.shape,"."));const s={x:r,weights:a},o={size:n};return c.a.runKernel(u.u,s,o)}});const W=Object(h.b)({bitwiseAnd_:function(e,t){const n=Object(l.a)(e,"x","bitwiseAnd"),r=Object(l.a)(t,"y","bitwiseAnd");if(!Object(d.a)(n.shape,r.shape))throw new Error("BitwiseAnd: Tensors must have the same shape. x: ".concat(n.shape,", y: ").concat(r.shape));if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error("BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ".concat(n.dtype," and type of y: ").concat(r.dtype));const a={a:n,b:r};return c.a.runKernel(u.v,a)}});const U=Object(h.b)({broadcastArgs_:function(e,t){const n=Object(l.a)(e,"s0","broadcastArgs","int32"),r=Object(l.a)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). "+"Has rank ".concat(n.rank));if(1!==r.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). "+"Has rank ".concat(r.rank));const a={s0:n,s1:r};return c.a.runKernel(u.w,a)}});var V=n(98),G=n(42),H=n(195),q=n(196),K=n(64),X=n(47);const Y=Object(h.b)({concat1d_:function(e){return Object(j.a)(e,0)}});const Q=Object(h.b)({concat2d_:function(e,t){return Object(j.a)(e,t)}});const Z=Object(h.b)({concat3d_:function(e,t){return Object(j.a)(e,t)}});const J=Object(h.b)({concat4d_:function(e,t){return Object(j.a)(e,t)}});var $=n(149),ee=n(62),te=n(150);const ne=Object(h.b)({conv3d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const o=Object(l.a)(e,"x","conv3d"),i=Object(l.a)(t,"filter","conv3d");let h=o,p=!1;4===o.rank&&(p=!0,h=Object(N.a)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.c(5===h.rank,()=>"Error in conv3d: input must be rank 5, but got rank ".concat(h.rank,".")),d.c(5===i.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,".")),d.c(h.shape[4]===i.shape[3],()=>"Error in conv3d: depth of input (".concat(h.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],".")),d.c(Object(I.i)(n,s),()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'")),d.c("NDHWC"===a,()=>"Error in conv3d: got dataFormat of ".concat(a," but only NDHWC is currently supported.")),d.c(Object(I.j)(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),d.c(Object(I.j)(n),()=>"Error in conv3D: Strides should be larger than 0.");const f={x:h,filter:i},m={strides:n,pad:r,dataFormat:a,dilations:s},g=c.a.runKernel(u.H,f,m);return p?Object(N.a)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});var re=n(180);const ae=Object(h.b)({conv3dTranspose_:function(e,t,n,r,a){const s=Object(l.a)(e,"x","conv3dTranspose"),o=Object(l.a)(t,"filter","conv3dTranspose");return Object(re.a)(n,s,o,r,a)}});var se=n(116),oe=n(151),ie=n(100),ce=n(117);const ue=Object(h.b)({denseBincount_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=Object(l.a)(e,"x","denseBincount"),s=Object(l.a)(t,"weights","denseBincount");d.c("int32"===a.dtype,()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(a.dtype)),d.c(a.rank<=2,()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(a.rank,".")),d.c(n>=0,()=>"size must be non-negative, but got ".concat(n,".")),d.c(s.size===a.size||0===s.size,()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(a.shape,", weights shape: ")+"".concat(s.shape,"."));const o={x:a,weights:s},i={size:n,binaryOutput:r};return c.a.runKernel(u.P,o,i)}});var le=n(152),de=n(90);const he=Object(h.b)({diag_:function(e){const t={x:Object(l.a)(e,"x","diag")};return c.a.runKernel(u.U,t)}});var pe=n(153),fe=n(14),me=n(154),ge=n(155);const be=Object(h.b)({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];const a=n.map((e,t)=>Object(l.a)(e,"tensors".concat(t),"einsum")),s={equation:e};return c.a.runKernel(u.Z,a,s)}});var ye=n(118);const ve=Object(h.b)({ensureShape_:function(e,t){const n=Object(l.a)(e,"x","ensureShape","string_or_numeric");if(!Object(d.b)(n.shape,t))throw new Error("EnsureShape: Shape of tensor ".concat(n.shape," is not compatible with expected shape ").concat(t));return e}});var xe=n(91),we=n(197),Oe=n(156),ke=n(36),Se=n(51),Ie=n(198),Ne=n(67);const Te=Object(h.b)({eye_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==t&&(t=e);const a=Object(G.a)([e,t],r),s=e<=t?e:t;for(let i=0;i<s;++i)a.set(1,i,i);const o=Object(N.a)(a.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return Object(Ne.a)(Object(Se.a)(o,0),[n[0],1,1]);if(2===n.length)return Object(Ne.a)(Object(Se.a)(Object(Se.a)(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(Ne.a)(Object(Se.a)(Object(Se.a)(Object(Se.a)(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});var je=n(72),Ee=n(119),Ce=n(109),Ae=n(93),Re=n(38),Fe=n(63),_e=n(94),Me=n(199),De=n(200),Le=n(201),ze=n(120),Pe=n(80),Be=n(54);function We(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return c.a.runKernel(u.Fb,{},r)}var Ue=n(157),Ve=n(69),Ge=n(158),He=n(202),qe=n(203),Ke=n(121),Xe=n(58),Ye=n(95),Qe=n(122),Ze=n(160);const Je=Object(h.b)({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const r=Object(l.a)(e,"sortedSequence","searchSorted"),a=Object(l.a)(t,"values","searchSorted"),s=r.shape[r.shape.length-1],o=a.shape[a.shape.length-1],i=Object(N.a)(r,[-1,s]),h=Object(N.a)(a,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==h.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Object(d.O)(h.shape)>=2147483648)throw new Error("values tensor size must less than ".concat(2147483648));if(i.shape[1]>=2147483648)throw new Error("trailing dim_size must less than ".concat(2147483648," for int32 output type, was ").concat(i.shape[1]));const p={sortedSequence:i,values:h},f={side:n};return c.a.runKernel(u.Fc,p,f)}});function $e(e,t){return Je(e,t,"left")}var et=n(66),tt=n(123);const nt=Object(h.b)({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=Object(l.a)(e,"x","maxPool3d");let i=o,h=!1;4===o.rank&&(h=!0,i=Object(N.a)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.c(5===i.rank,()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,".")),d.c("NDHWC"===s,()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s)),Object(I.a)("maxPool3d",r,a);const p={x:i},f={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},m=c.a.runKernel(u.Ob,p,f);return h?Object(N.a)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const rt=Object(h.b)({maxPoolWithArgmax_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s=Object(l.a)(e,"x","maxPoolWithArgmax"),o={x:s},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},d=c.a.runKernel(u.Rb,o,i);return{result:d[0],indexes:d[1]}}});var at=n(87),st=n(81),ot=n(50),it=n(6);function ct(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError("".concat(n," is not a valid third argument to meshgrid"));if(void 0===e)return[];let r=Object(l.a)(e,"x","meshgrid",e instanceof it.a?e.dtype:"float32");if(void 0===t)return[r];let a=Object(l.a)(t,"y","meshgrid",t instanceof it.a?t.dtype:"float32");const s=Object(d.O)(r.shape),o=Object(d.O)(a.shape);return"xy"===n?(r=Object(N.a)(r,[1,-1]),a=Object(N.a)(a,[-1,1]),[Object(E.a)(Object(ot.a)([o,1],r.dtype),r),Object(E.a)(a,Object(ot.a)([1,s],a.dtype))]):(r=Object(N.a)(r,[-1,1]),a=Object(N.a)(a,[1,-1]),[Object(E.a)(r,Object(ot.a)([1,o],r.dtype)),Object(E.a)(Object(ot.a)([s,1],a.dtype),a)])}var ut=n(101),lt=n(82),dt=n(161),ht=n(162),pt=n(35),ft=n(25),mt=n(13);const gt=Object(h.b)({moments_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];e=Object(l.a)(e,"x","moments");const r=Object(d.I)(t,e.shape),a=Object(st.a)(e,r,n);let s=a.shape;n||(s=Object(pt.e)(a.shape,r));const o=Object(ft.a)(Object(mt.a)(Object(S.a)(e,"float32"),Object(N.a)(a,s))),i=Object(st.a)(o,r,n);return{mean:a,variance:i}}});const bt=Object(h.b)({multiRNNCell_:function(e,t,n,r){const a=Object(l.a)(t,"data","multiRNNCell"),s=Object(l.b)(n,"c","multiRNNCell"),o=Object(l.b)(r,"h","multiRNNCell");let i=a;const c=[];for(let l=0;l<e.length;l++){const t=e[l](i,s[l],o[l]);c.push(t[0]),c.push(t[1]),i=t[1]}const u=[],d=[];for(let l=0;l<c.length;l+=2)u.push(c[l]),d.push(c[l+1]);return[u,d]}});const yt=Object(h.b)({multinomial_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=Object(l.a)(e,"logits","multinomial"),s=a.size,o=a.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(s,"."));if(o>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(o));n=n||Math.random();const i=1===o?Object(N.a)(a,[1,-1]):a,d={logits:i},h={numSamples:t,seed:n,normalized:r},p=c.a.runKernel(u.Yb,d,h);return 1===o?Object(N.a)(p,[p.size]):p}});var vt=n(28),xt=n(124),wt=n(163),Ot=n(204);const kt=Object(h.b)({outerProduct_:function(e,t){const n=Object(l.a)(e,"v1","outerProduct"),r=Object(l.a)(t,"v2","outerProduct");d.c(1===n.rank&&1===r.rank,()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(n.rank," and ").concat(r.rank,"."));const a=Object(N.a)(n,[-1,1]),s=Object(N.a)(r,[1,-1]);return Object(E.a)(a,s)}});var St=n(55);const It=Object(h.b)({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Object(d.c)(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),Object(St.a)(e,[t],n)}});const Nt=Object(h.b)({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Object(d.c)(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(St.a)(e,t,n)}});const Tt=Object(h.b)({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Object(d.c)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(St.a)(e,t,n)}});const jt=Object(h.b)({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Object(d.c)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(St.a)(e,t,n)}});var Et=n(164),Ct=n(48),At=n(125),Rt=n(143),Ft=n(165);const _t=Object(h.b)({raggedGather_:function(e,t,n,r){const a={paramsNestedSplits:e.map((e,t)=>Object(l.a)(e,"tensors".concat(t),"raggedGather","int32")),paramsDenseValues:Object(l.a)(t,"paramsDenseValues","raggedGather"),indices:Object(l.a)(n,"indices","raggedGather","int32")},s={outputRaggedRank:r},o=c.a.runKernel(u.mc,a,s);return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}});const Mt=Object(h.b)({raggedRange_:function(e,t,n){const r=Object(l.a)(e,"starts","raggedRange"),a={starts:r,limits:Object(l.a)(t,"limits","raggedRange",r.dtype),deltas:Object(l.a)(n,"deltas","raggedRange",r.dtype)},s=c.a.runKernel(u.nc,a);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}});const Dt=Object(h.b)({raggedTensorToTensor_:function(e,t,n,r,a){const s=Object(l.a)(e,"shape","raggedTensorToTensor","int32"),o=Object(l.a)(t,"values","raggedTensorToTensor"),i={shape:s,values:o,defaultValue:Object(l.a)(n,"defaultValue","raggedTensorToTensor",o.dtype),rowPartitionTensors:r.map((e,t)=>Object(l.a)(e,"tensors".concat(t),"raggedTensorToTensor","int32"))},d={rowPartitionTypes:a};return c.a.runKernel(u.oc,i,d)}});const Lt=Object(h.b)({rand_:function(e,t,n){Object(d.d)(e);const r=Object(d.O)(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type ".concat(n));a=new Uint8Array(r)}for(let s=0;s<r;s++)a[s]=t();return c.a.makeTensor(a,e,n)}});var zt=n(79);n(133);class Pt{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=zt.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*a*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Bt{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=zt.alea(a.toString()),this.randn=new Pt(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Wt{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"===typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(e," - ").concat(t," <= 1 and dtype is not float"));this.random=zt.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Ut=Object(h.b)({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0;if(Object(d.d)(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type ".concat(r));const s=new Bt(t,n,r,a),o=Object(G.a)(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Vt=Object(h.b)({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if(Object(d.d)(e),null!=r&&"bool"===r)throw new Error("Unsupported data type ".concat(r));const s=new Pt(t,n,r,!1,a),o=Object(G.a)(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Gt=Object(h.b)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error("Unsupported data type ".concat(t));return Vt(e,0,1,t,n)}});const Ht=Object(h.b)({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0;Object(d.d)(e);const s=Object(G.a)(e,r),o=new Wt(t,n,null,a);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const qt=Object(h.b)({randomUniformInt_:function(e,t,n,r){return Ht(e,t,n,"int32",r)}});function Kt(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return c.a.runKernel(u.pc,{},a)}var Xt=n(83),Yt=n(205),Qt=n(74),Zt=n(126),Jt=n(43);const $t=Object(h.b)({reverse1d_:function(e){const t=Object(l.a)(e,"x","reverse");return d.c(1===t.rank,()=>"Error in reverse1D: x must be rank 1 but got rank ".concat(t.rank,".")),Object(Jt.a)(t,0)}});const en=Object(h.b)({reverse2d_:function(e,t){const n=Object(l.a)(e,"x","reverse");return d.c(2===n.rank,()=>"Error in reverse2D: x must be rank 2 but got rank ".concat(n.rank,".")),Object(Jt.a)(n,t)}});const tn=Object(h.b)({reverse3d_:function(e,t){const n=Object(l.a)(e,"x","reverse");return d.c(3===n.rank,()=>"Error in reverse3D: x must be rank 3 but got rank ".concat(n.rank,".")),Object(Jt.a)(n,t)}});const nn=Object(h.b)({reverse4d_:function(e,t){const n=Object(l.a)(e,"x","reverse");return d.c(4===n.rank,()=>"Error in reverse4D: x must be rank 4 but got rank ".concat(n.rank,".")),Object(Jt.a)(n,t)}});var rn=n(166),an=n(167),sn=n(17),on=n(168),cn=n(169);const un=async function(e,t){const n=Object(l.a)(e,"x","setdiff1d"),r=Object(l.a)(t,"y","setdiff1d");d.c(n.dtype===r.dtype,()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(r.dtype,").")),d.c(1===n.rank,()=>"x should be 1D tensor, but got x (".concat(n.shape,").")),d.c(1===r.rank,()=>"y should be 1D tensor, but got y (".concat(r.shape,")."));const a=await n.data(),s=await r.data(),o=new Set(s);let i=0;for(let l=0;l<a.length;l++)o.has(a[l])||i++;const c=new it.b([i],n.dtype),u=new it.b([i],"int32");for(let l=0,d=0;l<a.length;l++)o.has(a[l])||(c.values[d]=a[l],u.values[d]=l,d++);return[c.toTensor(),u.toTensor()]};var ln=n(206),dn=n(170),hn=n(171);const pn=Object(h.b)({slice1d_:function(e,t,n){const r=Object(l.a)(e,"x","slice1d");return d.c(1===r.rank,()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(r.rank," tensor")),Object(R.a)(r,[t],[n])}});const fn=Object(h.b)({slice2d_:function(e,t,n){const r=Object(l.a)(e,"x","slice2d");return d.c(2===r.rank,()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(r.rank," tensor")),Object(R.a)(r,t,n)}});const mn=Object(h.b)({slice3d_:function(e,t,n){const r=Object(l.a)(e,"x","slice3d");return d.c(3===r.rank,()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(r.rank," tensor")),Object(R.a)(r,t,n)}});const gn=Object(h.b)({slice4d_:function(e,t,n){const r=Object(l.a)(e,"x","slice4d");return d.c(4===r.rank,()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(r.rank," tensor")),Object(R.a)(r,t,n)}});var bn=n(207),yn=n(159),vn=n(96),xn=n(127),wn=n(102),On=n(172),kn=n(128),Sn=n(59),In=n(33),Nn=n(129),Tn=n(97),jn=n(49),En=n(75),Cn=n(208),An=n(16),Rn=n(209),Fn=n(78),_n=n(46);function Mn(e,t){Object(d.e)(e);const n=Object(l.c)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(_n.a)(e,null,n,t)}function Dn(e,t,n){if(Object(d.e)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(l.c)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(_n.a)(e,t,r,n)}var Ln=n(173);function zn(e,t,n){if(Object(d.e)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(l.c)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(_n.a)(e,t,r,n)}function Pn(e,t,n){if(Object(d.e)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(l.c)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(_n.a)(e,t,r,n)}function Bn(e,t,n){if(Object(d.e)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(l.c)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,Object(_n.a)(e,t,r,n)}var Wn=n(86);const Un=Object(h.b)({tensorScatterUpdate_:function(e,t,n){const r=Object(l.a)(e,"tensor","tensorScatterupdate"),a=Object(l.a)(t,"indices","tensorScatterupdate","int32"),s=Object(l.a)(n,"updates","tensorScatterupdate");if(Wn.b(s,a,r.shape),r.dtype!==s.dtype)throw new Error("tensor and updates must have the same dtype, instead they are ".concat(r.dtype," and ").concat(s.dtype,"."));const o={tensor:r,indices:a,updates:s};return c.a.runKernel(u.jd,o,{})}});var Vn=n(174);const Gn=Object(h.b)({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if(Object(d.d)(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new Pt(t,n,r,!0,a),o=Object(G.a)(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});var Hn=n(175),qn=n(130),Kn=n(76);function Xn(e,t){return Je(e,t,"right")}function Yn(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return c.a.makeVariable(e,t,n,r)}var Qn=n(31),Zn=n(176);const Jn=async function(e){const t=Object(l.a)(e,"condition","whereAsync","bool"),n=await t.data(),r=Object(Zn.a)(t.shape,n);return e!==t&&t.dispose(),r};var $n=n(73),er=n(19);const tr=async function(e,t,n){const r=Object(l.a)(e,"tensor","boolMask"),a=Object(l.a)(t,"mask","boolMask","bool"),s=null==n?0:n,o=a.rank,i=r.shape;d.c(o>0,()=>"mask cannot be scalar"),d.f(i.slice(s,s+o),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let l=s;l<s+o;l++)c*=i[l];const u=i.slice(0,s).concat([c],i.slice(s+o)),h=Object(N.a)(r,u),p=Object(N.a)(a,[-1]),f=await Jn(p),m=Object(Tn.a)(f,[1]),g=Object(Ae.a)(h,m,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),m.dispose(),h.dispose(),p.dispose(),f.dispose(),g};var nr=n(44),rr=n(92),ar=n(23);const sr=Object(h.b)({movingAverage_:function(e,t,n,r){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const s=Object(l.a)(e,"v","movingAverage"),o=Object(l.a)(t,"x","movingAverage"),c=Object(l.a)(n,"decay","movingAverage");Object(ar.assertTypesMatch)(s,o),d.c(d.a(s.shape,o.shape),()=>"Shape mismatch in v and x");const u=Object(sn.a)(1),h=Object(mt.a)(u,c);let p=Object(C.a)(Object(mt.a)(o,s),h);if(a){d.c(null!=r,()=>"When using zeroDebias: true, step is required.");const e=Object(l.a)(r,"step","movingAverage");p=Object(fe.a)(p,Object(mt.a)(u,Object(Ct.a)(c,e)))}return Object(i.a)(s,p)}});const or=Object(h.b)({scatterND_:function(e,t,n){Object(d.d)(n);const r=Object(l.a)(e,"indices","scatterND","int32"),a=Object(l.a)(t,"updates","scatterND");Wn.b(a,r,n);const s={indices:r,updates:a},o={shape:n};return c.a.runKernel(u.Ec,s,o)}});function ir(e,t,n,r){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(e.shape,"."));const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(s,"."));const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==a))throw new Error("sparseValues has incorrect shape "+"".concat(t.shape,", should be [] or [").concat(a,"]"));if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}const cr=Object(h.b)({sparseToDense_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;Object(d.d)(n);const a=Object(l.a)(e,"sparseIndices","sparseToDense","int32"),s=Object(l.a)(t,"sparseValues","sparseToDense","string_or_numeric"),o=Object(l.a)(r,"defaultValue","sparseToDense",s.dtype);ir(a,s,n,o);const i={sparseIndices:a,sparseValues:s,defaultValue:o},h={outputShape:n};return c.a.runKernel(u.Uc,i,h)}});const ur=Object(h.b)({gatherND_:function(e,t){const n=Object(l.a)(t,"indices","gatherND","int32"),r={params:Object(l.a)(e,"x","gatherND","string_or_numeric"),indices:n};return c.a.runKernel(u.qb,r)}});const lr=Object(h.b)({dropout_:function(e,t,n,r){const a=Object(l.a)(e,"x","dropout");if(d.c("float32"===a.dtype,()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(a.dtype," tensor instead.")),d.c(t>=0&&t<1,()=>"rate must be a float in the range [0, 1), but got ".concat(t,".")),0===t)return e instanceof it.a?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(d.a(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),o=1-t,c=Object(fe.a)(Object(Ee.a)(Object(i.a)(Ht(s,0,1,"float32",r),o)),o);return Object(C.a)(a,c)}});function dr(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function hr(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(o)}return Mn(a,"float32")}const pr=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const r=Object(l.a)(e,"predictions","inTopK"),a=Object(l.a)(t,"targets","inTopK");Object(d.c)(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(r.rank)),Object(d.c)(r.rank-1===a.rank,()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(r.rank," and targets rank ").concat(a.rank)),Object(d.f)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];Object(d.c)(n>0&&n<=s,()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(s,"), but got ").concat(n));const o=await r.data(),i=await a.data(),[c,u]=[o.length/s,s],h=Object(d.p)("bool",c);for(let l=0;l<c;l++){const e=l*u,t=o.subarray(e,e+u),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort((e,t)=>t.value-e.value),h[l]=0;for(let a=0;a<n;a++)if(r[a].index===i[l]){h[l]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Object(Fn.a)(h,a.shape,"bool")};var fr=n(32),mr=n(15),gr=n(134),br=n(132),yr=n(40);const vr=Object(h.b)({fusedConv2d_:function(e){let{x:t,filter:n,strides:r,pad:a,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:h,bias:p,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(f=f||"linear",!1===Object(yr.d)(c.a.state.gradientDepth,f)){d.c("NHWC"===s,()=>"Error in fused conv2d: got dataFormat of ".concat(s," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.");let e=Object(ee.a)(t,n,r,a,s,o,h);return null!=p&&(e=Object(i.a)(e,p)),Object(yr.a)(e,f,m,g)}const b=Object(l.a)(t,"x","conv2d","float32"),y=Object(l.a)(n,"filter","conv2d","float32");let v=b,x=!1;3===b.rank&&(x=!0,v=Object(N.a)(b,[1,b.shape[0],b.shape[1],b.shape[2]])),d.c(4===v.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(v.rank,".")),d.c(4===y.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(y.rank,".")),I.a("fused conv2d",a,h);const w="NHWC"===s?v.shape[3]:v.shape[1];d.c(y.shape[2]===w,()=>"Error in conv2d: depth of input (".concat(w,") must match ")+"input depth for filter ".concat(y.shape[2],".")),d.c(I.i(r,o),()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(r," and dilations '").concat(o,"'"));const O=I.b(v.shape,y.shape,r,o,a,h);let k,S;if(null!=p&&(k=Object(l.a)(p,"bias","fused conv2d"),[k]=Object(ar.makeTypesMatch)(k,b),"NHWC"===s?mr.assertAndGetBroadcastShape(O.outShape,k.shape):(d.c(k.shape.length<=1,()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(k.shape.length,".")),d.c(0===k.shape.length||k.shape[0]===O.outChannels||1===k.shape[0],()=>"Error in fused conv2d: bias shape (".concat(k.shape,") is not ")+"compatible with the number of output channels "+"(".concat(O.outChannels,")")))),null!=m){const e=m.shape;if(d.c(e.length<=1||3===e.length,()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(e.length,".")),1===e.length)d.c(1===e[0]||e[0]===O.outChannels,()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(e,") is not compatible with the number of output ")+"channels (".concat(O.outChannels,")."));else if(3===e.length)try{mr.assertAndGetBroadcastShape(e,O.outShape)}catch(C){const t="Error in fused conv2d: PReLU activation weights (".concat(e,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(O.outShape,").");throw Error(t)}S=Object(l.a)(m,"prelu weights","fused conv2d")}const T=(e,t)=>{d.c("NHWC"===s,()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(s," but only NHWC is currently supported."));const[n,i,c,u]=t,l=Object(yr.c)(e,c,f);d.c(I.k(o),()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'"));const h=[Object(br.a)(i.shape,l,n,r,a),Object(gr.a)(i,l,n.shape,r,a)];if(null!=u){const e=Object(yr.b)(u,l);h.push(e)}return h},j={x:v,filter:y,bias:k,preluActivationWeights:S},E={strides:r,pad:a,dataFormat:s,dilations:o,dimRoundingMode:h,activation:f,leakyreluAlpha:g};if(null==p){return Object(fr.a)((e,t,n)=>{let r=c.a.runKernel(u.ob,j,E);return n([t,e,r]),x&&(r=Object(N.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:T}})(v,y)}return Object(fr.a)((e,t,n,r)=>{let a=c.a.runKernel(u.ob,j,E);return r([t,e,a,n]),x&&(a=Object(N.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:T}})(v,y,k)}});var xr=n(184),wr=n(183);const Or=Object(h.b)({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:r,pad:a,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:h,bias:p,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(!1===Object(yr.d)(c.a.state.gradientDepth,f)){let e=Object(de.a)(t,n,r,a,s,o,h);return null!=p&&(e=Object(i.a)(e,p)),Object(yr.a)(e,f,m,g)}const b=Object(l.a)(t,"x","depthwiseConv2d","float32"),y=Object(l.a)(n,"filter","depthwiseConv2d","float32");let v=b,x=!1;3===b.rank&&(x=!0,v=Object(N.a)(b,[1,b.shape[0],b.shape[1],b.shape[2]])),d.c(4===v.rank,()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(v.rank,".")),d.c(4===y.rank,()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(y.rank,".")),d.c(v.shape[3]===y.shape[2],()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(v.shape[3],") must match the inChannels dimension in ")+"filter ".concat(y.shape[2],".")),null==o&&(o=[1,1]),d.c(I.i(r,o),()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(r," and dilations '").concat(o,"'")),I.a("fused depthwiseConv2d",a,h);const w=I.b(v.shape,y.shape,r,o,a,h,!0);let O,k;null!=p&&(O=Object(l.a)(p,"bias","fused conv2d"),[O]=Object(ar.makeTypesMatch)(O,b),mr.assertAndGetBroadcastShape(w.outShape,O.shape)),null!=m&&(k=Object(l.a)(m,"prelu weights","fused depthwiseConv2d"));const S=(e,t)=>{d.c(I.k(o),()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(o,"'"));const[n,s,i,c]=t,u=Object(yr.c)(e,i,f),l=Object(wr.a)(s.shape,u,n,r,a,o,h),p=Object(xr.a)(s,u,n.shape,r,a,o,h);if(null!=c){return[l,p,Object(yr.b)(O,u)]}return[l,p]},T={x:v,filter:y,bias:O,preluActivationWeights:k},j={strides:r,pad:a,dataFormat:s,dilations:o,dimRoundingMode:h,activation:f,leakyreluAlpha:g};if(null==p){return Object(fr.a)((e,t,n)=>{let r=c.a.runKernel(u.pb,T,j);return n([t,e,r]),x&&(r=Object(N.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:S}})(v,y)}return Object(fr.a)((e,t,n,r)=>{let a=c.a.runKernel(u.pb,T,j);return r([t,e,a,n]),x&&(a=Object(N.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:S}})(v,y,O)}});const kr=Object(h.b)({fusedMatMul_:function(e){let{a:t,b:n,transposeA:r=!1,transposeB:a=!1,bias:s,activation:o="linear",preluActivationWeights:h,leakyreluAlpha:p=.2}=e;if(!1===Object(yr.d)(c.a.state.gradientDepth,o)){let e=Object(E.a)(t,n,r,a);return null!=s&&(e=Object(i.a)(e,s)),Object(yr.a)(e,o,h,p)}let f=Object(l.a)(t,"a","fused matMul"),m=Object(l.a)(n,"b","fused matMul");[f,m]=Object(ar.makeTypesMatch)(f,m);const g=r?f.shape[f.rank-2]:f.shape[f.rank-1],b=a?m.shape[m.rank-1]:m.shape[m.rank-2],y=r?f.shape[f.rank-1]:f.shape[f.rank-2],v=a?m.shape[m.rank-2]:m.shape[m.rank-1],x=f.shape.slice(0,-2),w=m.shape.slice(0,-2),O=d.O(x),k=d.O(w);d.c(g===b,()=>"Error in fused matMul: inner shapes (".concat(g,") and (")+"".concat(b,") of Tensors with shapes ").concat(f.shape," and ")+"".concat(m.shape," and transposeA=").concat(r)+" and transposeB=".concat(a," must match."));const S=mr.assertAndGetBroadcastShape(f.shape.slice(0,-2),m.shape.slice(0,-2)).concat([y,v]),I=r?Object(N.a)(f,[O,g,y]):Object(N.a)(f,[O,y,g]),T=a?Object(N.a)(m,[k,v,b]):Object(N.a)(m,[k,b,v]);let j,C;null!=s&&(j=Object(l.a)(s,"bias","fused matMul"),[j]=Object(ar.makeTypesMatch)(j,f),mr.assertAndGetBroadcastShape(S,j.shape)),null!=h&&(C=Object(l.a)(h,"prelu weights","fused matMul"));const A=(e,t)=>{const[n,i,c,u]=t,l=Object(yr.c)(Object(N.a)(e,c.shape),c,o);let d,h;if(r||a?!r&&a?(d=Object(E.a)(l,i,!1,!1),h=Object(E.a)(l,n,!0,!1)):r&&!a?(d=Object(E.a)(i,l,!1,!0),h=Object(E.a)(n,l,!1,!1)):(d=Object(E.a)(i,l,!0,!0),h=Object(E.a)(l,n,!0,!0)):(d=Object(E.a)(l,i,!1,!0),h=Object(E.a)(n,l,!0,!1)),null!=s){return[d,h,Object(yr.b)(u,l)]}return[d,h]},R={a:I,b:T,bias:j,preluActivationWeights:C},F={transposeA:r,transposeB:a,activation:o,leakyreluAlpha:p};if(null==s){return Object(fr.a)((e,t,n)=>{const r=c.a.runKernel(u.sd,R,F);return n([e,t,r]),{value:Object(N.a)(r,S),gradFunc:A}})(I,T)}return Object(fr.a)((e,t,n,r)=>{const a=c.a.runKernel(u.sd,R,F);return r([e,t,a,n]),{value:Object(N.a)(a,S),gradFunc:A}})(I,T,j)}});const Sr=Object(h.b)({hammingWindow_:function(e){return hr(e,.54,.46)}});const Ir=Object(h.b)({hannWindow_:function(e){return hr(e,.5,.5)}});const Nr=Object(h.b)({frame_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const o=[];for(;s+t<=e.size;)o.push(Object(R.a)(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,i=Object(j.a)([Object(R.a)(e,s,t-r),Object(je.a)([r],a)]);o.push(i),s+=n}return 0===o.length?Dn([],[0,t]):Object(N.a)(Object(j.a)(o),[o.length,t])}});const Tr=Object(h.b)({stft_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Ir;null==r&&(r=dr(t));const s=Nr(e,t,n),o=Object(C.a)(s,a(t));return Object(kn.a)(o,r)}});const jr=Object(h.b)({cropAndResize_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=Object(l.a)(e,"image","cropAndResize"),i=Object(l.a)(t,"boxes","cropAndResize","float32"),h=Object(l.a)(n,"boxInd","cropAndResize","int32"),p=i.shape[0];d.c(4===o.rank,()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(o.rank,".")),d.c(2===i.rank&&4===i.shape[1],()=>"Error in cropAndResize: boxes must be have size [".concat(p,",4] ")+"but had shape ".concat(i.shape,".")),d.c(1===h.rank&&h.shape[0]===p,()=>"Error in cropAndResize: boxInd must be have size [".concat(p,"] ")+"but had shape ".concat(i.shape,".")),d.c(2===r.length,()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(r.length,".")),d.c(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was ".concat(r)),d.c("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was ".concat(a));const f={image:o,boxes:i,boxInd:h},m={method:a,extrapolationValue:s,cropSize:r},g=c.a.runKernel(u.M,f,m);return g}});const Er=Object(h.b)({flipLeftRight_:function(e){const t=Object(l.a)(e,"image","flipLeftRight","float32");d.c(4===t.rank,()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(t.rank,"."));const n={image:t};return c.a.runKernel(u.jb,n,{})}});const Cr=Object(h.b)({grayscaleToRGB_:function(e){const t=Object(l.a)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];d.c(t.rank>=2,()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(t.rank,".")),d.c(1===r,()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(r,"."));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,Object(Ne.a)(t,a)}});const Ar=Object(h.b)({rgbToGrayscale_:function(e){const t=Object(l.a)(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];d.c(t.rank>=2,()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(t.rank,".")),d.c(3===r,()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(r,"."));const a=t.dtype,s=Object(S.a)(t,"float32"),o=Mn([.2989,.587,.114]);let i;switch(t.rank){case 2:i=be("ij,j->i",s,o);break;case 3:i=be("ijk,k->ij",s,o);break;case 4:i=be("ijkl,l->ijk",s,o);break;case 5:i=be("ijklm,m->ijkl",s,o);break;case 6:i=be("ijklmn,n->ijklm",s,o);break;default:throw new Error("Not a valid tensor rank.")}return i=Object(Se.a)(i,-1),Object(S.a)(i,a)}});const Rr=Object(h.b)({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const a=Object(l.a)(e,"image","rotateWithOffset","float32");d.c(4===a.rank,()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(a.rank,"."));const s={image:a},o={radians:t,fillValue:n,center:r},i=c.a.runKernel(u.Bc,s,o);return i}});function Fr(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),d.c(0<=r&&r<=1,()=>"iouThreshold must be in [0, 1], but was '".concat(r,"'")),d.c(2===e.rank,()=>"boxes must be a 2D tensor, but was of rank '".concat(e.rank,"'")),d.c(4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was ".concat(e.shape[1])),d.c(1===t.rank,()=>"scores must be a 1D tensor"),d.c(t.shape[0]===o,()=>"scores has incompatible shape with boxes. Expected ".concat(o,", ")+"but was ".concat(t.shape[0])),d.c(0<=s&&s<=1,()=>"softNmsSigma must be in [0, 1], but was '".concat(s,"'")),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const _r=Object(h.b)({nonMaxSuppression_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=Object(l.a)(e,"boxes","nonMaxSuppression","float32"),o=Object(l.a)(t,"scores","nonMaxSuppression","float32"),i=Fr(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const d={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return c.a.runKernel(u.bc,{boxes:s,scores:o},d)}});var Mr=n(71);const Dr=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=Object(l.a)(e,"boxes","nonMaxSuppressionAsync"),o=Object(l.a)(t,"scores","nonMaxSuppressionAsync"),i=Fr(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const c=await Promise.all([s.data(),o.data()]),u=c[0],d=c[1],{selectedIndices:h}=Object(Mr.a)(u,d,n,r,a);return s!==e&&s.dispose(),o!==t&&o.dispose(),Mn(h,"int32")};const Lr=Object(h.b)({nonMaxSuppressionWithScore_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=Object(l.a)(e,"boxes","nonMaxSuppression"),i=Object(l.a)(t,"scores","nonMaxSuppression"),d=Fr(o,i,n,r,a,s);n=d.maxOutputSize,r=d.iouThreshold,a=d.scoreThreshold,s=d.softNmsSigma;const h={boxes:o,scores:i},p={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},f=c.a.runKernel(u.dc,h,p);return{selectedIndices:f[0],selectedScores:f[1]}}});const zr=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=Object(l.a)(e,"boxes","nonMaxSuppressionAsync"),i=Object(l.a)(t,"scores","nonMaxSuppressionAsync"),c=Fr(o,i,n,r,a,s);n=c.maxOutputSize,r=c.iouThreshold,a=c.scoreThreshold,s=c.softNmsSigma;const u=await Promise.all([o.data(),i.data()]),d=u[0],h=u[1],{selectedIndices:p,selectedScores:f}=Object(Mr.c)(d,h,n,r,a,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Mn(p,"int32"),selectedScores:Mn(f)}};const Pr=Object(h.b)({nonMaxSuppressionPadded_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=Object(l.a)(e,"boxes","nonMaxSuppression"),i=Object(l.a)(t,"scores","nonMaxSuppression"),d=Fr(o,i,n,r,a,null),h=d.maxOutputSize,p=d.iouThreshold,f=d.scoreThreshold,m={boxes:o,scores:i},g={maxOutputSize:h,iouThreshold:p,scoreThreshold:f,padToMaxOutputSize:s},b=c.a.runKernel(u.cc,m,g);return{selectedIndices:b[0],validOutputs:b[1]}}});const Br=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=Object(l.a)(e,"boxes","nonMaxSuppressionAsync"),i=Object(l.a)(t,"scores","nonMaxSuppressionAsync"),c=Fr(o,i,n,r,a,null),u=c.maxOutputSize,d=c.iouThreshold,h=c.scoreThreshold,[p,f]=await Promise.all([o.data(),i.data()]),{selectedIndices:m,validOutputs:g}=Object(Mr.b)(p,f,u,d,h,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Mn(m,"int32"),validOutputs:Object(sn.a)(g,"int32")}};var Wr=n(182),Ur=n(181);function Vr(e,t){let n,r,a,s,o,c,u=Mn([-1]),l=Mn([0]),d=Mn([0]);for(let h=0;h<e.size-1;h++){n=Object(R.a)(e,0,h+1),r=Object(R.a)(e,h+1),o=Object(fe.a)(Object(An.a)(n),t),c=Object(fe.a)(Object(An.a)(r),t);const p=Object(An.a)(Object(C.a)(n,Kt(0,n.size)));a=Object(fe.a)(p,Object(An.a)(n));const f=Object(je.a)(r.shape,n.size),m=Object(i.a)(Kt(0,r.size),f),g=Object(C.a)(r,m);s=Object(fe.a)(Object(An.a)(g),Object(An.a)(r));const b=Object(mt.a)(a,s),y=Object(mt.a)(a,s),v=Object(C.a)(o,c);d=Object(C.a)(Object(C.a)(v,b),y);const x=Object(Re.a)(d,l);l=Object(Qn.a)(x,d,l),u=Object(Qn.a)(x,Mn([h]),u)}return u}const Gr=Object(h.b)({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const a=Object(l.a)(e,"image","threshold"),s=.2989,o=.587,c=.114,u=a.shape[0]*a.shape[1];let h,p,f,m,g=Object(C.a)(Mn([r]),255);if(d.c(3===a.rank,()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(a.rank,".")),d.c(3===a.shape[2]||1===a.shape[2],()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(a.shape[2],".")),d.c("int32"===a.dtype||"float32"===a.dtype,()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(a.dtype,".")),d.c("otsu"===t||"binary"===t,()=>"Method must be binary or otsu, but was ".concat(t)),3===a.shape[2]){[h,p,f]=Object(Sn.a)(a,[1,1,1],-1);const e=Object(C.a)(h,s),t=Object(C.a)(p,o),n=Object(C.a)(f,c);m=Object(i.a)(Object(i.a)(e,t),n)}else m=e;if("otsu"===t){g=Vr(B(Object(S.a)(Object(rn.a)(m),"int32"),Object(Fn.a)([]),256),u)}const b=n?Object(Be.a)(m,g):Object(Re.a)(m,g),y=Object(S.a)(Object(C.a)(b,255),"int32");return y}});const Hr=Object(h.b)({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0;const o=Object(l.a)(e,"image","transform","float32"),i=Object(l.a)(t,"transforms","transform","float32");d.c(4===o.rank,()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(o.rank,".")),d.c(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),d.c(null==s||2===s.length,()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(s,"."));const h={image:o,transforms:i},p={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return c.a.runKernel(u.md,h,p)}});const qr=Object(h.b)({bandPart_:function(e,t,n){const r=Object(l.a)(e,"a","bandPart");Object(d.c)(r.rank>=2,()=>"bandPart(): Rank must be at least 2, got ".concat(r.rank,"."));const a=r.shape,[s,o]=r.shape.slice(-2);let i,c;"number"===typeof t?(Object(d.c)(t%1===0,()=>"bandPart(): numLower must be an integer, got ".concat(t,".")),Object(d.c)(t<=s,()=>"bandPart(): numLower (".concat(t,")")+" must not be greater than the number of rows (".concat(s,").")),i=Object(l.a)(t<0?s:t,"numLower","bandPart")):(Object(d.c)("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),i=Object(Qn.a)(Object(Pe.a)(t,0),s,Object(lt.a)(t,s))),"number"===typeof n?(Object(d.c)(n%1===0,()=>"bandPart(): numUpper must be an integer, got ".concat(n,".")),Object(d.c)(n<=o,()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(o,").")),c=Object(l.a)(n<0?o:n,"numUpper","bandPart")):(Object(d.c)("int32"===n.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),c=Object(Qn.a)(Object(Pe.a)(n,0),o,Object(lt.a)(n,o)));const u=Object(N.a)(Kt(0,s,1,"int32"),[-1,1]),h=Kt(0,o,1,"int32"),p=Object(mt.a)(u,h),f=Object(Xe.a)(Object(Be.a)(p,i),Object(Fe.a)(p,Object(vt.a)(c))),m=Object($n.a)([s,o],r.dtype);return Object(N.a)(Object(jn.a)(Object(Kn.a)(Object(N.a)(r,[-1,s,o])).map(e=>Object(Qn.a)(f,e,m))),a)}});const Kr=Object(h.b)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Object(d.c)(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)Object(d.c)(e[t].shape[0]===n,()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(e[t].shape[0]," vs. ").concat(n,")"))}else t=!0,e=Object(Sn.a)(e,e.shape[0],0).map(e=>Object(Tn.a)(e,[0]));Object(d.c)(e.length<=e[0].shape[0],()=>"Gram-Schmidt: Number of vectors (".concat(e.length,") exceeds ")+"number of dimensions (".concat(e[0].shape[0],")."));const n=[],r=e;for(let a=0;a<e.length;++a)n.push(c.a.tidy(()=>{let e=r[a];if(a>0)for(let t=0;t<a;++t){const r=Object(C.a)(Object(An.a)(Object(C.a)(n[t],e)),n[t]);e=Object(mt.a)(e,r)}return Object(fe.a)(e,Object(rr.a)(e,"euclidean"))}));return t?Object(jn.a)(n,0):n}});var Xr=n(24);function Yr(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return c.a.tidy(()=>{Object(d.c)(2===e.shape.length,()=>"qr2d() requires a 2D Tensor, but got a ".concat(e.shape.length,"D Tensor."));const n=e.shape[0],r=e.shape[1];let a=Te(n),s=Object(K.a)(e);const o=Dn([[1]],[1,1]);let i=Object(K.a)(o);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=i,l=a;[i,s,a]=c.a.tidy(()=>{const t=Object(R.a)(s,[e,e],[n-e,1]),c=Object(rr.a)(t),u=Object(R.a)(s,[e,e],[1,1]),l=Object(Qn.a)(Object(Re.a)(u,0),Dn([[-1]]),Dn([[1]])),d=Object(mt.a)(u,Object(C.a)(l,c)),h=Object(fe.a)(t,d);i=1===h.shape[0]?Object(K.a)(o):Object(j.a)([o,Object(R.a)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=Object(vt.a)(Object(fe.a)(Object(E.a)(l,d),c)),f=Object(R.a)(s,[e,0],[n-e,r]),m=Object(C.a)(p,i),g=Object(nr.a)(i);if(0===e)s=Object(mt.a)(f,Object(E.a)(m,Object(E.a)(g,f)));else{const t=Object(mt.a)(f,Object(E.a)(m,Object(E.a)(g,f)));s=Object(j.a)([Object(R.a)(s,[0,0],[e,r]),t],0)}const b=Object(nr.a)(m),y=Object(R.a)(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Object(mt.a)(y,Object(E.a)(Object(E.a)(y,i),b));else{const t=Object(mt.a)(y,Object(E.a)(Object(E.a)(y,i),b));a=Object(j.a)([Object(R.a)(a,[0,0],[n,e]),t],1)}return[i,s,a]}),Object(Xr.b)([t,u,l])}return!t&&n>r&&(a=Object(R.a)(a,[0,0],[n,r]),s=Object(R.a)(s,[0,0],[r,r])),[a,s]})}const Qr=Object(h.b)({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(Object(d.c)(e.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(e.rank)),2===e.rank)return Yr(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=Object(Kn.a)(Object(N.a)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach(e=>{const[n,r]=Yr(e,t);a.push(n),s.push(r)});return[Object(N.a)(Object(jn.a)(a,0),e.shape),Object(N.a)(Object(jn.a)(s,0),e.shape)]}}});var Zr=n(34);const Jr=Object(h.b)({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Zr.a.SUM_BY_NONZERO_WEIGHTS;const r=Object(l.a)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Object(l.a)(t,"weights","computeWeightedLoss"));const s=null==a?r:Object(C.a)(r,a);if(n===Zr.a.NONE)return s;if(n===Zr.a.SUM)return Object(An.a)(s);if(n===Zr.a.MEAN){if(null==a)return Object(st.a)(s);{const e=r.size/a.size,t=Object(fe.a)(Object(An.a)(s),Object(An.a)(a));return e>1?Object(fe.a)(t,Object(sn.a)(e)):t}}if(n===Zr.a.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Object(fe.a)(Object(An.a)(s),Object(sn.a)(r.size));{const e=Object(C.a)(a,Object(ot.a)(r.shape)),t=Object(S.a)(Object(An.a)(Object(xt.a)(e,Object(sn.a)(0))),"float32");return Object(fe.a)(Object(An.a)(s),t)}}throw Error("Unknown reduction: ".concat(n))}});const $r=Object(h.b)({absoluteDifference_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Zr.a.SUM_BY_NONZERO_WEIGHTS;const s=Object(l.a)(e,"labels","absoluteDifference"),o=Object(l.a)(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Object(l.a)(n,"weights","absoluteDifference")),Object(d.f)(s.shape,o.shape,"Error in absoluteDifference: ");const c=Object(a.a)(Object(mt.a)(s,o));return Jr(c,i,r)}});const ea=Object(h.b)({cosineDistance_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zr.a.SUM_BY_NONZERO_WEIGHTS;const s=Object(l.a)(e,"labels","cosineDistance"),o=Object(l.a)(t,"predictions","cosineDistance");let i=null;null!=r&&(i=Object(l.a)(r,"weights","cosineDistance")),Object(d.f)(s.shape,o.shape,"Error in cosineDistance: ");const c=Object(sn.a)(1),u=Object(mt.a)(c,Object(An.a)(Object(C.a)(s,o),n,!0));return Jr(u,i,a)}});const ta=Object(h.b)({hingeLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Zr.a.SUM_BY_NONZERO_WEIGHTS,a=Object(l.a)(e,"labels","hingeLoss");const s=Object(l.a)(t,"predictions","hingeLoss");let o=null;null!=n&&(o=Object(l.a)(n,"weights","hingeLoss")),Object(d.f)(a.shape,s.shape,"Error in hingeLoss: ");const i=Object(sn.a)(1);a=Object(mt.a)(Object(C.a)(Object(sn.a)(2),a),i);const c=Object(Qt.a)(Object(mt.a)(i,Object(C.a)(a,s)));return Jr(c,o,r)}});const na=Object(h.b)({huberLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zr.a.SUM_BY_NONZERO_WEIGHTS;const o=Object(l.a)(e,"labels","huberLoss"),c=Object(l.a)(t,"predictions","huberLoss");let u=null;null!=n&&(u=Object(l.a)(n,"weights","huberLoss")),Object(d.f)(o.shape,c.shape,"Error in huberLoss: ");const h=Object(sn.a)(r),p=Object(a.a)(Object(mt.a)(c,o)),f=Object(lt.a)(p,h),m=Object(mt.a)(p,f),g=Object(i.a)(Object(C.a)(Object(sn.a)(.5),Object(ft.a)(f)),Object(C.a)(h,m));return Jr(g,u,s)}});const ra=Object(h.b)({logLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zr.a.SUM_BY_NONZERO_WEIGHTS;const s=Object(l.a)(e,"labels","logLoss"),o=Object(l.a)(t,"predictions","logLoss");let c=null;null!=n&&(c=Object(l.a)(n,"weights","logLoss")),Object(d.f)(s.shape,o.shape,"Error in logLoss: ");const u=Object(sn.a)(1),h=Object(sn.a)(r),p=Object(vt.a)(Object(C.a)(s,Object(Ve.a)(Object(i.a)(o,h)))),f=Object(C.a)(Object(mt.a)(u,s),Object(Ve.a)(Object(i.a)(Object(mt.a)(u,o),h))),m=Object(mt.a)(p,f);return Jr(m,c,a)}});const aa=Object(h.b)({meanSquaredError_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Zr.a.SUM_BY_NONZERO_WEIGHTS;const a=Object(l.a)(e,"labels","meanSquaredError"),s=Object(l.a)(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=Object(l.a)(n,"weights","meanSquaredError")),Object(d.f)(a.shape,s.shape,"Error in meanSquaredError: ");const i=Object(Nn.a)(a,s);return Jr(i,o,r)}});function sa(e,t){const n=Object(l.a)(e,"labels","sigmoidCrossEntropyWithLogits"),r=Object(l.a)(t,"logits","sigmoidCrossEntropyWithLogits");Object(d.f)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Object(Qt.a)(r),o=Object(C.a)(r,n),c=Object(Ge.a)(Object(ke.a)(Object(vt.a)(Object(a.a)(r))));return Object(i.a)(Object(mt.a)(s,o),c)}const oa=Object(h.b)({sigmoidCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zr.a.SUM_BY_NONZERO_WEIGHTS,s=Object(l.a)(e,"multiClassLabels","sigmoidCrossEntropy");const o=Object(l.a)(t,"logits","sigmoidCrossEntropy");let c=null;if(null!=n&&(c=Object(l.a)(n,"weights","sigmoidCrossEntropy")),Object(d.f)(s.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Object(sn.a)(r),t=Object(sn.a)(1),n=Object(sn.a)(.5);s=Object(i.a)(Object(C.a)(s,Object(mt.a)(t,e)),Object(C.a)(n,e))}const u=sa(s,o);return Jr(u,c,a)}});function ia(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(t.rank," ")+"and dim was ".concat(n));const r=Object(fr.a)((e,t,r)=>{const a=Object(Ke.a)(t,[n],!0),s=Object(mt.a)(Object(S.a)(t,"float32"),a);r([e,s]);const o=Object(vt.a)(Object(C.a)(s,e));return{value:Object(An.a)(o,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Object(pt.e)(e.shape,[n]);return[Object(C.a)(Object(N.a)(e,s),Object(mt.a)(Object(S.a)(r,"float32"),Object(ke.a)(a))),Object(C.a)(Object(N.a)(e,s),Object(mt.a)(Object(ke.a)(a),Object(S.a)(r,"float32")))]}}});return r(e,t)}const ca=Object(h.b)({softmaxCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zr.a.SUM_BY_NONZERO_WEIGHTS,s=Object(l.a)(e,"onehotLabels","softmaxCrossEntropy");const o=Object(l.a)(t,"logits","softmaxCrossEntropy");let c=null;if(null!=n&&(c=Object(l.a)(n,"weights","softmaxCrossEntropy")),Object(d.f)(s.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Object(sn.a)(r),t=Object(sn.a)(1),n=Object(sn.a)(s.shape[1]);s=Object(i.a)(Object(C.a)(s,Object(mt.a)(t,e)),Object(fe.a)(e,n))}const u=ia(s,o);return Jr(u,c,a)}});const ua=Object(h.b)({sparseFillEmptyRows_:function(e,t,n,r){const a=Object(l.a)(e,"indices","sparseFillEmptyRows","int32"),s=Object(l.a)(t,"values","sparseFillEmptyRows"),o=Object(l.a)(n,"denseShape","sparseFillEmptyRows","int32"),i=Object(l.a)(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error("Indices should be Tensor2D but received shape\n        ".concat(a.shape));if(1!==s.rank)throw new Error("Values should be Tensor1D but received shape ".concat(s.shape));if(1!==o.rank)throw new Error("Dense shape should be Tensor1D but received shape ".concat(o.shape));if(0!==i.rank)throw new Error("Default value should be a scalar but received shape ".concat(i.shape));const d={indices:a,values:s,denseShape:o,defaultValue:i},h=c.a.runKernel(u.Qc,d);return{outputIndices:h[0],outputValues:h[1],emptyRowIndicator:h[2],reverseIndexMap:h[3]}}});const la=Object(h.b)({sparseReshape_:function(e,t,n){const r=Object(l.a)(e,"inputIndices","sparseReshape","int32"),a=Object(l.a)(t,"inputShape","sparseReshape","int32"),s=Object(l.a)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error("Input indices should be Tensor2D but received shape\n        ".concat(r.shape));if(1!==a.rank)throw new Error("Input shape should be Tensor1D but received shape ".concat(a.shape));if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape ".concat(s.shape));const o={inputIndices:r,inputShape:a,newShape:s},i=c.a.runKernel(u.Rc,o);return{outputIndices:i[0],outputShape:i[1]}}});const da=Object(h.b)({sparseSegmentMean_:function(e,t,n){const r=Object(l.a)(e,"data","sparseSegmentMean"),a=Object(l.a)(t,"indices","sparseSegmentMean","int32"),s=Object(l.a)(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error("Indices should be Tensor1D but received shape\n          ".concat(a.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          ".concat(s.shape));const o={data:r,indices:a,segmentIds:s};return c.a.runKernel(u.Sc,o)}});const ha=Object(h.b)({sparseSegmentSum_:function(e,t,n){const r=Object(l.a)(e,"data","sparseSegmentSum"),a=Object(l.a)(t,"indices","sparseSegmentSum","int32"),s=Object(l.a)(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error("Indices should be Tensor1D but received shape\n         ".concat(a.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         ".concat(s.shape));const o={data:r,indices:a,segmentIds:s};return c.a.runKernel(u.Tc,o)}});const pa=Object(h.b)({stringNGrams_:function(e,t,n,r,a,s,o,i){const d=Object(l.a)(e,"data","stringNGrams","string");if("string"!==d.dtype)throw new Error("Data must be of datatype string");if(1!==d.shape.length)throw new Error("Data must be a vector, saw: ".concat(d.shape));const h=Object(l.a)(t,"dataSplits","stringNGrams");if("int32"!==h.dtype)throw new Error("Data splits must be of datatype int32");const p={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:o,preserveShortSequences:i},f={data:d,dataSplits:h},m=c.a.runKernel(u.cd,f,p);return{nGrams:m[0],nGramsSplits:m[1]}}});const fa=Object(h.b)({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=Object(l.a)(e,"input","stringSplit","string"),a=Object(l.a)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error("Input should be Tensor1D but received shape ".concat(r.shape));if(0!==a.rank)throw new Error("Delimiter should be a scalar but received shape ".concat(a.shape));const s={skipEmpty:n},o={input:r,delimiter:a},i=c.a.runKernel(u.dd,o,s);return{indices:i[0],values:i[1],shape:i[2]}}});const ma=Object(h.b)({stringToHashBucketFast_:function(e,t){const n=Object(l.a)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return c.a.runKernel(u.ed,a,r)}});const ga=Object(h.b)({staticRegexReplace_:function(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const a=Object(l.a)(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:r};return c.a.runKernel(u.Zc,{x:a},s)}}),ba={fft:xn.a,ifft:wn.a,rfft:kn.a,irfft:On.a},ya={hammingWindow:Sr,hannWindow:Ir,frame:Nr,stft:Tr},va={flipLeftRight:Er,grayscaleToRGB:Cr,resizeNearestNeighbor:Ur.a,resizeBilinear:Wr.a,rgbToGrayscale:Ar,rotateWithOffset:Rr,cropAndResize:jr,nonMaxSuppression:_r,nonMaxSuppressionAsync:Dr,nonMaxSuppressionWithScore:Lr,nonMaxSuppressionWithScoreAsync:zr,nonMaxSuppressionPadded:Pr,nonMaxSuppressionPaddedAsync:Br,threshold:Gr,transform:Hr},xa={bandPart:qr,gramSchmidt:Kr,qr:Qr},wa={absoluteDifference:$r,computeWeightedLoss:Jr,cosineDistance:ea,hingeLoss:ta,huberLoss:na,logLoss:ra,meanSquaredError:aa,sigmoidCrossEntropy:oa,softmaxCrossEntropy:ca},Oa={sparseFillEmptyRows:ua,sparseReshape:la,sparseSegmentMean:da,sparseSegmentSum:ha},ka={stringNGrams:pa,stringSplit:fa,stringToHashBucketFast:ma,staticRegexReplace:ga}},function(e,t,n){"use strict";n.r(t),n.d(t,"makeTypesMatch",(function(){return o})),n.d(t,"assertTypesMatch",(function(){return i})),n.d(t,"isTensorInList",(function(){return c})),n.d(t,"getTensorsInContainer",(function(){return u}));var r=n(6),a=n(52),s=n(8);function o(e,t){if(e.dtype===t.dtype)return[e,t];const n=Object(a.d)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i(e,t){Object(s.c)(e.dtype===t.dtype,()=>"The dtypes of the first(".concat(e.dtype,") and")+" second(".concat(t.dtype,") input must match"))}function c(e,t){return t.some(t=>t.id===e.id)}function u(e){const t=[];return function e(t,n,a){if(null==t)return;if(t instanceof r.a)return void n.push(t);if(s=t,!Array.isArray(s)&&"object"!==typeof s)return;var s;const o=t;for(const r in o){const t=o[r];a.has(t)||(a.add(t),e(t,n,a))}}(e,t,new Set),t}},function(e,t,n){"use strict";n.d(t,"c",(function(){return i})),n.d(t,"f",(function(){return c})),n.d(t,"i",(function(){return u})),n.d(t,"b",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"h",(function(){return h})),n.d(t,"d",(function(){return p})),n.d(t,"g",(function(){return f})),n.d(t,"a",(function(){return m}));var r=n(5),a=n(18),s=n(6),o=n(23);function i(){return r.a}function c(){return r.a.memory()}function u(e,t){return r.a.tidy(e,t)}function l(e){Object(o.getTensorsInContainer)(e).forEach(e=>e.dispose())}function d(e){return r.a.keep(e)}function h(e){return r.a.setBackend(e)}function p(){return r.a.backendName}function f(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return r.a.registerBackend(e,t,n)}function m(){return r.a.backend}Object(s.e)((function(e){Object(a.b)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(4);const o=Object(s.b)({square_:function(e){const t=Object(a.a)(e,"x","square");return r.a.runKernel("Square",{x:t},{})}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(23),o=n(2),i=n(4);const c=Object(i.b)({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=Object(o.a)(e,"a","matMul"),u=Object(o.a)(t,"b","matMul");[c,u]=Object(s.makeTypesMatch)(c,u);const l={a:c,b:u},d={transposeA:n,transposeB:i};return r.a.runKernel(a.s,l,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({slice_:function(e,t,n){const o=Object(s.a)(e,"x","slice","string_or_numeric");if(0===o.rank)throw new Error("Slicing scalar is not possible");const i={x:o},c={begin:t,size:n};return r.a.runKernel(a.Mc,i,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({neg_:function(e){const t={x:Object(s.a)(e,"x","neg")};return r.a.runKernel(a.ac,t)}})},function(e,t,n){"use strict";(function(e){n.d(t,"g",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"f",(function(){return g})),n.d(t,"a",(function(){return x})),n.d(t,"b",(function(){return w})),n.d(t,"d",(function(){return O})),n.d(t,"c",(function(){return k})),n.d(t,"k",(function(){return S})),n.d(t,"i",(function(){return I})),n.d(t,"h",(function(){return N})),n.d(t,"j",(function(){return T})),n.d(t,"l",(function(){return j}));var r=n(47),a=n(78),s=n(8),o=n(84),i=n(45),c=n(24),u=n(18);async function l(e,t){const n=[],r=[],a=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let s=0;s<a.length;++s){const o=a[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(o,"': ").concat(i.dtype));const c={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise(async e=>{const t=await i.bytes(),n=t.reduce((e,t)=>e+t.length,0)+4*t.length,r=new Uint8Array(n);let a=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,a),a+=4,r.set(e,a),a+=e.length}e(r)});r.push(e)}else r.push(i.data());null!=t&&(c.group=t),n.push(c)}return{data:b(await Promise.all(r)),specs:n}}function d(e,t){const n=new i.a(e),r={};let a=0;for(const s of t){const e=h(s,(e,t)=>n.slice(a+e,a+t));r[s.name]=f(s,n.slice(a,a+e)),a+=e}return r}function h(e,t){const n=Object(s.O)(e.shape);let r;if("quantization"in e){const t=e.quantization;r=o.a[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=4+new Uint32Array(t(e,e+4))[0];return e}r=o.a[e.dtype]}return n*r}async function p(e,t){const n=Object(s.O)(e.shape);let r;if("quantization"in e){const t=e.quantization;r=o.a[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=4+new Uint32Array(await t(e,e+4))[0];return e}r=o.a[e.dtype]}return n*r}function f(e,t){const n=e.name,i=e.dtype,c=e.shape,u=Object(s.O)(c);let l,d=0;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error("Weight ".concat(e.name," with quantization ").concat(r.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==r.dtype)throw new Error("Weight ".concat(e.name," has unknown ")+"quantization dtype ".concat(r.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==i)throw new Error("Weight ".concat(e.name," is quantized with ").concat(r.dtype," ")+"which only supports weights of type float32 not ".concat(i,"."))}const a=o.a[r.dtype],s="uint8"===r.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===i)if("uint8"===r.dtype||"uint16"===r.dtype){l=new Float32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];l[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error("Unsupported quantization type ".concat(r.dtype," ")+"for weight type float32.");l=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let o=0;o<r.length;o++){const a=r[o],i=e[n[a>>10]+(1023&a)]+t[a>>10];s[o]=i}return new Float32Array(a)}}()(s)}else{if("int32"!==i)throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i));if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error("Unsupported quantization type ".concat(r.dtype," ")+"for weight type int32.");l=new Int32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];l[e]=Math.round(t*r.scale+r.min)}}d+=u*a}else if("string"===i){const n=Object(s.O)(e.shape);l=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(d,d+4))[0];d+=4;const n=new Uint8Array(t.slice(d,d+e));l.push(n),d+=e}}else{const e=o.a[i];if("float32"===i)l=new Float32Array(t);else if("int32"===i)l=new Int32Array(t);else{if("bool"!==i){if("complex64"===i){l=new Float32Array(t);const e=new Float32Array(l.length/2),n=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],n[t]=l[2*t+1];const s=Object(a.a)(e,c,"float32"),o=Object(a.a)(n,c,"float32"),i=Object(r.a)(s,o);return s.dispose(),o.dispose(),i}throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i))}l=new Uint8Array(t)}d+=u*e}return Object(a.a)(l,c,i)}async function m(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){const{done:t,value:a}=await e.read();if(t&&null==a){const e=n-r.byteLength;throw new Error("Reader is done but ".concat(e," bytes are still expected"))}const s=new Uint8Array(r.length+a.byteLength);s.set(r,0),s.set(new Uint8Array(a),r.length),r=s}return r.buffer}async function g(e,t){const n={},r=e.getReader();let a=new ArrayBuffer(0);for(const o of t){const e=await p(o,async(e,t)=>(a=await m(r,a,t),a.slice(e,t)));a=await m(r,a,e);const t=a.slice(0,e);a=a.slice(e);const i=f(o,t);if(n[o.name]=i,"webgpu"===Object(c.d)()){const e=Object(c.a)();"uploadToGPU"in e&&Object(s.O)(i.shape)>=Object(u.b)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function b(e){if(null===e)throw new Error("Invalid input value: ".concat(JSON.stringify(e)));let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(e.constructor.name))});const r=new Uint8Array(t);let a=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength}),r.buffer}const y="undefined"!==typeof e&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function v(t){return y?e.byteLength(t,"utf8"):new Blob([t]).size}function x(t){if(y)return e.from(t).toString("base64");const n=new Uint8Array(t);let r="";for(let e=0,a=n.length;e<a;e++)r+=String.fromCharCode(n[e]);return btoa(r)}function w(t){if(y){const n=e.from(t,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(t),r=new Uint8Array(n.length);for(let e=0;e<n.length;++e)r.set([n.charCodeAt(e)],e);return r.buffer}function O(e){return i.a.join(e)}function k(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function S(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function I(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function N(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),I(e,n,r)}function T(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:v(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:v(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new i.a(e.weightData).byteLength}}function j(e){const t=[];for(const n of e)t.push(...n.weights);return t}}).call(this,n(185).Buffer)},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(64),c=n(4);const u=Object(c.b)({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;Object(o.c)(e.length>=1,()=>"Pass at least one tensor to concat");const n=Object(s.b)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(e.dtype,". "))}),1===n.length)return Object(i.a)(n[0]);const c=n,u={axis:t};return r.a.runKernel(a.D,c,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(3),s=n(2),o=n(98),i=n(15),c=n(4);const u=Object(c.b)({where_:function(e,t,n){const c=Object(s.a)(t,"a","where"),u=Object(s.a)(n,"b","where"),l=Object(s.a)(e,"condition","where","bool"),d=Object(i.assertAndGetBroadcastShape)(Object(i.assertAndGetBroadcastShape)(l.shape,c.shape),u.shape),h={condition:Object(o.a)(l,d),t:Object(o.a)(c,d),e:Object(o.a)(u,d)};return r.a.runKernel(a.Gc,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return o}));var r=n(5),a=n(6),s=(n(2),n(8));function o(e,t){s.c(s.v(e),()=>"The f passed in variableGrads(f) must be a function"),s.c(null==t||Array.isArray(t)&&t.every(e=>e instanceof a.c),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in r.a.registeredVariables)t.push(r.a.registeredVariables[e])}const o=n?t.filter(e=>!e.trainable):null,i=t.length;t=t.filter(e=>e.trainable),s.c(t.length>0,()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(i," variables is ")+"trainable.");const{value:c,grads:u}=r.a.gradients(e,t,null,!0);s.c(u.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),s.c(0===c.rank,()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(c.rank," tensor"));const l={};return t.forEach((e,t)=>{null!=u[t]&&(l[e.name]=u[t])}),null!=o&&o.forEach(e=>l[e.name]=null),{value:c,grads:l}}function i(e){return r.a.customGrad(e)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({sqrt_:function(e){const t={x:Object(s.a)(e,"x","sqrt","float32")};return r.a.runKernel(a.Wc,t)}})},function(e,t,n){"use strict";var r;n.d(t,"a",(function(){return r})),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return s})),n.d(t,"d",(function(){return o})),n.d(t,"e",(function(){return i})),n.d(t,"a",(function(){return c})),n.d(t,"f",(function(){return u})),n.d(t,"h",(function(){return l})),n.d(t,"g",(function(){return d}));var r=n(8);function a(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const r=e.length+t.length,a=[];let s=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(e[s++]):a.push(t[o++]);return a}function o(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map(t=>e[t])]}function i(e,t){return s(e,t.map(e=>1),t)}function c(e,t,n){r.c(a(t,n),()=>"".concat(e," supports only inner-most axes for now. ")+"Got axes ".concat(t," and rank-").concat(n," input."))}function u(e,t){if(a(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function l(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function d(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({exp_:function(e){const t={x:Object(s.a)(e,"x","exp")};return r.a.runKernel(a.eb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"e",(function(){return a})),n.d(t,"d",(function(){return s})),n.d(t,"c",(function(){return o})),n.d(t,"b",(function(){return i}));class r{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==r.instance&&(r.instance=new r),r.instance}static registerSaveRouter(e){r.getInstance().saveRouters.push(e)}static registerLoadRouter(e){r.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return r.getHandlers(e,"save")}static getLoadHandlers(e,t){return r.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?r.getInstance().loadRouters:r.getInstance().saveRouters).forEach(t=>{const r=t(e,n);null!==r&&a.push(r)}),a}}const a=e=>r.registerSaveRouter(e),s=e=>r.registerLoadRouter(e),o=e=>r.getSaveHandlers(e),i=(e,t)=>r.getLoadHandlers(e,t)},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(3),s=n(23),o=n(2),i=n(15),c=n(4);const u=Object(c.b)({greater_:function(e,t){let n=Object(o.a)(e,"a","greater","string_or_numeric"),c=Object(o.a)(t,"b","greater","string_or_numeric");[n,c]=Object(s.makeTypesMatch)(n,c),Object(i.assertAndGetBroadcastShape)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.sb,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({abs_:function(e){const t=Object(s.a)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.a.runKernel(a.C,e)}{const e={x:t};return r.a.runKernel(a.a,e)}}})},function(e,t,n){"use strict";n.d(t,"c",(function(){return f})),n.d(t,"b",(function(){return m})),n.d(t,"a",(function(){return g})),n.d(t,"d",(function(){return b}));var r=n(15),a=n(118),s=n(120),o=n(9),i=n(125),c=n(74),u=n(126),l=n(7),d=n(65),h=n(75),p=n(16);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Object(o.a)(e,Object(h.a)(t));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function m(e,t){let n=t;const a=r.getReductionAxes(e.shape,t.shape);return a.length>0&&(n=Object(p.a)(n,a)),Object(l.a)(n,e.shape)}function g(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Object(c.a)(e);if("elu"===t)return Object(a.a)(e);if("relu6"===t)return Object(u.a)(e);if("prelu"===t)return Object(i.a)(e,n);if("leakyrelu"===t)return Object(s.a)(e,r);if("sigmoid"===t)return Object(d.a)(e);throw new Error("Unknown fused activation ".concat(t,"."))}const b=(e,t)=>!(e>0)||"linear"===t},function(e,t,n){"use strict";n.d(t,"f",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"d",(function(){return h})),n.d(t,"g",(function(){return p})),n.d(t,"a",(function(){return f})),n.d(t,"b",(function(){return I})),n.d(t,"c",(function(){return r}));var r,a=n(0),s=n(79),o=n(68);function i(e){return e instanceof a.kd?{value:e.clone(),recurse:!1}:Object(o.e)(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class c{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class u extends c{constructor(){super(u.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function l(e){return new m(e)}function d(e){return new g(e)}function h(e,t){return new T(e,t)}function p(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:r.FAIL;return new j(e,t)}u.INITIAL_CAPACITY=32;class f{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new k(this,e)}filter(e){return new w(this,e)}map(e){return new O(this,e)}mapAsync(e){return new S(this,e)}serialMapAsync(e){return new S(this,e).serial()}flatmap(e){return new N(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e){return new x(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:o.f;return this.rowMajorBatch(e,t).map(e=>Object(o.d)(e,n))}concatenate(e,t){return new T(l([this,e]),t)}take(e){return e<0||null==e?this:new v(this,e)}skip(e){return e<0||null==e?this:new y(this,e)}prefetch(e){return new E(this,e)}shuffle(e,t){return new C(this,e,t)}serial(){return new b(this)}}class m extends f{constructor(e){super(),this.items=e,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,Object(o.b)(t,i)),done:!1};var t}}class g extends f{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: ".concat(e.message),e}}}class b extends f{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class y extends f{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;a.ce(e.value)}return this.upstream.next()}}class v extends f{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class x extends f{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class w extends f{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;a.ce(e.value)}}}class O extends f{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=a.Ef.getTensorsInContainer(e.value),n=this.transform(e.value),r=a.Ef.getTensorsInContainer(n);for(const s of t)a.Ef.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class k extends f{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class S extends f{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=a.Ef.getTensorsInContainer(e.value),n=await this.transform(e.value),r=a.Ef.getTensorsInContainer(n);for(const s of t)a.Ef.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class I extends f{constructor(){super(),this.outputQueue=new u,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class N extends I{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=a.Ef.getTensorsInContainer(e.value),n=this.transform(e.value),r=a.Ef.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const s of t)a.Ef.isTensorInList(s,r)||s.dispose();return!0}}class T extends f{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(r||(r={}));class j extends f{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:r.FAIL;super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{".concat("TODO: fill in upstream of zip summaries","} -> Zip")}async nextState(e){await e;let t=0,n=0;const a=await Object(o.c)(this.iterators,(function(e){if(e instanceof f){return{value:e.next().then(e=>(t++,e.done&&n++,e.value)),recurse:!1}}return{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case r.FAIL:throw new Error("Zipped streams should have the same length. "+"Mismatched at element ".concat(this.count,"."));case r.SHORTEST:return{value:null,done:!0};case r.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class E extends f{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new c(t)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class C extends E{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=s.alea(n||a.Mf.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(6),a=n(8);function s(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",a.d(e),new r.b(e,t,n)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({reverse_:function(e,t){const n={x:Object(s.a)(e,"x","reverse")},o={dims:t};return r.a.runKernel(a.Ac,n,o)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var r=n(5),a=n(24),s=n(3),o=n(2),i=n(8),c=n(47),u=n(94),l=n(28),d=n(4),h=n(83);const p=Object(d.b)({transpose_:function(e,t,n){const d=Object(o.a)(e,"x","transpose");if(null==t&&(t=d.shape.map((e,t)=>t).reverse()),i.c(d.rank===t.length,()=>"Error in transpose: rank of input ".concat(d.rank," ")+"must match length of perm ".concat(t,".")),t.forEach(e=>{i.c(e>=0&&e<d.rank,()=>"All entries in 'perm' must be between 0 and ".concat(d.rank-1)+" but got ".concat(t))}),d.rank<=1)return d.clone();const p={x:d},f={perm:t};return"complex64"===d.dtype?Object(a.i)(()=>{let e=Object(h.a)(d),t=Object(u.a)(d);return e=r.a.runKernel(s.nd,{x:e},f),t=r.a.runKernel(s.nd,{x:t},f),n&&(t=Object(l.a)(t)),Object(c.a)(e,t)}):r.a.runKernel(s.nd,p,f)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(10);class a{static join(e){return new a(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map(e=>r.isTypedArray(e)?e.buffer:e)).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const a=t+r.byteLength;this.shards.push({buffer:r,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error("Could not find start shard for byte ".concat(e));const r=new ArrayBuffer(t-e),a=new Uint8Array(r);let s=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],r=e+s-n.start,i=s,c=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,r,c-r);if(a.set(u,i),s+=u.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const a=Math.floor((r-n)/2)+n,s=t(e[a]);if(0===s)return a;s<0?r=a:n=a+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(52),s=n(8),o=n(10);function i(e,t,n,i){if(null==i)i=Object(s.s)(e);else if("complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Object(a.b)(e)||Object(a.a)(e)){if("float32"!==i&&"int32"!==i)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(i,"."));return r.a.backend.createTensorFromGPUData(e,t||n,i)}if(!Object(o.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Object(s.d)(t);const e=Object(s.O)(t),r=Object(s.O)(n);Object(s.c)(e===r,()=>"Based on the provided shape, [".concat(t,"], the tensor should have ")+"".concat(e," values but has ").concat(r));for(let a=0;a<n.length;++a){const e=n[a],r=a!==n.length-1||e!==Object(s.O)(t.slice(a));Object(s.c)(n[a]===t[a]||!r,()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(t,"). "))}}return Object(o.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?Object(o.toTypedArray)(e,i):Object(o.flatten)(e,[],!0),r.a.makeTensor(e,t,i)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(4);const c=Object(i.b)({complex_:function(e,t){const n=Object(s.a)(e,"real","complex"),i=Object(s.a)(t,"imag","complex");o.f(n.shape,i.shape,"real and imag shapes, ".concat(n.shape," and ").concat(i.shape,", ")+"must match in call to tf.complex().");const c={real:n,imag:i};return r.a.runKernel(a.B,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(23),o=n(2),i=n(4);const c=Object(i.b)({pow_:function(e,t){let n=Object(o.a)(e,"base","pow"),i=Object(o.a)(t,"exp","pow");[n,i]=Object(s.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.jc,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(4);const c=Object(i.b)({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(s.b)(e,"tensors","stack","string_or_numeric");o.c(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&o.c(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const i=n,c={axis:t};return r.a.runKernel(a.hc,i,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(8),s=n(47),o=n(73);function i(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(Object(a.d)(e),"complex64"===t){const t=i(e,"float32"),n=Object(o.a)(e,"float32");return Object(s.a)(t,n)}const n=Object(a.D)(Object(a.O)(e),t);return r.a.makeTensor(n,e,t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(4);const c=Object(i.b)({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(s.a)(e,"x","expandDims","string_or_numeric");o.c(t<=n.rank,()=>"Axis must be <= rank of the tensor");const i={input:n},c={dim:t};return r.a.runKernel(a.fb,i,c)}})},function(e,t,n){"use strict";var r,a,s,o,i;n.d(t,"d",(function(){return u})),n.d(t,"c",(function(){return l})),n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return h})),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const c={float32:o,int32:a,bool:s,complex64:i};function u(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast ".concat(e," with ").concat(t))}return c[e][t]}function l(e){return u(e,"int32")}function d(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function h(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(24),a=n(32),s=n(17),o=n(108);class i extends o.Serializable{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:s[e.name]}));this.applyGradients(e)}else this.applyGradients(s);return Object(r.b)(s),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Object(a.b)(e,t)}dispose(){null!=this.iterations_&&Object(r.b)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(s.a)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(i,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(3),s=n(23),o=n(2),i=n(15),c=n(4);const u=Object(c.b)({lessEqual_:function(e,t){let n=Object(o.a)(e,"a","lessEqual","string_or_numeric"),c=Object(o.a)(t,"b","lessEqual","string_or_numeric");[n,c]=Object(s.makeTypesMatch)(n,c),Object(i.assertAndGetBroadcastShape)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.Eb,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const o=Object(s.a)(e,"x","pad");if(0===o.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},c={x:o};return r.a.runKernel(a.ic,c,i)}})},function(e,t,n){"use strict";n.d(t,"b",(function(){return c})),n.d(t,"a",(function(){return u})),n.d(t,"c",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"d",(function(){return h}));var r=n(18),a=n(103),s=n(70);const o=Object(a.a)("kernelRegistry",()=>new Map),i=Object(a.a)("gradRegistry",()=>new Map);function c(e,t){const n=p(e,t);return o.get(n)}function u(e){return i.get(e)}function l(e){const t=o.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,o]=a,[i]=s.split("_");i===e&&n.push(o)}return n}function d(e){const{kernelName:t,backendName:n}=e,r=p(t,n);o.has(r)&&s.b("The kernel '".concat(t,"' for backend ")+"'".concat(n,"' is already registered")),o.set(r,e)}function h(e){const{kernelName:t}=e;i.has(t)&&Object(r.b)().getBool("DEBUG")&&s.b("Overriding the gradient for '".concat(t,"'")),i.set(t,e)}function p(e,t){return"".concat(t,"_").concat(e)}},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return N})),n.d(t,"i",(function(){return j})),n.d(t,"c",(function(){return E})),n.d(t,"f",(function(){return C})),n.d(t,"e",(function(){return F})),n.d(t,"d",(function(){return _})),n.d(t,"k",(function(){return D})),n.d(t,"g",(function(){return L})),n.d(t,"h",(function(){return z})),n.d(t,"j",(function(){return P})),n.d(t,"b",(function(){return B}));var r=n(0),a=n(60),s=n(99),o=n(1),i=n(212),c=n(213),u=n(214),l=n(215),d=n(216),h=n(217),p=n(218),f=n(219),m=n(220),g=n(221),b=n(222),y=n(223),v=n(224),x=n(225),w=n(226),O=n(227),k=n(228),S=n(229),I=n(230);class N{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[i,c,u,l,d,h,p,f,m,g,b,y,v,x,w,O,k,S,I].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,r=[],a=[],s=[],i=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e),{});let c=[];const u=[];let l={},d={};null!=t&&(l=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach(e=>{const t=i[e];t.inputNames.forEach((e,n)=>{const[r,,a]=Object(o.b)(e),s=i[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a="".concat(r,":").concat(e);t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)})}),0===Object.keys(d).length?h.forEach(e=>{const t=i[e];0===t.children.length&&u.push(t)}):Object.keys(d).forEach(e=>{const[t]=Object(o.b)(e),n=i[t];null!=n&&(n.signatureKey=d[e],u.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(e=>{const[t]=Object(o.b)(e),n=i[t];n&&(n.signatureKey=l[e],c.push(n))}):c=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));const f={nodes:i,inputs:c,outputs:u,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(f.initNodes=s),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){const t=Object(s.a)(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.slice(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=j(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=j(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=z(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=z(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=C(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=C(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=L(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=L(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=E(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=E(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=B(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=B(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=D(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=D(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=P(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=P(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=F(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=F(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=_(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=R(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=R(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(e.op))}return t[n.name]={value:a,type:r},t},{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e),{}));const a=[],s=[];e.signature.inputArg.forEach(e=>{const[t]=Object(o.b)(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:A(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n});Object.keys(r).forEach(e=>{const t=r[e];t.inputNames.forEach((e,n)=>{const[a,,s]=Object(o.b)(e),i=r[a];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const r="".concat(a,":").concat(e);t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)})});const i=e.ret;e.signature.outputArg.forEach(e=>{const[t,n]=Object(o.b)(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))});const c=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function T(t,n){const a=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const n=Object(r.he)().global;if("undefined"!==typeof n.atob)return n.atob(t);if("undefined"!==typeof e)return new e(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return n?a:a.toLowerCase()}function j(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=e[t];return null!=a?T(a.s,r):n}function E(e,t,n){const r=e[t];return r?r.b:n}function C(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"===typeof a?a:parseInt(a,10)}function A(e){switch("string"===typeof e&&(e=a.a[e]),e){case a.a.DT_FLOAT:case a.a.DT_HALF:return"float32";case a.a.DT_INT32:case a.a.DT_INT64:case a.a.DT_INT8:case a.a.DT_UINT8:return"int32";case a.a.DT_BOOL:return"bool";case a.a.DT_DOUBLE:return"float32";case a.a.DT_STRING:return"string";case a.a.DT_COMPLEX64:case a.a.DT_COMPLEX128:return"complex64";default:return null}}function R(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function F(e,t,n){const r=e[t];return r&&r.type?A(r.type):n}function _(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>A(e)):n}function M(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"===typeof e.size?e.size:parseInt(e.size,10)):[]}function D(e,t,n){const r=e[t];return r&&r.shape?M(r.shape):n}function L(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"===typeof e?e:parseInt(e,10)):n}function z(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>T(e,r)):n}function P(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>M(e)):n}function B(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}}).call(this,n(185).Buffer)},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(2),o=n(15),i=n(4);const c=Object(i.b)({logicalAnd_:function(e,t){const n=Object(s.a)(e,"a","logicalAnd","bool"),i=Object(s.a)(t,"b","logicalAnd","bool");Object(o.assertAndGetBroadcastShape)(n.shape,i.shape);const c={a:n,b:i};return r.a.runKernel(a.Jb,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const o=Object(s.a)(e,"x","split"),i={x:o},c={numOrSizeSplits:t,axis:n};return r.a.runKernel(a.Vc,i,c)}})},function(e,t,n){"use strict";var r,a;n.d(t,"a",(function(){return r})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(r||(r={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(a||(a={}))},function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(20),c=n(4),u=n(7);const l=Object(c.b)({conv2d_:function(e,t,n,c){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6?arguments[6]:void 0;const p=Object(s.a)(e,"x","conv2d","float32"),f=Object(s.a)(t,"filter","conv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=Object(u.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.c(4===m.rank,()=>"Error in conv2d: input must be rank 4, but got rank ".concat(m.rank,".")),o.c(4===f.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(f.rank,".")),i.a("conv2d",c,h);const b="NHWC"===l?m.shape[3]:m.shape[1];o.c(b===f.shape[2],()=>"Error in conv2d: depth of input (".concat(b,") must match ")+"input depth for filter ".concat(f.shape[2],".")),o.c(i.i(n,d),()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(d,"'")),o.c(i.j(d),()=>"Error in conv2D: Dilated rates should be larger than 0."),o.c(i.j(n),()=>"Error in conv2D: Strides should be larger than 0.");const y={x:m,filter:f},v={strides:n,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h},x=r.a.runKernel(a.E,y,v);return g?Object(u.a)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(3),s=n(23),o=n(2),i=n(15),c=n(4);const u=Object(c.b)({greaterEqual_:function(e,t){let n=Object(o.a)(e,"a","greaterEqual","string_or_numeric"),c=Object(o.a)(t,"b","greaterEqual","string_or_numeric");[n,c]=Object(s.makeTypesMatch)(n,c),Object(i.assertAndGetBroadcastShape)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.tb,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({clone_:function(e){const t={x:Object(s.a)(e,"x","clone","string_or_numeric")};return r.a.runKernel(a.vb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({sigmoid_:function(e){const t={x:Object(s.a)(e,"x","sigmoid","float32")};return r.a.runKernel(a.Ic,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o=Object(s.a)(e,"x","max"),i={x:o},c={reductionIndices:t,keepDims:n};return r.a.runKernel(a.Mb,i,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(4);const c=Object(i.b)({tile_:function(e,t){const n=Object(s.a)(e,"x","tile","string_or_numeric");o.c(n.rank===t.length,()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(t,"."));const i={x:n},c={reps:t};return r.a.runKernel(a.kd,i,c)}})},function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"d",(function(){return o})),n.d(t,"f",(function(){return c})),n.d(t,"c",(function(){return u})),n.d(t,"e",(function(){return l})),n.d(t,"a",(function(){return d}));var r=n(0);function a(e,t){return s(e,t)}function s(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(l(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const o in e){const i=s(e[o],t,n,r);a[o]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error("Can't recurse into non-iterable type: ".concat(e))}return n.set(e,a.value),a.value}function o(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:c;return i(e,t)}function i(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(l(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=i(e.map(e=>e[s]),t,n);a[s]=r}return n.delete(r),a}throw new Error("Can't recurse into non-iterable type: ".concat(r))}return a.value}function c(e){return null===e?null:l(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function u(e,t){const n=new Map;s(e,t,n);for(const a of Array.from(n.keys())){const e=n.get(a);if(r.Mf.isPromise(e)){const t=await e;n.set(a,t)}}return s(e,t,n)}function l(e){let t=!1;if(r.he().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(256);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof r.kd)&&!(e instanceof Promise)&&!t)}function d(e){return null==e||(null===(t=e)||"object"!==typeof t&&"function"!==typeof t)||Array.isArray(e)||"object"===typeof e&&e instanceof r.kd||r.Mf.isTypedArray(e);var t}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({log_:function(e){const t={x:Object(s.a)(e,"x","log","float32")};return r.a.runKernel(a.Gb,t)}})},function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return s}));var r=n(18);function a(){Object(r.b)().getBool("IS_TEST")||Object(r.b)().getBool("PROD")||console.warn(...arguments)}function s(){Object(r.b)().getBool("IS_TEST")||Object(r.b)().getBool("PROD")||console.log(...arguments)}},function(e,t,n){"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,o=!1;for(;r<a;){s=r+(a-r>>>1);const i=n(t,e[s]);i>0?r=s+1:(a=s,o=!i)}return o?r:-r-1}(e,t,n||a)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function a(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,r,a){return c(e,t,n,r,a,0)}function o(e,t,n,r,a,s){return c(e,t,n,r,a,0,!1,s,!0)}function i(e,t,n,r,a,s){return c(e,t,n,r,a,s,!0)}function c(e,t,n,a,s,o){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7],h=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const p=[];for(let r=0;r<t.length;r++)t[r]>s&&p.push({score:t[r],boxIndex:r,suppressBeginIndex:0});p.sort(d);const f=o>0?-.5/o:0,m=[],g=[];for(;m.length<n&&p.length>0;){const t=p.pop(),{score:n,boxIndex:o,suppressBeginIndex:i}=t;if(n<s)break;let c=!1;for(let r=m.length-1;r>=i;--r){const n=u(e,o,m[r]);if(n>=a){c=!0;break}if(t.score=t.score*l(a,f,n),t.score<=s)break}t.suppressBeginIndex=m.length,c||(t.score===n?(m.push(o),g.push(t.score)):t.score>s&&r(p,t,d))}const b=m.length,y=n-b;c&&y>0&&(m.push(...new Array(y).fill(0)),g.push(...new Array(y).fill(0)));const v={selectedIndices:m};return i&&(v.selectedScores=g),h&&(v.validOutputs=b),v}function u(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),c=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(i-s)*(c-o),f=(d-u)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(s,u),g=Math.max(o,l),b=Math.min(i,d),y=Math.min(c,h),v=Math.max(b-m,0)*Math.max(y-g,0);return v/(p+f-v)}function l(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function d(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return i}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(3),s=n(8);function o(e,t,n){Object(s.d)(e);const o={shape:e,value:t,dtype:n=n||Object(s.s)(t)};return r.a.runKernel(a.ib,{},o)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(8),s=n(47);function o(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(Object(a.d)(e),"complex64"===t){const t=o(e,"float32"),n=o(e,"float32");return Object(s.a)(t,n)}const n=Object(a.F)(Object(a.O)(e),t);return r.a.makeTensor(n,e,t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({relu_:function(e){const t={x:Object(s.a)(e,"x","relu")};return r.a.runKernel(a.tc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(s.a)(e,"x","step"),o={x:n},i={alpha:t};return r.a.runKernel(a.ad,o,i)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(4);const c=Object(i.b)({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(s.a)(e,"x","unstack","string_or_numeric");o.c(t>=-n.shape.length&&t<n.shape.length,()=>"Axis = ".concat(t," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")"));const i={value:n},c={axis:t};return r.a.runKernel(a.pd,i,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(7);var c=n(4);const u=Object(c.b)({batchNorm_:function(e,t,n,c,u,l){null==l&&(l=.001);const d=Object(s.a)(e,"x","batchNorm"),h=Object(s.a)(t,"mean","batchNorm"),p=Object(s.a)(n,"variance","batchNorm");let f,m;null!=u&&(f=Object(s.a)(u,"scale","batchNorm")),null!=c&&(m=Object(s.a)(c,"offset","batchNorm")),o.c(h.rank===p.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),o.c(null==m||h.rank===m.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),o.c(null==f||h.rank===f.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const g={x:function(e){let t;return t=0===e.rank||1===e.rank?Object(i.a)(e,[1,1,1,e.size]):2===e.rank?Object(i.a)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),scale:f,offset:m,mean:h,variance:p},b={varianceEpsilon:l},y=r.a.runKernel(a.nb,g,b);return Object(i.a)(y,d.shape)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(2),a=n(46);function s(e,t,n){const s=Object(r.c)(e,n);return Object(a.a)(e,t,s,n)}},function(e,t,n){var r=n(248),a=n(249),s=n(250),o=n(251),i=n(252),c=n(253),u=n(254);u.alea=r,u.xor128=a,u.xorwow=s,u.xorshift7=o,u.xor4096=i,u.tychei=c,e.exports=u},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(3),s=n(23),o=n(2),i=n(15),c=n(4);const u=Object(c.b)({less_:function(e,t){let n=Object(o.a)(e,"a","less","string_or_numeric"),c=Object(o.a)(t,"b","less","string_or_numeric");[n,c]=Object(s.makeTypesMatch)(n,c),Object(i.assertAndGetBroadcastShape)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.Db,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o=Object(s.a)(e,"x","mean"),i={x:o},c={axis:t,keepDims:n};return r.a.runKernel(a.Tb,i,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(5),a=n(3),s=n(23),o=n(2),i=n(15),c=n(11),u=n(4);const l=Object(u.b)({minimum_:function(e,t){let n=Object(o.a)(e,"a","minimum"),u=Object(o.a)(t,"b","minimum");[n,u]=Object(s.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=Object(c.a)(n,"int32"),u=Object(c.a)(u,"int32")),Object(i.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.a.runKernel(a.Vb,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({real_:function(e){const t={input:Object(s.a)(e,"input","real")};return r.a.runKernel(a.qc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"d",(function(){return d})),n.d(t,"b",(function(){return l})),n.d(t,"e",(function(){return u})),n.d(t,"c",(function(){return c}));var r=n(8),a=n(37);class s{constructor(){this.managers={}}static getInstance(){return null==s.instance&&(s.instance=new s),s.instance}static registerManager(e,t){Object(r.c)(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),Object(r.c)(e.length>0,()=>"scheme must not be an empty string.");const n=s.getInstance();Object(r.c)(null==n.managers[e],()=>"A model store manager is already registered for scheme '".concat(e,"'.")),n.managers[e]=t}static getManager(e){const t=s.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '".concat(e,"'"));return t}static getSchemes(){return Object.keys(s.getInstance().managers)}}function o(e){if(-1===e.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(s.getSchemes().join(",")));return{scheme:e.split("://")[0],path:e.split("://")[1]}}async function i(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];Object(r.c)(e!==t,()=>"Old path and new path are the same: '".concat(e,"'"));const i=a.a.getLoadHandlers(e);Object(r.c)(i.length>0,()=>"Copying failed because no load handler is found for source URL ".concat(e,".")),Object(r.c)(i.length<2,()=>"Copying failed because more than one (".concat(i.length,") ")+"load handlers for source URL ".concat(e,"."));const c=i[0],u=a.a.getSaveHandlers(t);Object(r.c)(u.length>0,()=>"Copying failed because no save handler is found for destination "+"URL ".concat(t,".")),Object(r.c)(u.length<2,()=>"Copying failed because more than one (".concat(i.length,") ")+"save handlers for destination URL ".concat(t,"."));const l=u[0],d=o(e).scheme,h=o(e).path,p=d===o(e).scheme,f=await c.load();n&&p&&await s.getManager(d).removeModel(h);const m=await l.save(f);return n&&!p&&await s.getManager(d).removeModel(h),m.modelArtifactsInfo}async function c(){const e=s.getSchemes(),t={};for(const n of e){const e=await s.getManager(n).listModels();for(const r in e){t[n+"://"+r]=e[r]}}return t}async function u(e){const t=o(e);return s.getManager(t.scheme).removeModel(t.path)}async function l(e,t){return i(e,t,!1)}async function d(e,t){return i(e,t,!0)}},function(e,t,n){"use strict";n.d(t,"c",(function(){return a})),n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return o}));var r=n(8);function a(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(t.shape,", shape: ").concat(e)+", sliceDim: ".concat(r,", and batchDim: ").concat(a,".");if(n.rank<a)throw new Error(s+" update.rank < ".concat(a,". "));if(e.length<r+(n.rank-a))throw new Error(s+" Output shape length < ".concat(r+(n.rank-a)));if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != ".concat(a+e.length-r));for(let o=0;o<a;++o)if(n.shape[o]!==t.shape[o])throw new Error(s+" updates.shape[".concat(o,"] (").concat(n.shape[o],") != indices.shape[").concat(o,"] (").concat(t.shape[o],")."));for(let o=0;o<n.rank-a;++o)if(n.shape[o+a]!==e[o+r])throw new Error(s+" updates.shape[".concat(o+a,"] (").concat(n.shape[o+a],") != shape[").concat(o+a,"] (").concat(e[o+a],")"))}function s(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(t.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: ".concat(t.shape));if(0===e.size)throw new Error("Updates specified for empty output. updates shape: ".concat(e.shape))}a(n,t,e)}function o(e,t,n){const a=t.shape.length,s=a>1?t.shape[a-1]:1,o=n.length;let i=1;for(let r=s;r<o;++r)i*=n[r];const c=s<1?1:s;return{sliceRank:s,numUpdates:Object(r.O)(t.shape)/c,sliceSize:i,strides:[...Object(r.k)(n.slice(0,s)),1],outputSize:Object(r.O)(n)}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(5),a=n(3),s=n(23),o=n(2),i=n(15),c=n(11),u=n(4);const l=Object(u.b)({maximum_:function(e,t){let n=Object(o.a)(e,"a","maximum"),u=Object(o.a)(t,"b","maximum");[n,u]=Object(s.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=Object(c.a)(n,"int32"),u=Object(c.a)(u,"int32")),Object(i.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.a.runKernel(a.Sb,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(24),s=n(12),o=n(9),i=n(17),c=n(53);class u extends c.a{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const c=r.a.registeredVariables[t];Object(a.i)(()=>{const e=Object(s.a)(Object(o.a)(this.c,i),c);c.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Object(a.e)(Object(i.a)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(4);const c=Object(i.b)({batchToSpaceND_:function(e,t,n){const i=Object(s.a)(e,"x","batchToSpaceND"),c=t.reduce((e,t)=>e*t);o.c(i.rank>=1+t.length,()=>"input rank is ".concat(i.rank," but should be > than blockShape.length ").concat(t.length)),o.c(n.length===t.length,()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(t.length)),o.c(i.shape[0]%c===0,()=>"input tensor batch is ".concat(i.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(t.join(" * ")," === ").concat(c));const u={x:i},l={blockShape:t,crops:n};return r.a.runKernel(a.t,u,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(20),c=n(4),u=n(7);const l=Object(c.b)({depthwiseConv2d_:function(e,t,n,c){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6?arguments[6]:void 0;const p=Object(s.a)(e,"x","depthwiseConv2d","float32"),f=Object(s.a)(t,"filter","depthwiseConv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=Object(u.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.c(4===m.rank,()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,".")),o.c(4===f.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(f.rank,"."));const b="NHWC"===l?m.shape[3]:m.shape[1];o.c(b===f.shape[2],()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(b,") must match the inChannels dimension in ")+"filter ".concat(f.shape[2],".")),i.a("depthwiseConv2d",c,h);const y={x:m,filter:f},v={strides:n,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h},x=r.a.runKernel(a.R,y,v);return g?Object(u.a)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(3),s=n(23),o=n(2),i=n(15),c=n(4);const u=Object(c.b)({equal_:function(e,t){let n=Object(o.a)(e,"a","equal","string_or_numeric"),c=Object(o.a)(t,"b","equal","string_or_numeric");[n,c]=Object(s.makeTypesMatch)(n,c),Object(i.assertAndGetBroadcastShape)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.cb,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return b}));var r=n(2),a=n(8),s=n(39),o=n(35),i=n(66),c=n(101),u=n(4),l=n(48),d=n(7),h=n(17),p=n(33),f=n(25),m=n(16);function g(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return Object(s.a)(e);if(1!==e.rank&&null===n)return g(Object(d.a)(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Object(m.a)(Object(s.a)(e),n);if(t===1/0)return Object(i.a)(Object(s.a)(e),n);if(t===-1/0)return Object(c.a)(Object(s.a)(e),n);if("euclidean"===t||2===t)return Object(p.a)(Object(m.a)(Object(l.a)(Object(s.a)(e),Object(h.a)(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}if(Array.isArray(n)&&2===n.length){if(1===t)return Object(i.a)(Object(m.a)(Object(s.a)(e),n[0]),n[1]-1);if(t===1/0)return Object(i.a)(Object(m.a)(Object(s.a)(e),n[1]),n[0]);if(t===-1/0)return Object(c.a)(Object(m.a)(Object(s.a)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Object(p.a)(Object(m.a)(Object(f.a)(e),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}throw new Error("Error in norm: invalid axis: ".concat(n))}const b=Object(u.b)({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=g(e=Object(r.a)(e,"x","norm"),t,n);let c=i.shape;if(s){const t=Object(a.I)(n,e.shape);c=o.e(i.shape,t)}return Object(d.a)(i,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const i=Object(s.a)(e,"x","gather"),c=Object(s.a)(t,"indices","gather","int32"),u={x:i,indices:c},l={axis:n,batchDims:o};return r.a.runKernel(a.rb,u,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({imag_:function(e){const t={input:Object(s.a)(e,"input","imag")};return r.a.runKernel(a.wb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({logicalNot_:function(e){const t={x:Object(s.a)(e,"x","logicalNot","bool")};return r.a.runKernel(a.Kb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(4);const c=Object(i.b)({spaceToBatchND_:function(e,t,n){const i=Object(s.a)(e,"x","spaceToBatchND");o.c(i.rank>=1+t.length,()=>"input rank ".concat(i.rank," should be > than [blockShape] ").concat(t.length)),o.c(n.length===t.length,()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(t.length)),o.c(i.shape.reduce((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]===0:e,!0),()=>"input spatial dimensions ".concat(i.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(t.toString()));const c={x:i},u={blockShape:t,paddings:n};return r.a.runKernel(a.Pc,c,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(2),a=n(8),s=n(4),o=n(7);const i=Object(s.b)({squeeze_:function(e,t){const n=Object(r.a)(e,"x","squeeze","string_or_numeric");return Object(o.a)(n,Object(a.Q)(n.shape,t).newShape)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(64),c=n(4),u=n(7);const l=Object(c.b)({broadcastTo_:function(e,t){let n=Object(s.a)(e,"broadcastTo","x");const c=n.shape;if(Object(o.d)(t),t.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(t.length," < input.rank=").concat(n.rank,"."));if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Object(u.a)(n,e)}const l=n.shape,d=Array.from(t);for(let r=t.length-1;r>=0;r--)if(l[r]===t[r])d[r]=1;else if(1!==n.shape[r])throw new Error("broadcastTo(): [".concat(c,"] cannot be broadcast to [").concat(t,"]."));if(0===d.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return Object(i.a)(n);const h={x:n},p={reps:d};return r.a.runKernel(a.kd,h,p)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));const r={};function a(e){return r[e]}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=Object(s.a)(e,"x","cumprod"),c={x:i},u={axis:t,exclusive:n,reverse:o};return r.a.runKernel(a.N,c,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o=Object(s.a)(e,"x","min"),i={x:o},c={axis:t,keepDims:n};return r.a.runKernel(a.Ub,i,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(8),o=n(4);const i=Object(o.b)({ifft_:function(e){Object(s.c)("complex64"===e.dtype,()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(e.dtype,"."));const t={input:e};return r.a.runKernel(a.ub,t)}})},function(e,t,n){"use strict";(function(e,r){let a;function s(){if(null==a){let t;if("undefined"!==typeof window)t=window;else if("undefined"!==typeof e)t=e;else if("undefined"!==typeof r)t=r;else{if("undefined"===typeof self)throw new Error("Could not find a global object");t=self}a=t}return a}function o(e,t){const n=function(){const e=s();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return o}))}).call(this,n(140),n(141))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t){(function(t){e.exports=t}).call(this,{})},function(e,t,n){"use strict";n.r(t),n.d(t,"assertParamsValid",(function(){return a})),n.d(t,"maskToAxes",(function(){return s})),n.d(t,"computeOutShape",(function(){return o})),n.d(t,"stridesWithElidedDims",(function(){return i})),n.d(t,"getNormalizedAxes",(function(){return l})),n.d(t,"startIndicesWithElidedDims",(function(){return d})),n.d(t,"stopIndicesWithElidedDims",(function(){return h})),n.d(t,"stridesForAxis",(function(){return p})),n.d(t,"startForAxis",(function(){return f})),n.d(t,"stopForAxis",(function(){return m})),n.d(t,"isSliceContinous",(function(){return g})),n.d(t,"computeFlatOffset",(function(){return b})),n.d(t,"parseSliceParams",(function(){return y})),n.d(t,"sliceInfo",(function(){return v}));var r=n(8);function a(e,t,n){const a=e.shape.length;r.c(a===t.length,()=>"Error in slice".concat(a,"D: Length of begin ").concat(t," must ")+"match the rank of the array (".concat(a,").")),r.c(a===n.length,()=>"Error in slice".concat(a,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(a,")."));for(let s=0;s<a;++s)r.c(t[s]+n[s]<=e.shape[s],()=>"Error in slice".concat(a,"D: begin[").concat(s,"] + size[").concat(s,"] ")+"(".concat(t[s]+n[s],") would overflow input.shape[").concat(s,"] (").concat(e.shape[s],")"))}function s(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function o(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function i(e,t,n,r){const a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)0===s?a[t]=1:(a.splice(t,0,1),a.pop());return a}function c(e,t,n){return n<=e?n:n-(t-1)}function u(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function l(e,t,n,r,a,s,o,c,u){const l=e.length;let g=new Array(l),b=new Array(l),y=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;g=d(o,u,l,r,e),b=h(c,u,l,a,e),y=i(s,u,l,e)}else for(let i=0;i<l;i++)g[i]=f(o,r,s,e,i,u),b[i]=m(c,a,s,e,i,u),y[i]=p(s,i,u);return{begin:g,end:b,strides:y}}function d(e,t,n,r,a){const s=[...a],o=u(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=0;else{const a=c(t,n,i);let o=r[a];e&1<<a&&(o=0),s[i]=o}return s}function h(e,t,n,a,s){const o=[...s],i=u(n,t);for(let r=0;r<o.length;r++)if(i.indexOf(r)>-1)o[r]=Number.MAX_SAFE_INTEGER;else{const s=c(t,n,r);let i=a[s];e&1<<s&&(i=Number.MAX_SAFE_INTEGER),o[r]=i}for(let c=0;c<o.length;c++){const e=s[c];o[c]<0&&(o[c]+=e),o[c]=r.j(0,o[c],s[c])}return o}function p(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function f(e,t,n,a,s,o){let i=t[s];const c=n[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=c>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=a[s];return i<0&&(i+=u),i=r.j(0,i,u-1),i}function m(e,t,n,a,s,o){let i=t[s];const c=n[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=c>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=a[s];return i<0&&(i+=u),i=c>0?r.j(0,i,u):r.j(-1,i,u-1),i}function g(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function b(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function y(e,t,n){let a;const s=e.shape.length;let o;return a="number"===typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),a.forEach(e=>{r.c(-1!==e,()=>"slice() does not support negative begin indexing.")}),o=null==n?new Array(s).fill(-1):"number"===typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,o=o.map((t,n)=>t>=0?t:(r.c(-1===t,()=>"Negative size values should be exactly -1 but got "+"".concat(t," for the slice() size at index ").concat(n,".")),e.shape[n]-a[n])),[a,o]}function v(e,t,n,r,a,s,o,i,c){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=o&&0!==(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const d={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:c};for(let y=0;y<d.dims;y++)l&&0!==(1<<y&i)&&d.numAddAxisAfterEllipsis++,1<<y&o&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(t.dims," dims, ").concat(t.begin.length,"."));null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(d,h);let p=!0,f=!0,m=!0;const g=[],b=[];for(let y=0;y<e.length;++y){if(0===h.strides[y])throw Error("strides[".concat(y,"] must be non-zero"));const t=!!(h.shrinkAxisMask&1<<y),n=e[y];if(-1===n){g.push(t?1:-1);continue}const r=[h.beginMask&1<<y,h.endMask&1<<y],a=[h.strides[y]>0?0:-1,h.strides[y]>0?n:n-1];if(t&&h.strides[y]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===h.strides[y];const s=!!(h.beginMask&1<<y&&h.endMask&1<<y);if(h.beginValid&&h.endValid){if(t){const e=h.begin[y]<0?n+h.begin[y]:h.begin[y];if(h.begin[y]=e,h.end[y]=h.begin[y]+1,e<0||e>=n)throw Error("slice index ".concat(h.begin[y]," of dimension ").concat(y," out of bounds."))}else h.begin[y]=x(h.begin[y],0,h.strides[y],n,r,a),h.end[y]=x(h.end[y],1,h.strides[y],n,r,a);const e=1===h.strides[y]&&0===h.begin[y]&&h.end[y]===n;p=p&&e,f=f&&(0===y&&1===h.strides[y]||e)}else p=p&&1===h.strides[y]&&s,f=f&&(0===y&&1===h.strides[y]||s);let o,i=!1;if(h.beginValid&&h.endValid?(o=h.end[y]-h.begin[y],i=!0):t?(o=1,i=!0):s&&n>=0&&(o=h.strides[y]<0?-n:n,i=!0),i){let e;e=0===o||o<0!==h.strides[y]<0?0:Math.trunc(o/h.strides[y])+(o%h.strides[y]!==0?1:0),g.push(e)}else g.push(-1)}for(let y=0;y<h.finalShapeGatherIndices.length;++y){const e=h.finalShapeGatherIndices[y];e>=0?b.push(g[e]):-2===e&&b.push(1)}return{finalShapeSparse:b.filter((e,t)=>-2!==h.finalShapeGatherIndices[t]),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function x(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(5),a=n(24),s=n(12),o=n(14),i=n(9),c=n(33),u=n(25),l=n(19),d=n(53);class h extends d.a{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=r.a.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const d=r.a.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(t,"/accum_grad"),variable:Object(a.i)(()=>Object(l.a)(d).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(t,"/accum_var"),variable:Object(a.i)(()=>Object(l.a)(d).variable(!1))});const h=Array.isArray(e)?e[n].tensor:e[t];if(null==h)return;const p=this.accumulatedGrads[n].variable,f=this.accumulatedUpdates[n].variable;Object(a.i)(()=>{const e=Object(s.a)(Object(i.a)(p,this.rho),Object(i.a)(Object(u.a)(h),1-this.rho)),t=Object(i.a)(Object(o.a)(Object(c.a)(Object(s.a)(f,this.epsilon)),Object(c.a)(Object(s.a)(p,this.epsilon))),h),n=Object(s.a)(Object(i.a)(f,this.rho),Object(i.a)(Object(u.a)(t),1-this.rho));p.assign(e),f.assign(n);const r=Object(s.a)(Object(i.a)(t,-this.learningRate),d);d.assign(r)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(a.b)(this.accumulatedGrads.map(e=>e.variable)),Object(a.b)(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}},function(e,t,n){"use strict";n.r(t),n.d(t,"Serializable",(function(){return o})),n.d(t,"SerializationMap",(function(){return i})),n.d(t,"registerClass",(function(){return c})),n.d(t,"getRegisteredName",(function(){return u}));var r=n(8);const a=new Map,s=new Map;class o{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class i{constructor(){this.classNameMap={}}static getMap(){return null==i.instance&&(i.instance=new i),i.instance}static register(e){i.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function c(e,t,n){Object(r.c)(null!=e.className,()=>"Class being registered does not have the static className property defined."),Object(r.c)("string"===typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),Object(r.c)(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const o=t+">"+n;return i.register(e),a.set(o,e),s.set(e,o),e}function u(e){return s.has(e)?s.get(e):e.className}},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(23),o=n(2),i=n(4);const c=Object(i.b)({floorDiv_:function(e,t){let n=Object(o.a)(e,"a","floorDiv"),i=Object(o.a)(t,"b","floorDiv");[n,i]=Object(s.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.lb,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(5),a=n(24),s=n(12),o=n(14),i=n(72),c=n(9),u=n(33),l=n(25),d=n(53);class h extends d.a{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const d=r.a.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:"".concat(t,"/accumulator"),variable:Object(a.i)(()=>Object(i.a)(d.shape,this.initialAccumulatorValue).variable(e))}}const h=Array.isArray(e)?e[n].tensor:e[t];if(null==h)return;const p=this.accumulatedGrads[n].variable;Object(a.i)(()=>{const e=Object(s.a)(p,Object(l.a)(h));p.assign(e);const t=Object(s.a)(Object(c.a)(Object(o.a)(h,Object(u.a)(Object(s.a)(e,r.a.backend.epsilon()))),-this.learningRate),d);d.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(a.b)(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(5),a=n(24),s=n(12),o=n(14),i=n(9),c=n(48),u=n(17),l=n(33),d=n(25),h=n(13),p=n(19),f=n(53);class m extends f.a{static get className(){return"Adam"}constructor(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(a.i)(()=>{this.accBeta1=Object(u.a)(t).variable(),this.accBeta2=Object(u.a)(n).variable()}),null==s&&(this.epsilon=r.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Object(a.i)(()=>{const n=Object(h.a)(1,this.accBeta1),c=Object(h.a)(1,this.accBeta2);t.forEach((t,u)=>{const h=r.a.registeredVariables[t];null==this.accumulatedFirstMoment[u]&&(this.accumulatedFirstMoment[u]={originalName:"".concat(t,"/m"),variable:Object(a.i)(()=>Object(p.a)(h).variable(!1))}),null==this.accumulatedSecondMoment[u]&&(this.accumulatedSecondMoment[u]={originalName:"".concat(t,"/v"),variable:Object(a.i)(()=>Object(p.a)(h).variable(!1))});const f=Array.isArray(e)?e[u].tensor:e[t];if(null==f)return;const m=this.accumulatedFirstMoment[u].variable,g=this.accumulatedSecondMoment[u].variable,b=Object(s.a)(Object(i.a)(m,this.beta1),Object(i.a)(f,1-this.beta1)),y=Object(s.a)(Object(i.a)(g,this.beta2),Object(i.a)(Object(d.a)(f),1-this.beta2)),v=Object(o.a)(b,n),x=Object(o.a)(y,c);m.assign(b),g.assign(y);const w=Object(s.a)(Object(i.a)(Object(o.a)(v,Object(s.a)(Object(l.a)(x),this.epsilon)),-this.learningRate),h);h.assign(w)}),this.accBeta1.assign(Object(i.a)(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(i.a)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(a.b)(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&Object(a.b)(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),Object(a.i)(()=>{this.accBeta1.assign(Object(c.a)(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(c.a)(this.beta2,this.iterations_+1))});const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(5),a=n(24),s=n(39),o=n(12),i=n(14),c=n(87),u=n(9),l=n(17),d=n(13),h=n(19),p=n(53);class f extends p.a{static get className(){return"Adamax"}constructor(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(a.i)(()=>{this.iteration=Object(l.a)(0).variable(),this.accBeta1=Object(l.a)(t).variable()}),null==s&&(this.epsilon=r.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Object(a.i)(()=>{const n=Object(d.a)(1,this.accBeta1),a=Object(i.a)(-this.learningRate,Object(o.a)(Object(u.a)(this.iteration,this.decay),1));t.forEach((t,l)=>{const d=r.a.registeredVariables[t];null==this.accumulatedFirstMoment[l]&&(this.accumulatedFirstMoment[l]={originalName:"".concat(t,"/m"),variable:Object(h.a)(d).variable(!1)}),null==this.accumulatedWeightedInfNorm[l]&&(this.accumulatedWeightedInfNorm[l]={originalName:"".concat(t,"/v"),variable:Object(h.a)(d).variable(!1)});const p=Array.isArray(e)?e[l].tensor:e[t];if(null==p)return;const f=this.accumulatedFirstMoment[l].variable,m=this.accumulatedWeightedInfNorm[l].variable,g=Object(o.a)(Object(u.a)(f,this.beta1),Object(u.a)(p,1-this.beta1)),b=Object(u.a)(m,this.beta2),y=Object(s.a)(p),v=Object(c.a)(b,y);f.assign(g),m.assign(v);const x=Object(o.a)(Object(u.a)(Object(i.a)(a,n),Object(i.a)(g,Object(o.a)(v,this.epsilon))),d);d.assign(x)}),this.iteration.assign(Object(o.a)(this.iteration,1)),this.accBeta1.assign(Object(u.a)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(a.b)(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&Object(a.b)(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(5),a=n(24),s=n(12),o=n(9),i=n(17),c=n(19),u=n(88);class l extends u.a{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Object(i.a)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const i=r.a.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:"".concat(t,"/momentum"),variable:Object(a.i)(()=>Object(c.a)(i).variable(e))}}const u=this.accumulations[n].variable,l=Array.isArray(e)?e[n].tensor:e[t];null!=l&&Object(a.i)(()=>{let e;const t=Object(s.a)(Object(o.a)(this.m,u),l);e=this.useNesterov?Object(s.a)(Object(o.a)(this.c,Object(s.a)(l,Object(o.a)(t,this.m))),i):Object(s.a)(Object(o.a)(this.c,t),i),u.assign(t),i.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(a.b)(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var r=n(5),a=n(24),s=n(12),o=n(14),i=n(9),c=n(33),u=n(25),l=n(13),d=n(19),h=n(53);class p extends h.a{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==a&&(this.epsilon=r.a.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const h=r.a.registeredVariables[t];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(t,"/rms"),variable:Object(a.i)(()=>Object(d.a)(h).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(t,"/momentum"),variable:Object(a.i)(()=>Object(d.a)(h).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(t,"/mg"),variable:Object(a.i)(()=>Object(d.a)(h).variable(!1))});const p=Array.isArray(e)?e[n].tensor:e[t];if(null==p)return;const f=this.accumulatedMeanSquares[n].variable,m=this.accumulatedMoments[n].variable;Object(a.i)(()=>{const e=Object(s.a)(Object(i.a)(f,this.decay),Object(i.a)(Object(u.a)(p),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=Object(s.a)(Object(i.a)(t,this.decay),Object(i.a)(p,1-this.decay)),a=Object(o.a)(Object(i.a)(p,this.learningRate),Object(c.a)(Object(l.a)(e,Object(s.a)(Object(u.a)(r),this.epsilon)))),d=Object(s.a)(Object(i.a)(m,this.momentum),a);f.assign(e),t.assign(r),m.assign(d);const g=Object(l.a)(h,d);h.assign(g)}else{const e=Object(s.a)(Object(i.a)(f,this.decay),Object(i.a)(Object(u.a)(p),1-this.decay)),t=Object(s.a)(Object(i.a)(m,this.momentum),Object(o.a)(Object(i.a)(p,this.learningRate),Object(c.a)(Object(s.a)(e,this.epsilon))));f.assign(e),m.assign(t);const n=Object(l.a)(h,t);h.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(a.b)(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Object(a.b)(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&Object(a.b)(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(11),c=n(20),u=n(4),l=n(7);const d=Object(u.b)({avgPool_:function(e,t,n,u,d){const h=Object(s.a)(e,"x","avgPool","float32");o.c(c.i(n,1),()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"));let p=h,f=!1;3===h.rank&&(f=!0,p=Object(l.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.c(4===p.rank,()=>"Error in avgPool: x must be rank 4 but got rank ".concat(p.rank,".")),c.a("avgPool",u,d);const m={x:p},g={filterSize:t,strides:n,pad:u,dimRoundingMode:d};let b=r.a.runKernel(a.o,m,g);return b=Object(i.a)(b,h.dtype),f?Object(l.a)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({cos_:function(e){const t={x:Object(s.a)(e,"x","cos","float32")};return r.a.runKernel(a.K,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=Object(s.a)(e,"x","cumsum"),c={x:i},u={axis:t,exclusive:n,reverse:o};return r.a.runKernel(a.O,c,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({elu_:function(e){const t={x:Object(s.a)(e,"x","elu","float32")};return r.a.runKernel(a.ab,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({floor_:function(e){const t={x:Object(s.a)(e,"x","floor","float32")};return r.a.runKernel(a.kb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n=Object(s.a)(e,"x","leakyRelu"),o={x:n},i={alpha:t};return r.a.runKernel(a.Cb,o,i)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(2),a=n(8),s=n(12),o=n(35),i=n(36),c=n(69),u=n(66),l=n(4),d=n(7),h=n(13),p=n(16);const f=Object(l.b)({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const l=Object(r.a)(e,"x","logSumExp"),f=Object(a.I)(t,l.shape),m=Object(u.a)(l,f,!0),g=Object(h.a)(l,m),b=Object(i.a)(g),y=Object(p.a)(b,f),v=Object(c.a)(y),x=Object(s.a)(Object(d.a)(m,v.shape),v);if(n){const e=Object(o.e)(x.shape,f);return Object(d.a)(x,e)}return x}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(2),o=n(15),i=n(4);const c=Object(i.b)({logicalOr_:function(e,t){const n=Object(s.a)(e,"a","logicalOr","bool"),i=Object(s.a)(t,"b","logicalOr","bool");Object(o.assertAndGetBroadcastShape)(n.shape,i.shape);const c={a:n,b:i};return r.a.runKernel(a.Lb,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(20),c=n(4),u=n(7);const l=Object(c.b)({maxPool_:function(e,t,n,c,l){const d=Object(s.a)(e,"x","maxPool");let h=d,p=!1;3===d.rank&&(p=!0,h=Object(u.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o.c(4===h.rank,()=>"Error in maxPool: input must be rank 4 but got rank ".concat(h.rank,".")),o.c(i.i(n,1),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")),i.a("maxPool",c,l);const f={x:h},m={filterSize:t,strides:n,pad:c,dimRoundingMode:l},g=r.a.runKernel(a.Nb,f,m);return p?Object(u.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(3),s=n(23),o=n(2),i=n(15),c=n(4);const u=Object(c.b)({notEqual_:function(e,t){let n=Object(o.a)(e,"a","notEqual","string_or_numeric"),c=Object(o.a)(t,"b","notEqual","string_or_numeric");[n,c]=Object(s.makeTypesMatch)(n,c),Object(i.assertAndGetBroadcastShape)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.ec,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({prelu_:function(e,t){const n={x:Object(s.a)(e,"x","prelu"),alpha:Object(s.a)(t,"alpha","prelu")};return r.a.runKernel(a.kc,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({relu6_:function(e){const t={x:Object(s.a)(e,"x","relu6")};return r.a.runKernel(a.uc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(8),o=n(4);const i=Object(o.b)({fft_:function(e){Object(s.c)("complex64"===e.dtype,()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(e.dtype,"."));const t={input:e};return r.a.runKernel(a.hb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(8),a=n(47),s=n(30),o=n(94),i=n(4),c=n(83),u=n(7),l=n(27),d=n(59),h=n(73),p=n(19),f=n(127);const m=Object(i.b)({rfft_:function(e,t){Object(r.c)("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got ".concat(e.dtype));let n=e.shape[e.shape.length-1];const i=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map(e=>0),a=e.shape.map(e=>e);a[e.shape.length-1]=t,m=Object(l.a)(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,m=Object(s.a)([e,Object(h.a)(r)],e.shape.length-1),n=t}else m=e;const g=Object(p.a)(m),b=Object(u.a)(Object(a.a)(m,g),[i,n]),y=Object(f.a)(b),v=Math.floor(n/2)+1,x=Object(c.a)(y),w=Object(o.a)(y),O=Object(d.a)(x,[v,n-v],x.shape.length-1),k=Object(d.a)(w,[v,n-v],w.shape.length-1),S=m.shape.slice();return S[m.shape.length-1]=v,Object(u.a)(Object(a.a)(O[0],k[0]),S)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(3),s=n(23),o=n(2),i=n(15),c=n(4);const u=Object(c.b)({squaredDifference_:function(e,t){let n=Object(o.a)(e,"a","squaredDifference"),c=Object(o.a)(t,"b","squaredDifference");[n,c]=Object(s.makeTypesMatch)(n,c),Object(i.assertAndGetBroadcastShape)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.Yc,u,{})}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(4);const c=Object(i.b)({unsortedSegmentSum_:function(e,t,n){const i=Object(s.a)(e,"x","unsortedSegmentSum"),c=Object(s.a)(t,"segmentIds","unsortedSegmentSum","int32");Object(o.c)(Object(o.w)(n),()=>"numSegments must be of dtype int");const u={x:i,segmentIds:c},l={numSegments:n};return r.a.runKernel(a.qd,u,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return te})),n.d(t,"b",(function(){return re}));var r={};n.r(r),n.d(r,"abs",(function(){return u.b})),n.d(r,"acos",(function(){return u.c})),n.d(r,"acosh",(function(){return u.d})),n.d(r,"add",(function(){return u.e})),n.d(r,"addN",(function(){return u.f})),n.d(r,"all",(function(){return u.g})),n.d(r,"any",(function(){return u.h})),n.d(r,"argMax",(function(){return u.i})),n.d(r,"argMin",(function(){return u.j})),n.d(r,"asin",(function(){return u.k})),n.d(r,"asinh",(function(){return u.l})),n.d(r,"atan",(function(){return u.m})),n.d(r,"atan2",(function(){return u.n})),n.d(r,"atanh",(function(){return u.o})),n.d(r,"avgPool",(function(){return u.p})),n.d(r,"avgPool3d",(function(){return u.q})),n.d(r,"basicLSTMCell",(function(){return u.r})),n.d(r,"batchToSpaceND",(function(){return u.w})),n.d(r,"batchNorm",(function(){return u.s})),n.d(r,"batchNorm2d",(function(){return u.t})),n.d(r,"batchNorm3d",(function(){return u.u})),n.d(r,"batchNorm4d",(function(){return u.v})),n.d(r,"bincount",(function(){return u.x})),n.d(r,"bitwiseAnd",(function(){return u.y})),n.d(r,"broadcastArgs",(function(){return u.A})),n.d(r,"broadcastTo",(function(){return u.B})),n.d(r,"buffer",(function(){return u.C})),n.d(r,"cast",(function(){return u.D})),n.d(r,"ceil",(function(){return u.E})),n.d(r,"clipByValue",(function(){return u.F})),n.d(r,"clone",(function(){return u.G})),n.d(r,"complex",(function(){return u.H})),n.d(r,"concat",(function(){return u.I})),n.d(r,"concat1d",(function(){return u.J})),n.d(r,"concat2d",(function(){return u.K})),n.d(r,"concat3d",(function(){return u.L})),n.d(r,"concat4d",(function(){return u.M})),n.d(r,"conv1d",(function(){return u.N})),n.d(r,"conv2d",(function(){return u.O})),n.d(r,"conv2dTranspose",(function(){return u.P})),n.d(r,"conv3d",(function(){return u.Q})),n.d(r,"conv3dTranspose",(function(){return u.R})),n.d(r,"cos",(function(){return u.S})),n.d(r,"cosh",(function(){return u.T})),n.d(r,"cumprod",(function(){return u.V})),n.d(r,"cumsum",(function(){return u.W})),n.d(r,"denseBincount",(function(){return u.X})),n.d(r,"depthToSpace",(function(){return u.Y})),n.d(r,"depthwiseConv2d",(function(){return u.Z})),n.d(r,"diag",(function(){return u.ab})),n.d(r,"dilation2d",(function(){return u.bb})),n.d(r,"div",(function(){return u.cb})),n.d(r,"divNoNan",(function(){return u.db})),n.d(r,"dot",(function(){return u.eb})),n.d(r,"einsum",(function(){return u.gb})),n.d(r,"elu",(function(){return u.hb})),n.d(r,"ensureShape",(function(){return u.jb})),n.d(r,"equal",(function(){return u.kb})),n.d(r,"erf",(function(){return u.lb})),n.d(r,"euclideanNorm",(function(){return u.mb})),n.d(r,"exp",(function(){return u.nb})),n.d(r,"expandDims",(function(){return u.ob})),n.d(r,"expm1",(function(){return u.pb})),n.d(r,"eye",(function(){return u.qb})),n.d(r,"fill",(function(){return u.sb})),n.d(r,"floor",(function(){return u.tb})),n.d(r,"floorDiv",(function(){return u.ub})),n.d(r,"gather",(function(){return u.wb})),n.d(r,"greater",(function(){return u.yb})),n.d(r,"greaterEqual",(function(){return u.zb})),n.d(r,"imag",(function(){return u.Bb})),n.d(r,"isFinite",(function(){return u.Fb})),n.d(r,"isInf",(function(){return u.Gb})),n.d(r,"isNaN",(function(){return u.Hb})),n.d(r,"leakyRelu",(function(){return u.Ib})),n.d(r,"less",(function(){return u.Jb})),n.d(r,"lessEqual",(function(){return u.Kb})),n.d(r,"linspace",(function(){return u.Mb})),n.d(r,"localResponseNormalization",(function(){return u.Nb})),n.d(r,"log",(function(){return u.Ob})),n.d(r,"log1p",(function(){return u.Pb})),n.d(r,"logSigmoid",(function(){return u.Qb})),n.d(r,"logSoftmax",(function(){return u.Rb})),n.d(r,"logSumExp",(function(){return u.Sb})),n.d(r,"logicalAnd",(function(){return u.Tb})),n.d(r,"logicalNot",(function(){return u.Ub})),n.d(r,"logicalOr",(function(){return u.Vb})),n.d(r,"logicalXor",(function(){return u.Wb})),n.d(r,"lowerBound",(function(){return u.Yb})),n.d(r,"matMul",(function(){return u.Zb})),n.d(r,"max",(function(){return u.ac})),n.d(r,"maxPool",(function(){return u.bc})),n.d(r,"maxPool3d",(function(){return u.cc})),n.d(r,"maxPoolWithArgmax",(function(){return u.dc})),n.d(r,"maximum",(function(){return u.ec})),n.d(r,"mean",(function(){return u.fc})),n.d(r,"meshgrid",(function(){return u.gc})),n.d(r,"min",(function(){return u.hc})),n.d(r,"minimum",(function(){return u.ic})),n.d(r,"mirrorPad",(function(){return u.jc})),n.d(r,"mod",(function(){return u.kc})),n.d(r,"moments",(function(){return u.lc})),n.d(r,"mul",(function(){return u.nc})),n.d(r,"multiRNNCell",(function(){return u.oc})),n.d(r,"multinomial",(function(){return u.pc})),n.d(r,"neg",(function(){return u.qc})),n.d(r,"notEqual",(function(){return u.sc})),n.d(r,"oneHot",(function(){return u.tc})),n.d(r,"ones",(function(){return u.uc})),n.d(r,"onesLike",(function(){return u.vc})),n.d(r,"outerProduct",(function(){return u.xc})),n.d(r,"pad",(function(){return u.yc})),n.d(r,"pad1d",(function(){return u.zc})),n.d(r,"pad2d",(function(){return u.Ac})),n.d(r,"pad3d",(function(){return u.Bc})),n.d(r,"pad4d",(function(){return u.Cc})),n.d(r,"pool",(function(){return u.Dc})),n.d(r,"pow",(function(){return u.Ec})),n.d(r,"prelu",(function(){return u.Fc})),n.d(r,"print",(function(){return u.Gc})),n.d(r,"prod",(function(){return u.Hc})),n.d(r,"raggedGather",(function(){return u.Ic})),n.d(r,"raggedRange",(function(){return u.Jc})),n.d(r,"raggedTensorToTensor",(function(){return u.Kc})),n.d(r,"rand",(function(){return u.Lc})),n.d(r,"randomGamma",(function(){return u.Mc})),n.d(r,"randomNormal",(function(){return u.Nc})),n.d(r,"randomStandardNormal",(function(){return u.Oc})),n.d(r,"randomUniform",(function(){return u.Pc})),n.d(r,"randomUniformInt",(function(){return u.Qc})),n.d(r,"range",(function(){return u.Rc})),n.d(r,"real",(function(){return u.Sc})),n.d(r,"reciprocal",(function(){return u.Tc})),n.d(r,"relu",(function(){return u.Uc})),n.d(r,"relu6",(function(){return u.Vc})),n.d(r,"reshape",(function(){return u.Wc})),n.d(r,"reverse",(function(){return u.Xc})),n.d(r,"reverse1d",(function(){return u.Yc})),n.d(r,"reverse2d",(function(){return u.Zc})),n.d(r,"reverse3d",(function(){return u.ad})),n.d(r,"reverse4d",(function(){return u.bd})),n.d(r,"round",(function(){return u.dd})),n.d(r,"rsqrt",(function(){return u.ed})),n.d(r,"scalar",(function(){return u.fd})),n.d(r,"selu",(function(){return u.id})),n.d(r,"separableConv2d",(function(){return u.jd})),n.d(r,"setdiff1dAsync",(function(){return u.kd})),n.d(r,"sigmoid",(function(){return u.ld})),n.d(r,"sign",(function(){return u.md})),n.d(r,"sin",(function(){return u.od})),n.d(r,"sinh",(function(){return u.pd})),n.d(r,"slice",(function(){return u.qd})),n.d(r,"slice1d",(function(){return u.rd})),n.d(r,"slice2d",(function(){return u.sd})),n.d(r,"slice3d",(function(){return u.td})),n.d(r,"slice4d",(function(){return u.ud})),n.d(r,"softmax",(function(){return u.vd})),n.d(r,"softplus",(function(){return u.wd})),n.d(r,"spaceToBatchND",(function(){return u.xd})),n.d(r,"fft",(function(){return u.rb})),n.d(r,"ifft",(function(){return u.Ab})),n.d(r,"irfft",(function(){return u.Eb})),n.d(r,"rfft",(function(){return u.cd})),n.d(r,"split",(function(){return u.Bd})),n.d(r,"sqrt",(function(){return u.Cd})),n.d(r,"square",(function(){return u.Dd})),n.d(r,"squaredDifference",(function(){return u.Ed})),n.d(r,"squeeze",(function(){return u.Fd})),n.d(r,"stack",(function(){return u.Gd})),n.d(r,"step",(function(){return u.Hd})),n.d(r,"stridedSlice",(function(){return u.Id})),n.d(r,"sub",(function(){return u.Kd})),n.d(r,"sum",(function(){return u.Ld})),n.d(r,"tan",(function(){return u.Md})),n.d(r,"tanh",(function(){return u.Nd})),n.d(r,"tensor",(function(){return u.Od})),n.d(r,"tensor1d",(function(){return u.Pd})),n.d(r,"tensor2d",(function(){return u.Qd})),n.d(r,"tensor3d",(function(){return u.Rd})),n.d(r,"tensor4d",(function(){return u.Sd})),n.d(r,"tensor5d",(function(){return u.Td})),n.d(r,"tensor6d",(function(){return u.Ud})),n.d(r,"tensorScatterUpdate",(function(){return u.Vd})),n.d(r,"tile",(function(){return u.Wd})),n.d(r,"topk",(function(){return u.Xd})),n.d(r,"truncatedNormal",(function(){return u.Zd})),n.d(r,"unique",(function(){return u.ae})),n.d(r,"unsortedSegmentSum",(function(){return u.be})),n.d(r,"unstack",(function(){return u.ce})),n.d(r,"upperBound",(function(){return u.de})),n.d(r,"variable",(function(){return u.ee})),n.d(r,"where",(function(){return u.fe})),n.d(r,"whereAsync",(function(){return u.ge})),n.d(r,"zeros",(function(){return u.he})),n.d(r,"zerosLike",(function(){return u.ie})),n.d(r,"booleanMaskAsync",(function(){return u.z})),n.d(r,"transpose",(function(){return u.Yd})),n.d(r,"norm",(function(){return u.rc})),n.d(r,"movingAverage",(function(){return u.mc})),n.d(r,"scatterND",(function(){return u.gd})),n.d(r,"searchSorted",(function(){return u.hd})),n.d(r,"sparseToDense",(function(){return u.zd})),n.d(r,"gatherND",(function(){return u.xb})),n.d(r,"dropout",(function(){return u.fb})),n.d(r,"enclosingPowerOfTwo",(function(){return u.ib})),n.d(r,"cosineWindow",(function(){return u.U})),n.d(r,"inTopKAsync",(function(){return u.Db})),n.d(r,"op",(function(){return u.wc})),n.d(r,"OP_SCOPE_SUFFIX",(function(){return u.a})),n.d(r,"image",(function(){return u.Cb})),n.d(r,"linalg",(function(){return u.Lb})),n.d(r,"losses",(function(){return u.Xb})),n.d(r,"spectral",(function(){return u.Ad})),n.d(r,"fused",(function(){return u.vb})),n.d(r,"signal",(function(){return u.nd})),n.d(r,"sparse",(function(){return u.yd})),n.d(r,"string",(function(){return u.Jd}));var a=n(0);Object(a.he)().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var s=n(57),o=n(1);class i{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return Object(o.e)(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Object(o.e)(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Object(s.f)(this.node.rawAttrs,e,t);if(null!=n.s)return Object(s.i)(this.node.rawAttrs,e,t);if(null!=n.b)return Object(s.c)(this.node.rawAttrs,e,t);if(null!=n.shape)return Object(s.k)(this.node.rawAttrs,e,t);if(null!=n.type)return Object(s.e)(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Object(s.g)(this.node.rawAttrs,e,t);if(null!=n.list.s)return Object(s.h)(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Object(s.j)(this.node.rawAttrs,e,t);if(null!=n.list.b)return Object(s.b)(this.node.rawAttrs,e,t);if(null!=n.list.type)return Object(s.d)(this.node.rawAttrs,e,t)}return t}}var c=n(99),u=n(22);const l=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];case"AddN":return[a.addN(Object(o.d)("tensors",e,t,n))];case"FloorMod":case"Mod":return[a.mod(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];case"Mul":return[a.mul(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];case"RealDiv":case"Div":return[a.div(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];case"DivNoNan":return[a.divNoNan(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];case"FloorDiv":return[a.floorDiv(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];case"Sub":return[a.sub(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];case"Minimum":return[a.minimum(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];case"Maximum":return[a.maximum(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];case"Pow":return[a.pow(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];case"SquaredDifference":return[a.squaredDifference(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},d=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(e.op){case"Abs":case"ComplexAbs":return[a.abs(Object(o.d)("x",e,t,n))];case"Acos":return[a.acos(Object(o.d)("x",e,t,n))];case"Acosh":return[a.acosh(Object(o.d)("x",e,t,n))];case"Asin":return[a.asin(Object(o.d)("x",e,t,n))];case"Asinh":return[a.asinh(Object(o.d)("x",e,t,n))];case"Atan":return[a.atan(Object(o.d)("x",e,t,n))];case"Atan2":return[a.atan2(Object(o.d)("x",e,t,n),Object(o.d)("y",e,t,n))];case"Atanh":return[a.atanh(Object(o.d)("x",e,t,n))];case"Ceil":return[a.ceil(Object(o.d)("x",e,t,n))];case"Complex":return[a.complex(Object(o.d)("real",e,t,n),Object(o.d)("imag",e,t,n))];case"Cos":return[a.cos(Object(o.d)("x",e,t,n))];case"Cosh":return[a.cosh(Object(o.d)("x",e,t,n))];case"Elu":return[a.elu(Object(o.d)("x",e,t,n))];case"Erf":return[a.erf(Object(o.d)("x",e,t,n))];case"Exp":return[a.exp(Object(o.d)("x",e,t,n))];case"Expm1":return[a.expm1(Object(o.d)("x",e,t,n))];case"Floor":return[a.floor(Object(o.d)("x",e,t,n))];case"Log":return[a.log(Object(o.d)("x",e,t,n))];case"Log1p":return[a.log1p(Object(o.d)("x",e,t,n))];case"Imag":return[a.imag(Object(o.d)("x",e,t,n))];case"Neg":return[a.neg(Object(o.d)("x",e,t,n))];case"Reciprocal":return[a.reciprocal(Object(o.d)("x",e,t,n))];case"Real":return[a.real(Object(o.d)("x",e,t,n))];case"Relu":return[a.relu(Object(o.d)("x",e,t,n))];case"Round":return[a.round(Object(o.d)("x",e,t,n))];case"Selu":return[a.selu(Object(o.d)("x",e,t,n))];case"Sigmoid":return[a.sigmoid(Object(o.d)("x",e,t,n))];case"Sin":return[a.sin(Object(o.d)("x",e,t,n))];case"Sign":return[a.sign(Object(o.d)("x",e,t,n))];case"Sinh":return[a.sinh(Object(o.d)("x",e,t,n))];case"Softplus":return[a.softplus(Object(o.d)("x",e,t,n))];case"Sqrt":return[a.sqrt(Object(o.d)("x",e,t,n))];case"Square":return[a.square(Object(o.d)("x",e,t,n))];case"Tanh":return[a.tanh(Object(o.d)("x",e,t,n))];case"Tan":return[a.tan(Object(o.d)("x",e,t,n))];case"ClipByValue":return[a.clipByValue(Object(o.d)("x",e,t,n),Object(o.d)("clipValueMin",e,t,n),Object(o.d)("clipValueMax",e,t,n))];case"Relu6":return[a.relu6(Object(o.d)("x",e,t,n))];case"Rsqrt":return[a.rsqrt(Object(o.e)(e.inputNames[0],t,n))];case"LeakyRelu":return[a.leakyRelu(Object(o.d)("x",e,t,n),Object(o.d)("alpha",e,t,n))];case"Prelu":return[a.prelu(Object(o.d)("x",e,t,n),Object(o.d)("alpha",e,t,n))];case"IsNan":return[a.isNaN(Object(o.e)(e.inputNames[0],t,n))];case"IsInf":return[a.isInf(Object(o.e)(e.inputNames[0],t,n))];case"IsFinite":return[a.isFinite(Object(o.e)(e.inputNames[0],t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function h(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){a.Mf.assert(e.length===t.length,()=>n+" Shapes ".concat(e," and ").concat(t," must match"));for(let r=0;r<e.length;r++){const s=e[r],o=t[r];a.Mf.assert(s<0||o<0||s===o,()=>n+" Shapes ".concat(e," and ").concat(t," must match"))}}}function p(e){return"number"!==typeof e&&!e.some(e=>e<0)}function f(e,t,n){let r=m(e,n);const a=!p(r);if(a&&0===t.length)throw new Error("Tried to calculate elements of an empty list"+" with non-fully-defined elementShape: ".concat(r));if(a&&t.forEach(e=>{r=m(e.shape,r)}),!p(r))throw new Error("Non-fully-defined elementShape: ".concat(r));return r}function m(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error("Incompatible ranks during merge: ".concat(e," vs. ").concat(t));const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error("Incompatible shape during merge: ".concat(e," vs. ").concat(t));n[r]=a>=0?a:s}return n}class g{constructor(e,t,n,r,s,o,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=o,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Object(a.ff)(0),Object(a.ue)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||e>=this.size())throw new Error("Tried to read from index ".concat(e,", but array size is: ").concat(this.size()));const t=this.tensors[e];if(t.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(e," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index ".concat(e,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,",\n          because the value dtype is ").concat(t.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),h(this.elementShape,t.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been written."));n.tensor=t,Object(a.ue)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(e.length," is not the same as tensors size: ").concat(t.length,"."));e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(t));if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Object(a.Bf)([],[0].concat(this.elementShape));const n=this.readMany(e);return h(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(a.wf)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(e));if(0===this.size())return Object(a.Bf)([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return h(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),Object(a.Pd)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(e,Object(a.Kf)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));let n=0;const r=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(t.shape));if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(e.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const s=0===n?0:t.size/n,o=[];Object(a.Ff)(()=>{t=Object(a.df)(t,[1,n,s]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],c=[1,e[n],s];o[n]=Object(a.df)(Object(a.lf)(t,i,c),this.elementShape)}return o});const i=[];for(let a=0;a<e.length;a++)i[a]=a;this.writeMany(i,o)}}class b{get id(){return this.idTensor.id}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(e.dtype));h(t,e.shape,"TensorList shape mismatch: "),Object(a.ue)(e)}),this.idTensor=Object(a.ff)(0),this.maxNumElements=r,Object(a.ue)(this.idTensor)}copy(){return new b([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));h(e,this.elementShape,"TensorList shape mismatch: ");const r=f(this.elementShape,this.tensors,e);return Object(a.Ff)(()=>{const e=this.tensors.map(e=>Object(a.df)(e,r));return Object(a.wf)(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=f(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,h(r.shape,e,"TensorList shape mismatch: "),Object(a.df)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(h(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(a.ue)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(e));if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error("TensorListResize input size ".concat(e," is greater maxNumElement ").concat(this.maxNumElements,"."));const t=new b([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(e<0||e>this.tensors.length)throw new Error("Trying to access element ".concat(e," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[e])throw new Error("element at index ".concat(e," is null."));h(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=f(this.elementShape,this.tensors,t);return Object(a.df)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error("Trying to set element ".concat(e," in a list with max ").concat(this.maxNumElements," elements."));h(this.elementShape,t.shape,"TensorList shape mismatch: "),Object(a.ue)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));h(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=f(this.elementShape,this.tensors,n);return 0===e.length?Object(a.Bf)([],[0].concat(r)):Object(a.Ff)(()=>{const t=e.map(e=>Object(a.df)(this.tensors[e],r));return Object(a.wf)(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(e));h(this.elementShape,t,"TensorList shape mismatch: ");const n=f(this.elementShape,this.tensors,t);return 0===this.size()?Object(a.Bf)([],[0].concat(n)):Object(a.Ff)(()=>{const e=this.tensors.map(e=>Object(a.df)(e,n));return Object(a.Pd)(e,0)})}}const y=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Object(o.d)("thenBranch",e,t,n),a=Object(o.d)("elseBranch",e,t,n),s=Object(o.d)("cond",e,t,n),i=Object(o.d)("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Object(o.d)("body",e,t,n),a=Object(o.d)("cond",e,t,n),s=Object(o.d)("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),c=s.map(e=>e.id);let u=await i[0].data();i.forEach(e=>{e.kept||-1!==c.indexOf(e.id)||e.dispose()});let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map(e=>e.id);e.forEach(e=>{e.kept||-1!==c.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach(e=>{e.kept||-1!==c.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return l}case"LoopCond":{const r=Object(o.d)("pred",e,t,n);return[Object(o.a)(r)]}case"Switch":{const r=Object(o.d)("pred",e,t,n);let a=Object(o.d)("data",e,t,n);return a.kept||(a=Object(o.a)(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find(e=>void 0!==Object(o.e)(e,t,n));if(r){const e=Object(o.e)(r,t,n);return[Object(o.a)(e)]}return}case"Enter":{const r=Object(o.d)("frameName",e,t,n),a=Object(o.d)("tensor",e,t,n);return n.enterFrame(r),[Object(o.a)(a)]}case"Exit":{const r=Object(o.d)("tensor",e,t,n);return n.exitFrame(),[Object(o.a)(r)]}case"NextIteration":{const r=Object(o.d)("tensor",e,t,n);return n.nextIteration(),[Object(o.a)(r)]}case"TensorArrayV3":{const r=Object(o.d)("size",e,t,n),s=Object(o.d)("dtype",e,t,n),i=Object(o.d)("elementShape",e,t,n),c=Object(o.d)("dynamicSize",e,t,n),u=Object(o.d)("clearAfterRead",e,t,n),l=Object(o.d)("identicalElementShapes",e,t,n),d=Object(o.d)("name",e,t,n),h=new g(d,s,r,i,l,c,u);return n.addTensorArray(h),[h.idTensor,Object(a.ff)(1)]}case"TensorArrayWriteV3":{const r=Object(o.d)("tensorArrayId",e,t,n),a=Object(o.d)("index",e,t,n),s=Object(o.d)("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=Object(o.d)("tensorArrayId",e,t,n),a=Object(o.d)("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=Object(o.d)("tensorArrayId",e,t,n),a=Object(o.d)("indices",e,t,n),s=Object(o.d)("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=Object(o.d)("tensorArrayId",e,t,n),a=Object(o.d)("indices",e,t,n),s=Object(o.d)("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=Object(o.d)("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=Object(o.d)("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=Object(o.d)("tensorArrayId",e,t,n),a=Object(o.d)("tensor",e,t,n),s=Object(o.d)("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=Object(o.d)("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return[Object(a.ff)(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=Object(o.d)("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=Object(o.d)("tensorListId",e,t,n),a=Object(o.d)("index",e,t,n),s=Object(o.d)("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=Object(o.d)("tensorListId",e,t,n),a=Object(o.d)("index",e,t,n),s=Object(o.d)("elementShape",e,t,n),i=Object(o.d)("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Object(o.d)("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error("Max index must be < array size (".concat(s,"  vs. ").concat(r,")"));const o=new b([],n,e.dtype,r),i=Object(a.Kf)(e,0);return t.forEach((e,t)=>{o.setItem(e,i[t])}),o}(Object(o.d)("tensor",e,t,n),r,Object(o.d)("elementShape",e,t,n),Object(o.d)("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Object(o.d)("elementShape",e,t,n),a=Object(o.d)("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=Object(o.d)(s,e,t,n),c=function(e,t,n,r){return new b([],e,t,r)}(r,a,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(c),[c.idTensor]}case"TensorListGather":{const r=Object(o.d)("tensorListId",e,t,n),a=Object(o.d)("indices",e,t,n),s=Object(o.d)("elementShape",e,t,n),i=Object(o.d)("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=Object(o.d)("tensorListId",e,t,n),a=Object(o.d)("elementShape",e,t,n),s=Object(o.d)("elementDType",e,t,n),i=Object(o.d)("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(e.shape));if(e.dtype!==n)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(n));h(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=Object(a.Kf)(e);return new b(s,t,r)}(Object(o.d)("tensor",e,t,n),Object(o.d)("elementShape",e,t,n),Object(o.d)("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=Object(o.d)("tensorListId",e,t,n),a=n.getTensorList(r.id),s=Object(o.d)("dtype",e,t,n),i=Object(o.d)("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=Object(o.d)("tensorListId",e,t,n),a=Object(o.d)("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=Object(o.d)("tensorListId",e,t,n),a=Object(o.d)("elementShape",e,t,n),s=Object(o.d)("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=Object(o.d)("tensor",e,t,n),s=Object(o.d)("elementShape",e,t,n),i=function(e,t,n){let r=0;const s=t.map(e=>(r+=e,r));if(r!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(r,", and tensor's shape is: ").concat(e.shape));const o=m(e.shape.slice(1),n),i=0===r?0:e.size/r,c=Object(a.Ff)(()=>{const n=[];e=Object(a.df)(e,[1,r,i]);for(let r=0;r<t.length;++r){const c=[0,0===r?0:s[r-1],0],u=[1,t[r],i];n[r]=Object(a.df)(Object(a.lf)(e,c,u),o)}return e.dispose(),n}),u=new b([],n,e.dtype,t.length);for(let a=0;a<c.length;a++)u.setItem(a,c[a]);return u}(r,Object(o.d)("lengths",e,t,n),s);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{const r=Object(o.d)("tensorListId",e,t,n),s=n.getTensorList(r.id);return[Object(a.ff)(s.size(),"int32")]}case"TensorListResize":{const r=Object(o.d)("tensorListId",e,t,n),a=Object(o.d)("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function v(e,t,n){const[r,a]=Object(o.d)("fusedOps",e,t,n),s="biasadd"===r,i=!s,c="prelu"===a,u="fusedbatchnorm"===r,l=Object(o.d)("numArgs",e,t,n);if(s){if(c&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!c&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const d=Object(o.d)("strides",e,t,n),h=Object(o.c)(e,t,n),p=Object(o.d)("dataFormat",e,t,n).toUpperCase(),f=Object(o.d)("dilations",e,t,n);let[m,g]=Object(o.d)("args",e,t,n);i&&(g=m,m=void 0);return{stride:d,pad:h,dataFormat:p,dilations:f,biasArg:m,preluArg:g,activationFunc:a,leakyreluAlpha:Object(o.d)("leakyreluAlpha",e,t,n)}}const x=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(e.op){case"Conv1D":{const r=Object(o.d)("stride",e,t,n),s=Object(o.d)("pad",e,t,n),i=Object(o.d)("dataFormat",e,t,n).toUpperCase(),c=Object(o.d)("dilation",e,t,n);return[a.conv1d(Object(o.d)("x",e,t,n),Object(o.d)("filter",e,t,n),r,s,i,c)]}case"Conv2D":{const r=Object(o.d)("strides",e,t,n),s=Object(o.c)(e,t,n),i=Object(o.d)("dataFormat",e,t,n).toUpperCase(),c=Object(o.d)("dilations",e,t,n);return[a.conv2d(Object(o.d)("x",e,t,n),Object(o.d)("filter",e,t,n),[r[1],r[2]],s,i,[c[1],c[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:i,dilations:c,biasArg:u,preluArg:l,activationFunc:d,leakyreluAlpha:h}=v(e,t,n);return[a.fused.conv2d({x:Object(o.d)("x",e,t,n),filter:Object(o.d)("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:i,dilations:[c[1],c[2]],bias:u,activation:d,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:i,dilations:c,biasArg:u,preluArg:l,activationFunc:d,leakyreluAlpha:h}=v(e,t,n);return[a.fused.depthwiseConv2d({x:Object(o.d)("x",e,t,n),filter:Object(o.d)("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:i,dilations:[c[1],c[2]],bias:u,activation:d,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Object(o.d)("outputShape",e,t,n),s=Object(o.d)("strides",e,t,n),i=Object(o.c)(e,t,n);return[a.conv2dTranspose(Object(o.d)("x",e,t,n),Object(o.d)("filter",e,t,n),r,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Object(o.d)("strides",e,t,n),s=Object(o.c)(e,t,n),i=Object(o.d)("dilations",e,t,n),c=Object(o.d)("dataFormat",e,t,n).toUpperCase();return[a.depthwiseConv2d(Object(o.d)("input",e,t,n),Object(o.d)("filter",e,t,n),[r[1],r[2]],s,c,[i[1],i[2]])]}case"Conv3D":{const r=Object(o.d)("strides",e,t,n),s=Object(o.d)("pad",e,t,n),i=Object(o.d)("dataFormat",e,t,n).toUpperCase(),c=Object(o.d)("dilations",e,t,n);return[a.conv3d(Object(o.d)("x",e,t,n),Object(o.d)("filter",e,t,n),[r[1],r[2],r[3]],s,i,[c[1],c[2],c[3]])]}case"AvgPool":{const r=Object(o.d)("strides",e,t,n),s=Object(o.d)("pad",e,t,n),i=Object(o.d)("kernelSize",e,t,n);return[a.avgPool(Object(o.d)("x",e,t,n),[i[1],i[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=Object(o.d)("strides",e,t,n),s=Object(o.d)("pad",e,t,n),i=Object(o.d)("kernelSize",e,t,n);return[a.maxPool(Object(o.d)("x",e,t,n),[i[1],i[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=Object(o.d)("strides",e,t,n),s=Object(o.d)("pad",e,t,n),i=Object(o.d)("kernelSize",e,t,n),c=Object(o.d)("includeBatchInIndex",e,t,n),{result:u,indexes:l}=a.maxPoolWithArgmax(Object(o.d)("x",e,t,n),[i[1],i[2]],[r[1],r[2]],s,c);return[u,l]}case"AvgPool3D":{const r=Object(o.d)("strides",e,t,n),s=Object(o.d)("pad",e,t,n),i=Object(o.d)("kernelSize",e,t,n);return[a.avgPool3d(Object(o.d)("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=Object(o.d)("strides",e,t,n),s=Object(o.d)("pad",e,t,n),i=Object(o.d)("kernelSize",e,t,n);return[a.maxPool3d(Object(o.d)("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=Object(o.d)("strides",e,t,n),s=Object(o.d)("pad",e,t,n),i=Object(o.d)("dilations",e,t,n),c=r[1],u=r[2],l=i[1],d=i[2];return[a.dilation2d(Object(o.d)("x",e,t,n),Object(o.d)("filter",e,t,n),[c,u],s,[l,d],"NHWC")]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},w=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(e.op){case"Fill":{const r=Object(o.d)("shape",e,t,n),s=Object(o.d)("dtype",e,t,n),i=Object(o.d)("value",e,t,n);return[a.fill(r,i,s)]}case"LinSpace":{const r=Object(o.d)("start",e,t,n),s=Object(o.d)("stop",e,t,n),i=Object(o.d)("num",e,t,n);return[a.linspace(r,s,i)]}case"Multinomial":{const r=Object(o.d)("logits",e,t,n),s=Object(o.d)("numSamples",e,t,n),i=Object(o.d)("seed",e,t,n);return[a.multinomial(r,s,i)]}case"OneHot":{const r=Object(o.d)("indices",e,t,n),s=Object(o.d)("depth",e,t,n),i=Object(o.d)("onValue",e,t,n),c=Object(o.d)("offValue",e,t,n),u=Object(o.d)("dtype",e,t,n);return[a.oneHot(r,s,i,c,u)]}case"Ones":return[a.ones(Object(o.d)("shape",e,t,n),Object(o.d)("dtype",e,t,n))];case"OnesLike":return[a.onesLike(Object(o.d)("x",e,t,n))];case"RandomStandardNormal":return[a.randomStandardNormal(Object(o.d)("shape",e,t,n),Object(o.d)("dtype",e,t,n),Object(o.d)("seed",e,t,n))];case"RandomUniform":return[a.randomUniform(Object(o.d)("shape",e,t,n),Object(o.d)("minval",e,t,n),Object(o.d)("maxval",e,t,n),Object(o.d)("dtype",e,t,n))];case"RandomUniformInt":return[a.randomUniformInt(Object(o.d)("shape",e,t,n),Object(o.d)("minval",e,t,n),Object(o.d)("maxval",e,t,n),Object(o.d)("seed",e,t,n))];case"Range":{const r=Object(o.d)("start",e,t,n),s=Object(o.d)("stop",e,t,n),i=Object(o.d)("step",e,t,n);return[a.range(r,s,i,Object(o.d)("dtype",e,t,n))]}case"TruncatedNormal":{const r=Object(o.d)("shape",e,t,n),s=Object(o.d)("mean",e,t,n),i=Object(o.d)("stdDev",e,t,n),c=Object(o.d)("seed",e,t,n);return[a.truncatedNormal(r,s,i,Object(o.d)("dtype",e,t,n),c)]}case"Zeros":return[a.zeros(Object(o.d)("shape",e,t,n),Object(o.d)("dtype",e,t,n))];case"ZerosLike":return[a.zerosLike(Object(o.d)("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function O(e,t,n){return{boxes:Object(o.d)("boxes",e,t,n),scores:Object(o.d)("scores",e,t,n),maxOutputSize:Object(o.d)("maxOutputSize",e,t,n),iouThreshold:Object(o.d)("iouThreshold",e,t,n),scoreThreshold:Object(o.d)("scoreThreshold",e,t,n),softNmsSigma:Object(o.d)("softNmsSigma",e,t,n)}}const k=async function(e,t,n,a){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:r;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:u}=O(e,t,n),l=await s.image.nonMaxSuppressionWithScoreAsync(r,a,o,i,c,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:c,scoreThreshold:u}=O(e,t,n),l=Object(o.d)("padToMaxOutputSize",e,t,n),d=await s.image.nonMaxSuppressionPaddedAsync(r,a,i,c,u,l);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=O(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,a,o,i,c)]}case"Where":{const r=s.cast(Object(o.d)("condition",e,t,n),"bool"),a=[await s.whereAsync(r)];return r.dispose(),a}case"ListDiff":return s.setdiff1dAsync(Object(o.d)("x",e,t,n),Object(o.d)("y",e,t,n));default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},S=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(e.op){case"LowerBound":{const r=Object(o.d)("sortedSequence",e,t,n),s=Object(o.d)("values",e,t,n);return[a.lowerBound(r,s)]}case"TopKV2":{const r=Object(o.d)("x",e,t,n),s=Object(o.d)("k",e,t,n),i=Object(o.d)("sorted",e,t,n),c=a.topk(r,s,i);return[c.values,c.indices]}case"UpperBound":{const r=Object(o.d)("sortedSequence",e,t,n),s=Object(o.d)("values",e,t,n);return[a.upperBound(r,s)]}case"Unique":{const r=Object(o.d)("x",e,t,n),s=a.unique(r);return[s.values,s.indices]}case"UniqueV2":{const r=Object(o.d)("x",e,t,n),s=Object(o.d)("axis",e,t,n),i=a.unique(r,s);return[i.values,i.indices]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},I=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Object(o.d)("default",e,t,n);return[Object(o.e)(e.name,t,n)||r];case"Placeholder":return[Object(o.e)(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const r=Object(o.d)("x",e,t,n);return[Object(o.a)(r)]}case"IdentityN":return Object(o.d)("x",e,t,n).map(e=>Object(o.a)(e));case"Snapshot":const s=Object(o.d)("x",e,t,n);return[Object(o.a)(s)];case"Shape":return[a.tensor1d(Object(o.d)("x",e,t,n).shape,"int32")];case"ShapeN":return Object(o.d)("x",e,t,n).map(e=>a.tensor1d(e.shape));case"Size":return[a.scalar(Object(o.d)("x",e,t,n).size,"int32")];case"Rank":return[a.scalar(Object(o.d)("x",e,t,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":const i=Object(o.d)("x",e,t,n),c=Object(o.d)("data",e,t,n),u=Object(o.d)("message",e,t,n),l=Object(o.d)("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let e=0;e<c.length;e++)console.log(Array.prototype.slice.call(c[e].dataSync()).slice(0,l));return[i];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};var N=n(17);class T{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Object(a.ff)(0),this.tensorMap=new Map,Object(a.ue)(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return N.a(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),Object(a.Ff)(()=>{const e=Object(a.Kf)(t),r=n.length,s=e.length;a.Mf.assert(r===s,()=>"The number of elements doesn't match, keys has "+"".concat(r," elements, the values has ").concat(s," ")+"elements.");for(let t=0;t<r;t++){const r=n[t],s=e[t];Object(a.ue)(s),this.tensorMap.set(r,s)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Object(a.Ff)(()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Object(a.wf)(e)})}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(e.dtype));if(t.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(t.dtype))}}const j=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=r.getHashTableHandleByName(e.name);if(null!=a)return[a];{const a=Object(o.d)("keyDType",e,t,n),s=Object(o.d)("valueDType",e,t,n),i=new T(a,s);return r.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const a=Object(o.d)("tableHandle",e,t,n,r),s=Object(o.d)("keys",e,t,n),i=Object(o.d)("values",e,t,n),c=r.getHashTableById(a.id);return[await c.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=Object(o.d)("tableHandle",e,t,n,r),s=Object(o.d)("keys",e,t,n),i=Object(o.d)("defaultValue",e,t,n),c=r.getHashTableById(a.id);return[await c.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=Object(o.d)("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},E=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(e.op){case"ResizeBilinear":{const r=Object(o.d)("images",e,t,n),s=Object(o.d)("size",e,t,n),i=Object(o.d)("alignCorners",e,t,n),c=Object(o.d)("halfPixelCenters",e,t,n);return[a.image.resizeBilinear(r,[s[0],s[1]],i,c)]}case"ResizeNearestNeighbor":{const r=Object(o.d)("images",e,t,n),s=Object(o.d)("size",e,t,n),i=Object(o.d)("alignCorners",e,t,n),c=Object(o.d)("halfPixelCenters",e,t,n);return[a.image.resizeNearestNeighbor(r,[s[0],s[1]],i,c)]}case"CropAndResize":{const r=Object(o.d)("image",e,t,n),s=Object(o.d)("boxes",e,t,n),i=Object(o.d)("boxInd",e,t,n),c=Object(o.d)("cropSize",e,t,n),u=Object(o.d)("method",e,t,n),l=Object(o.d)("extrapolationValue",e,t,n);return[a.image.cropAndResize(r,s,i,c,u,l)]}case"ImageProjectiveTransformV3":{const r=Object(o.d)("images",e,t,n),s=Object(o.d)("transforms",e,t,n),i=Object(o.d)("outputShape",e,t,n),c=Object(o.d)("fillValue",e,t,n),u=Object(o.d)("interpolation",e,t,n),l=Object(o.d)("fillMode",e,t,n);return[a.image.transform(r,s,u.toLowerCase(),l.toLowerCase(),c,i)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},C=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(e.op){case"Equal":return[a.equal(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];case"NotEqual":return[a.notEqual(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];case"Greater":return[a.greater(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];case"GreaterEqual":return[a.greaterEqual(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];case"Less":return[a.less(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];case"LessEqual":return[a.lessEqual(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];case"LogicalAnd":return[a.logicalAnd(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];case"LogicalNot":return[a.logicalNot(Object(o.d)("a",e,t,n))];case"LogicalOr":return[a.logicalOr(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];case"Select":case"SelectV2":return[a.where(Object(o.d)("condition",e,t,n),Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];case"BitwiseAnd":return[a.bitwiseAnd(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},A=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(Object(o.d)("a",e,t,n),Object(o.d)("b",e,t,n),Object(o.d)("transposeA",e,t,n),Object(o.d)("transposeB",e,t,n))];case"Einsum":return[a.einsum(Object(o.d)("equation",e,t,n),...Object(o.d)("tensors",e,t,n))];case"Transpose":return[a.transpose(Object(o.d)("x",e,t,n),Object(o.d)("perm",e,t,n))];case"_FusedMatMul":const[r,s]=Object(o.d)("fusedOps",e,t,n),i="biasadd"===r,c="prelu"===s,u=Object(o.d)("numArgs",e,t,n),l=Object(o.d)("leakyreluAlpha",e,t,n);if(i){if(c&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!c&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[d,h]=Object(o.d)("args",e,t,n);return[a.fused.matMul({a:Object(o.d)("a",e,t,n),b:Object(o.d)("b",e,t,n),transposeA:Object(o.d)("transposeA",e,t,n),transposeB:Object(o.d)("transposeB",e,t,n),bias:d,activation:s,preluActivationWeights:h,leakyreluAlpha:l})];case"MatrixBandPart":return[a.linalg.bandPart(Object(o.d)("a",e,t,n),Object(o.d)("numLower",e,t,n),Object(o.d)("numUpper",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},R=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(e.op){case"EuclideanNorm":return[a.euclideanNorm(Object(o.d)("x",e,t,n),Object(o.d)("axis",e,t,n),Object(o.d)("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(Object(o.d)("x",e,t,n),Object(o.d)("mean",e,t,n),Object(o.d)("variance",e,t,n),Object(o.d)("offset",e,t,n),Object(o.d)("scale",e,t,n),Object(o.d)("epsilon",e,t,n))];case"LRN":return[a.localResponseNormalization(Object(o.d)("x",e,t,n),Object(o.d)("radius",e,t,n),Object(o.d)("bias",e,t,n),Object(o.d)("alpha",e,t,n),Object(o.d)("beta",e,t,n))];case"Softmax":return[a.softmax(Object(o.d)("x",e,t,n))];case"LogSoftmax":return[a.logSoftmax(Object(o.d)("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},F=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(e.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:s}=a.raggedGather(Object(o.d)("paramsNestedSplits",e,t,n),Object(o.d)("paramsDenseValues",e,t,n),Object(o.d)("indices",e,t,n),Object(o.d)("outputRaggedRank",e,t,n));return r.concat(s)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:s}=a.raggedRange(Object(o.d)("starts",e,t,n),Object(o.d)("limits",e,t,n),Object(o.d)("splits",e,t,n));return[r,s]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor(Object(o.d)("shape",e,t,n),Object(o.d)("values",e,t,n),Object(o.d)("defaultValue",e,t,n),Object(o.d)("rowPartitionTensors",e,t,n),Object(o.d)("rowPartitionTypes",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},_=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(e.op){case"Max":{const r=Object(o.d)("axis",e,t,n),s=Object(o.d)("keepDims",e,t,n);return[a.max(Object(o.d)("x",e,t,n),r,s)]}case"Mean":{const r=Object(o.d)("axis",e,t,n),s=Object(o.d)("keepDims",e,t,n);return[a.mean(Object(o.d)("x",e,t,n),r,s)]}case"Min":{const r=Object(o.d)("axis",e,t,n),s=Object(o.d)("keepDims",e,t,n);return[a.min(Object(o.d)("x",e,t,n),r,s)]}case"Sum":{const r=Object(o.d)("axis",e,t,n),s=Object(o.d)("keepDims",e,t,n);return[a.sum(Object(o.d)("x",e,t,n),r,s)]}case"All":{const r=Object(o.d)("axis",e,t,n),s=Object(o.d)("keepDims",e,t,n);return[a.all(Object(o.d)("x",e,t,n),r,s)]}case"Any":{const r=Object(o.d)("axis",e,t,n),s=Object(o.d)("keepDims",e,t,n);return[a.any(Object(o.d)("x",e,t,n),r,s)]}case"ArgMax":{const r=Object(o.d)("axis",e,t,n);return[a.argMax(Object(o.d)("x",e,t,n),r)]}case"ArgMin":{const r=Object(o.d)("axis",e,t,n);return[a.argMin(Object(o.d)("x",e,t,n),r)]}case"Prod":{const r=Object(o.d)("axis",e,t,n),s=Object(o.d)("keepDims",e,t,n);return[a.prod(Object(o.d)("x",e,t,n),r,s)]}case"Cumprod":{const r=Object(o.d)("axis",e,t,n),s=Object(o.d)("exclusive",e,t,n),i=Object(o.d)("reverse",e,t,n);return[a.cumprod(Object(o.d)("x",e,t,n),r,s,i)]}case"Cumsum":{const r=Object(o.d)("axis",e,t,n),s=Object(o.d)("exclusive",e,t,n),i=Object(o.d)("reverse",e,t,n);return[a.cumsum(Object(o.d)("x",e,t,n),r,s,i)]}case"Bincount":const r=Object(o.d)("x",e,t,n),s=Object(o.d)("weights",e,t,n),i=Object(o.d)("size",e,t,n);return[a.bincount(r,s,i)];case"DenseBincount":{const r=Object(o.d)("x",e,t,n),s=Object(o.d)("weights",e,t,n),i=Object(o.d)("size",e,t,n),c=Object(o.d)("binaryOutput",e,t,n);return[a.denseBincount(r,s,i,c)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},M=function(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(e.op){case"ConcatV2":case"Concat":{const r=Object(o.d)("n",e,t,n),a=Object(o.d)("axis",e,t,n);let i=Object(o.d)("tensors",e,t,n);return i=i.slice(0,r),[s.concat(i,a)]}case"Gather":{const r=Object(o.d)("x",e,t,n),a=Object(o.d)("indices",e,t,n);return[s.gather(r,s.cast(a,"int32"),0)]}case"GatherV2":{const r=Object(o.d)("axis",e,t,n),a=Object(o.d)("batchDims",e,t,n),i=Object(o.d)("x",e,t,n),c=Object(o.d)("indices",e,t,n);return[s.gather(i,s.cast(c,"int32"),r,a)]}case"Reverse":{const r=Object(o.d)("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const i=Object(o.d)("x",e,t,n);return[s.reverse(i,a)]}case"ReverseV2":{const r=Object(o.d)("axis",e,t,n),a=Object(o.d)("x",e,t,n);return[s.reverse(a,r)]}case"Slice":{const r=Object(o.d)("begin",e,t,n),a=Object(o.d)("size",e,t,n);return[s.slice(Object(o.d)("x",e,t,n),r,a)]}case"StridedSlice":{const r=Object(o.d)("begin",e,t,n),a=Object(o.d)("end",e,t,n),i=Object(o.d)("strides",e,t,n),c=Object(o.d)("beginMask",e,t,n),u=Object(o.d)("endMask",e,t,n),l=Object(o.d)("ellipsisMask",e,t,n),d=Object(o.d)("newAxisMask",e,t,n),h=Object(o.d)("shrinkAxisMask",e,t,n),p=Object(o.d)("x",e,t,n);return[s.stridedSlice(p,r,a,i,c,u,l,d,h)]}case"Pack":return Object(a.Ff)(()=>{const r=Object(o.d)("axis",e,t,n),i=Object(o.d)("tensors",e,t,n),c=i[0].shape,u=s.squeeze(i[0]).shape,l=i.map(e=>{const t=a.Mf.arraysEqual(e.shape,c);if(!t&&!a.Mf.arraysEqual(s.squeeze(e).shape,u))throw new Error("the input tensors shape does not match");return t?e:s.reshape(e,c)});return[s.stack(l,r)]});case"Unpack":{const r=Object(o.d)("axis",e,t,n),a=Object(o.d)("tensor",e,t,n);return s.unstack(a,r)}case"Tile":{const r=Object(o.d)("reps",e,t,n);return[s.tile(Object(o.d)("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Object(o.d)("axis",e,t,n),a=Object(o.d)("numOrSizeSplits",e,t,n),i=Object(o.d)("x",e,t,n);return s.split(i,a,r)}case"ScatterNd":{const r=Object(o.d)("indices",e,t,n),a=Object(o.d)("values",e,t,n),i=Object(o.d)("shape",e,t,n);return[s.scatterND(r,a,i)]}case"GatherNd":{const r=Object(o.d)("x",e,t,n),a=Object(o.d)("indices",e,t,n);return[s.gatherND(r,a)]}case"SparseToDense":{const r=Object(o.d)("sparseIndices",e,t,n),a=Object(o.d)("outputShape",e,t,n),i=Object(o.d)("sparseValues",e,t,n),c=Object(o.d)("defaultValue",e,t,n);return[s.sparseToDense(r,i,a,i.dtype===c.dtype?c:s.cast(c,i.dtype))]}case"TensorScatterUpdate":{const r=Object(o.d)("indices",e,t,n),a=Object(o.d)("values",e,t,n),i=Object(o.d)("tensor",e,t,n);return[s.tensorScatterUpdate(i,r,a)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},D=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:s,emptyRowIndicator:i,reverseIndexMap:c}=a.sparse.sparseFillEmptyRows(Object(o.d)("indices",e,t,n),Object(o.d)("values",e,t,n),Object(o.d)("denseShape",e,t,n),Object(o.d)("defaultValue",e,t,n));return[r,s,i,c]}case"SparseReshape":{const{outputIndices:r,outputShape:s}=a.sparse.sparseReshape(Object(o.d)("inputIndices",e,t,n),Object(o.d)("inputShape",e,t,n),Object(o.d)("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(Object(o.d)("data",e,t,n),Object(o.d)("indices",e,t,n),Object(o.d)("segmentIds",e,t,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(Object(o.d)("data",e,t,n),Object(o.d)("indices",e,t,n),Object(o.d)("segmentIds",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},L=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(e.op){case"FFT":return[a.fft(Object(o.d)("x",e,t,n))];case"IFFT":return[a.ifft(Object(o.d)("x",e,t,n))];case"RFFT":return[a.rfft(Object(o.d)("x",e,t,n))];case"IRFFT":return[a.irfft(Object(o.d)("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},z=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(e.op){case"StaticRegexReplace":return[a.string.staticRegexReplace(Object(o.d)("input",e,t,n),Object(o.d)("pattern",e,t,n),Object(o.d)("rewrite",e,t,n),Object(o.d)("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:r,nGramsSplits:s}=a.string.stringNGrams(Object(o.d)("data",e,t,n),Object(o.d)("dataSplits",e,t,n),Object(o.d)("separator",e,t,n),Object(o.d)("nGramWidths",e,t,n),Object(o.d)("leftPad",e,t,n),Object(o.d)("rightPad",e,t,n),Object(o.d)("padWidth",e,t,n),Object(o.d)("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{const{indices:r,values:s,shape:i}=a.string.stringSplit(Object(o.d)("input",e,t,n),Object(o.d)("delimiter",e,t,n),Object(o.d)("skipEmpty",e,t,n));return[r,s,i]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(Object(o.d)("input",e,t,n),Object(o.d)("numBuckets",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},P=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(e.op){case"Cast":return[a.cast(Object(o.d)("x",e,t,n),Object(o.d)("dtype",e,t,n))];case"ExpandDims":{const r=Object(o.d)("axis",e,t,n);return[a.expandDims(Object(o.d)("x",e,t,n),r)]}case"Squeeze":{const r=Object(o.d)("axis",e,t,n);return[a.squeeze(Object(o.d)("x",e,t,n),r)]}case"Reshape":return[a.reshape(Object(o.d)("x",e,t,n),Object(o.d)("shape",e,t,n))];case"EnsureShape":return[a.ensureShape(Object(o.d)("x",e,t,n),Object(o.d)("shape",e,t,n))];case"MirrorPad":return[a.mirrorPad(Object(o.d)("x",e,t,n),Object(o.d)("padding",e,t,n),Object(o.d)("mode",e,t,n))];case"PadV2":case"Pad":return[a.pad(Object(o.d)("x",e,t,n),Object(o.d)("padding",e,t,n),Object(o.d)("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Object(o.d)("blockShape",e,t,n),s=Object(o.d)("paddings",e,t,n);return[a.spaceToBatchND(Object(o.d)("x",e,t,n),r,s)]}case"BatchToSpaceND":{const r=Object(o.d)("blockShape",e,t,n),s=Object(o.d)("crops",e,t,n);return[a.batchToSpaceND(Object(o.d)("x",e,t,n),r,s)]}case"DepthToSpace":{const r=Object(o.d)("blockSize",e,t,n),s=Object(o.d)("dataFormat",e,t,n).toUpperCase();return[a.depthToSpace(Object(o.d)("x",e,t,n),r,s)]}case"BroadcastTo":return[a.broadcastTo(Object(o.d)("x",e,t,n),Object(o.d)("shape",e,t,n))];case"BroadcastArgs":return[a.broadcastArgs(Object(o.d)("s0",e,t,n),Object(o.d)("s1",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function B(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:a.Ff;const o=((e,t,n)=>{switch(e.category){case"arithmetic":return s(()=>l(e,t,n));case"basic_math":return s(()=>d(e,t,n));case"control":return y(e,t,n);case"convolution":return s(()=>x(e,t,n));case"creation":return s(()=>w(e,t,n));case"dynamic":return k(e,t,n);case"evaluation":return s(()=>S(e,t,n));case"image":return s(()=>E(e,t,n));case"graph":return s(()=>I(e,t,n));case"logical":return s(()=>C(e,t,n));case"matrices":return s(()=>A(e,t,n));case"normalization":return s(()=>R(e,t,n));case"ragged":return s(()=>F(e,t,n));case"reduction":return s(()=>_(e,t,n));case"slice_join":return s(()=>M(e,t,n));case"sparse":return s(()=>D(e,t,n));case"spectral":return s(()=>L(e,t,n));case"string":return s(()=>z(e,t,n));case"transformation":return s(()=>P(e,t,n));case"hash_table":return j(e,t,n,r);case"custom":const a=Object(c.a)(e.op);if(a&&a.customExecutor)return a.customExecutor(new i(e,t,n));throw TypeError("Custom op ".concat(e.op," is not registered."));default:throw TypeError("Unknown op '".concat(e.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(e,t,n);return a.Mf.isPromise(o)?o.then(e=>[].concat(e)):[].concat(o)}class W{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":"".concat(e.frameName,"-").concat(e.iterationId)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function U(e,t,n,r){const a=new Set,s=[];let i=null,c=null;const u=new Set,l=new Set(Object.keys(e).map(e=>Object(o.g)(e)[0]));r=r||[];const d=new Set(r.map(e=>Object(o.g)(e.name)[0])),h=[...t];for(;h.length>0;){const e=h.pop();(X(e)||Y(e)||Q(e))&&null==i&&(i=e,c=i.children.map(e=>e.name).filter(e=>a.has(e))),a.add(e.name),null==n[e.name]&&(l.has(e.name)||d.has(e.name)||(0!==e.inputs.length?e.inputs.forEach(e=>{u.has(e.name)||(u.add(e.name),h.push(e))}):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:c}}function V(e,t){const{usedNodes:n,inputs:r}=t,a=Object.keys(r).map(e=>Object(o.g)(e)[0]).map(t=>e.nodes[t]),s=e.initNodes||[],i=e=>n.has("string"===typeof e?e:e.name);function c(e){return[...new Map(e.map(e=>[e.name,e])).values()]}const u=c([...a,...e.weights,...s]).filter(i),l=c([...u,...Object.values(e.nodes)]).filter(i),d=new Map(l.map(e=>[e.name,e])),h={};for(const o of l){h[o.name]=h[o.name]||0;for(const e of o.children)i(e)||(h[e.name]=Number.POSITIVE_INFINITY),h[e.name]=(h[e.name]||0)+1}const p=Object.entries(h).filter(e=>{let[,t]=e;return 0===t}).map(e=>{let[t]=e;return t}),f=[...p];for(;p.length>0;){const e=p.pop(),t=d.get(e);for(const n of t.children.filter(i))0===--h[n.name]&&(f.push(n.name),p.push(n.name))}const m=function(e,t){const n=new Map(e.map(e=>[e.name,e])),r=t.map(e=>e.name),a=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const s of t.children)n.has(s.name)&&!a.has(s.name)&&(a.add(s.name),r.push(s.name))}return e.filter(e=>a.has(e.name))}(f.map(e=>d.get(e)),u);return function(e,t){const n=new Map(e.map((e,t)=>[e.name,t])),r=new Set(t.map(e=>e.name)),a=e=>r.has("string"===typeof e?e:e.name),s=new Set(e.map(e=>e.name)),o=e=>s.has("string"===typeof e?e:e.name);for(const i of e){for(const e of i.children.filter(o)){if(!n.has(e.name))throw new G("Child ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(i.name)>n.get(e.name))throw new G("Node ".concat(i.name," is scheduled to run after its child ").concat(e.name,"."))}if(!a(i))for(const e of i.inputs){if(!n.has(e.name))throw new G("Input ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(e.name)>n.get(i.name))throw new G("Node ".concat(i.name," is scheduled to run before its input ").concat(e.name,"."))}}}(m,u),m}class G extends Error{constructor(e){super("NodesExecutionOrderError: ".concat(e))}}const H=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),q=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),K=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function X(e){return H.has(e.op)}function Y(e){return q.has(e.op)}function Q(e){return K.has(e.op)}class Z{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?"".concat(t,":").concat(e.defaultOutput):t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new Z(e.functions[t],this)})}getCompilationKey(e,t){const n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=U(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error("This execution contains the node '".concat(a.name,"', which has ")+"the dynamic op '".concat(a.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(s,"]"));if(r.length>0){const n=t.map(e=>e.name),a=Object.keys(e);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(a,"]. Missing the following inputs: [").concat(r,"]"))}const o=V(this.graph,n),i=function(e){const t=new Map(e.map((e,t)=>[e.name,t])),n=Number.MAX_SAFE_INTEGER,r=e.map((e,t)=>X(e)?n:t),a=e=>{const n=r[t.get(e.name)];return null==n?-1:n},s=e.map((e,t)=>e.children.map(a).reduce((e,t)=>Math.max(e,t),r[t])),o=new Map;for(let i=0;i<e.length;++i){const t=s[i];if(t===n)continue;const r=e[i],a=e[t];o.has(a.name)||o.set(a.name,[]),o.get(a.name).push(r)}return o}(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return Object(a.ue)(t),t}cloneTensorList(e){if(!e)return null;return e.map(e=>this.cloneAndKeepTensor(e))}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]}))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map(e=>this.graph.nodes[Object(o.g)(e)[0]]),s=t.map(e=>Object(o.g)(e)[0]),i=new Set(s);let c=s.map(e=>this.graph.nodes[e]);0===c.length&&(c=this._outputs);const u=this.getCompilationKey(r,c);let l=this.compiledMap.get(u);null==l&&(l=this.compile(e,c),this.compiledMap.set(u,l));try{this.keepIntermediateTensors=Object(a.he)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}const d={},h={};return Object(a.Ff)(()=>{const n=new W(this.weightMap,d,h,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(t=>{const[a,s]=Object(o.g)(t,n),i=[];i[s]=e[t],r[a]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[a]=this.cloneTensorList(i))});const s=this.getFrozenTensorIds(r),{orderedNodes:c,nodeLiveUntilMap:u}=l;for(const e of c){if(r[e.name])continue;const t=B(e,r,n,this._resourceManager);if(a.Mf.isPromise(t))throw new Error("The execution of the op '".concat(e.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,s,i,u.get(e.name))}return null==this.parent&&n.dispose(s),t.map(e=>Object(o.e)(e,r,n))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){if(!X(t)&&!s.has(e)){for(const r of n[e])null!=r&&(i[r.id]=(i[r.id]||0)+t.children.length);for(const e of t.inputs){if(X(e))continue;const t=Object(o.f)(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||a.has(e.id))continue;const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,a,s){function i(e){return X(e)||a.has(e.name)}if(!X(e)&&null!=s)for(const c of s){if(i(c))continue;const e=Object(o.f)(c.name,t,n);for(const t of e)!t||t.kept||r.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Object(a.he)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}const i=new W(this.weightMap,r,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const c=await this.executeWithControlFlow(e,i,t,n),u=t.map(e=>Object(o.e)(e,c,i)),l=u.map(e=>e.id),d=Object.keys(e).map(t=>e[t].id),h=new Set([...l,...d,...this.weightIds]);return Object.values(c).forEach(e=>{e.forEach(e=>{!e||e.isDisposed||h.has(e.id)||e.dispose()})}),null==this.parent&&i.dispose(h),u}async executeFunctionAsync(e,t,n){const r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map(e=>this.graph.nodes[Object(o.g)(e)[0]]),i=n.map(e=>Object(o.g)(e)[0]),c=new Set(i);let u=i.map(e=>this.graph.nodes[e]);0===u.length&&(u=this._outputs);const{usedNodes:l,missingInputs:d,dynamicNode:h,syncInputs:p}=U(e,u,this.weightMap,this._initNodes),f=[...s,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),m=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=Object(o.g)(t),a=[];a[r]=e[t],m[n]=a});const g={},b=this.getFrozenTensorIds(m),y={};for(;f.length>0;){const e=this.processStack(s,f,t,m,y,b,c,g,l);await Promise.all(e)}null!=h||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const v=u.filter(e=>!X(e)&&!Object(o.e)(e.name,m,t)).map(e=>e.name);if(v.length>0){let e="";throw null!=h&&(e="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(p,"]")),new Error("Cannot compute the outputs [".concat(v,"] from the provided ")+"inputs [".concat(a,"]. Consider providing the following inputs: ")+"[".concat(d,"]. ").concat(e))}return m}processStack(e,t,n,r,s,i,c,u,l){const d=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let h="";if("Enter"===e.node.op&&Object(o.d)("isConstant",e.node,r,n)&&([h]=Object(o.b)(e.node.name,n)),null==r[e.node.name]){const p=B(e.node,r,n,this._resourceManager);h||([h]=Object(o.b)(e.node.name,n));const f=n.currentContext;a.Mf.isPromise(p)?d.push(p.then(a=>(r[h]=a,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(a)),n.currentContext=f,this.checkTensorForDisposal(h,e.node,r,n,i,c,u),this.processChildNodes(e.node,t,n,r,s,l),a))):(r[h]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(p)),this.checkTensorForDisposal(h,e.node,r,n,i,c,u),this.processChildNodes(e.node,t,n,r,s,l))}else this.processChildNodes(e.node,t,n,r,s,l)}return d}processChildNodes(e,t,n,r,a,s){e.children.forEach(e=>{const[i]=Object(o.b)(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!Object(o.e)(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!Object(o.e)(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const n=e[t],[r]=Object(o.g)(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t);a.Mf.assert(t,()=>"The shape of dict['".concat(s.name,"'] provided in ")+"model.execute(dict) must be [".concat(e,"], but was ")+"[".concat(n.shape,"]"))}s.attrParams.dtype&&s.attrParams.dtype.value&&a.Mf.assert(n.dtype===s.attrParams.dtype.value,()=>"The dtype of dict['".concat(s.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(s.attrParams.dtype.value,", but was ").concat(n.dtype))})}mapInputs(e){var t,n;const r={};for(const a in e){const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[a];null!=s?r[s.name]=e[a]:r[a]=e[a]}return r}checkInputs(e){const t=Object.keys(e).filter(e=>{const[t]=Object(o.g)(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(t,"] that are not part of graph"))}mapOutputs(e){return e.map(e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e},{})}checkOutputs(e){e.forEach(e=>{const[t]=Object(o.g)(e);if(!this.graph.nodes[t])throw new Error("The output '".concat(e,"' is not found in the graph"))})}}class J{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}var $=n(29);class ee{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:a.te;this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new J}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one (".concat(t.length,") load handlers for ")+"URL '".concat([e],"'"));this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return a.Mf.isPromise(e)?e.then(e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await Object($.f)(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=r,this.version="".concat(n.versions.producer,".").concat(n.versions.minConsumer),this.executor=new Z(s.a.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=s.a.Instance.transformGraph(e.modelInitializer);this.initializer=new Z(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Error("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof a.kd?[e]:e,n={};return t.forEach((e,t)=>n[this.structuredOutputKeys[t]]=e),n}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof a.kd)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error("Input tensor count mismatch, the graph model has ".concat(this.inputNodes.length-n," non-resource placeholders, while there are ").concat(e.length," input tensors provided."));let r=0;return this.inputNodes.reduce((t,n)=>{var a,s,o;const i=null===(o=null===(s=null===(a=this.signature)||void 0===a?void 0:a.inputs)||void 0===s?void 0:s[n])||void 0===o?void 0:o.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[r++],t},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const a=t[n[r]];this.resourceIdToCapturedInput[a.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Object(a.ce)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function te(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:a.te;if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"===typeof e&&(e=ne(e));const r=new ee(e,t,n);return await r.load(),r}function ne(e){return e.endsWith("/")||(e+="/"),"".concat(e).concat("model.json").concat("?tfjs-format=file")}const re="4.17.0"},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(3),s=n(8),o=n(20),i=n(4),c=n(7);const u=Object(i.b)({conv2DBackpropInput_:function(e,t,n,i,u){let l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0;s.c(e.length===t.rank,()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match"));let h=e,p=t,f=!1;3===t.rank&&(f=!0,p=Object(c.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),h=[1,e[0],e[1],e[2]]),s.c(4===h.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(h.length,".")),s.c(4===p.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(p.rank)),s.c(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank));const m="NHWC"===l?h[3]:h[1],g="NHWC"===l?p.shape[3]:p.shape[1];s.c(m===n.shape[2],()=>"Error in conv2dDerInput: depth of input (".concat(m,") must ")+"match input depth for filter ".concat(n.shape[2],".")),s.c(g===n.shape[3],()=>"Error in conv2dDerInput: depth of output (".concat(g,") must ")+"match output depth for filter ".concat(n.shape[3],".")),o.a("conv2dDerInput",u,d);const b={dy:p,filter:n},y={strides:i,pad:u,dataFormat:l,dimRoundingMode:d,inputShape:h},v=r.a.runKernel(a.G,b,y);return f?Object(c.a)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return s}));var r=n(5);n(2),n(10),n(8);function a(){return 32===r.a.backend.floatPrecision()?.001:.1}function s(e,t,n){if(null==n&&(n=a()),!o(e,t,n))throw new Error("Numbers differ: actual === ".concat(e,", expected === ").concat(t));"undefined"!==typeof expect&&expect().nothing()}function o(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(3),s=n(8),o=n(20),i=n(4),c=n(7);const u=Object(i.b)({conv2DBackpropFilter_:function(e,t,n,i,u){let l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0,h=e;3===e.rank&&(h=Object(c.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=Object(c.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s.c(4===h.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(h.shape,".")),s.c(4===p.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(p.shape,".")),s.c(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,"."));const f="NHWC"===l?h.shape[3]:h.shape[1],m="NHWC"===l?p.shape[3]:p.shape[1];s.c(f===n[2],()=>"Error in conv2dDerFilter: depth of input ".concat(f,") must ")+"match input depth in filter (".concat(n[2],".")),s.c(m===n[3],()=>"Error in conv2dDerFilter: depth of dy (".concat(m,") must ")+"match output depth for filter (".concat(n[3],").")),o.a("conv2dDerFilter",u,d);const g={x:h,dy:p},b={strides:i,pad:u,dataFormat:l,dimRoundingMode:d,filterShape:n};return r.a.runKernel(a.F,g,b)}})},function(e,t,n){"use strict";(function(e){n(5);var t=n(142),r=n(18);const a=Object(r.b)();a.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),a.registerFlag("IS_BROWSER",()=>t.isBrowser()),a.registerFlag("IS_NODE",()=>"undefined"!==typeof e&&"undefined"!==typeof e.versions&&"undefined"!==typeof e.versions.node),a.registerFlag("IS_CHROME",()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),a.registerFlag("IS_SAFARI",()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),a.registerFlag("PROD",()=>!1),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>a.getBool("DEBUG")),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),a.registerFlag("IS_TEST",()=>!1),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>a.getBool("DEBUG")),a.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),a.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),a.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1)}).call(this,n(141))},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}readToGPU(e,t){return s("readToGPU")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,r,a){return s("move")}createTensorFromGPUData(e,t,n){return s("createTensorFromGPUData")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error("'".concat(e,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({tanh_:function(e){const t={x:Object(s.a)(e,"x","tanh","float32")};return r.a.runKernel(a.id,t)}})},function(e,t,n){"use strict";n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return a}));const r=1.7580993408473768,a=1.0507009873554805},function(e,t,n){"use strict";n.d(t,"hc",(function(){return ae.a})),n.d(t,"kd",(function(){return P.a})),n.d(t,"ld",(function(){return P.b})),n.d(t,"zf",(function(){return se.c})),n.d(t,"Lf",(function(){return se.d})),n.d(t,"wd",(function(){return oe.b})),n.d(t,"xd",(function(){return oe.e})),n.d(t,"yd",(function(){return oe.g})),n.d(t,"zd",(function(){return oe.h})),n.d(t,"Ad",(function(){return oe.i})),n.d(t,"Bd",(function(){return oe.p})),n.d(t,"Cd",(function(){return oe.q})),n.d(t,"Fd",(function(){return oe.t})),n.d(t,"Gd",(function(){return oe.u})),n.d(t,"Hd",(function(){return oe.v})),n.d(t,"Id",(function(){return oe.B})),n.d(t,"Ld",(function(){return oe.C})),n.d(t,"Md",(function(){return oe.D})),n.d(t,"Nd",(function(){return oe.F})),n.d(t,"Od",(function(){return oe.G})),n.d(t,"Pd",(function(){return oe.I})),n.d(t,"Qd",(function(){return oe.J})),n.d(t,"Rd",(function(){return oe.K})),n.d(t,"Sd",(function(){return oe.L})),n.d(t,"Td",(function(){return oe.M})),n.d(t,"Ud",(function(){return oe.N})),n.d(t,"Vd",(function(){return oe.O})),n.d(t,"Wd",(function(){return oe.P})),n.d(t,"Xd",(function(){return oe.Q})),n.d(t,"Yd",(function(){return oe.R})),n.d(t,"Zd",(function(){return oe.X})),n.d(t,"ae",(function(){return oe.Z})),n.d(t,"de",(function(){return oe.cb})),n.d(t,"fe",(function(){return oe.hb})),n.d(t,"ie",(function(){return oe.kb})),n.d(t,"je",(function(){return oe.nb})),n.d(t,"ke",(function(){return oe.ob})),n.d(t,"le",(function(){return oe.qb})),n.d(t,"me",(function(){return oe.sb})),n.d(t,"ne",(function(){return oe.tb})),n.d(t,"pe",(function(){return oe.wb})),n.d(t,"qe",(function(){return oe.yb})),n.d(t,"re",(function(){return oe.zb})),n.d(t,"we",(function(){return oe.Ib})),n.d(t,"ye",(function(){return oe.Ob})),n.d(t,"ze",(function(){return oe.Pb})),n.d(t,"Ae",(function(){return oe.Rb})),n.d(t,"Be",(function(){return oe.Sb})),n.d(t,"Ce",(function(){return oe.Tb})),n.d(t,"De",(function(){return oe.Zb})),n.d(t,"Ee",(function(){return oe.ac})),n.d(t,"Fe",(function(){return oe.bc})),n.d(t,"Ge",(function(){return oe.cc})),n.d(t,"He",(function(){return oe.ec})),n.d(t,"Ie",(function(){return oe.fc})),n.d(t,"Ke",(function(){return oe.hc})),n.d(t,"Le",(function(){return oe.ic})),n.d(t,"Me",(function(){return oe.lc})),n.d(t,"Ne",(function(){return oe.nc})),n.d(t,"Oe",(function(){return oe.qc})),n.d(t,"Qe",(function(){return oe.sc})),n.d(t,"Re",(function(){return oe.tc})),n.d(t,"Se",(function(){return oe.uc})),n.d(t,"Te",(function(){return oe.vc})),n.d(t,"Ue",(function(){return oe.yc})),n.d(t,"Ve",(function(){return oe.Ec})),n.d(t,"We",(function(){return oe.Fc})),n.d(t,"Xe",(function(){return oe.Nc})),n.d(t,"Ye",(function(){return oe.Pc})),n.d(t,"Ze",(function(){return oe.Rc})),n.d(t,"cf",(function(){return oe.Uc})),n.d(t,"df",(function(){return oe.Wc})),n.d(t,"ef",(function(){return oe.Xc})),n.d(t,"ff",(function(){return oe.fd})),n.d(t,"gf",(function(){return oe.id})),n.d(t,"hf",(function(){return oe.jd})),n.d(t,"kf",(function(){return oe.ld})),n.d(t,"lf",(function(){return oe.qd})),n.d(t,"mf",(function(){return oe.rd})),n.d(t,"nf",(function(){return oe.sd})),n.d(t,"of",(function(){return oe.td})),n.d(t,"pf",(function(){return oe.ud})),n.d(t,"rf",(function(){return oe.vd})),n.d(t,"sf",(function(){return oe.wd})),n.d(t,"tf",(function(){return oe.Bd})),n.d(t,"uf",(function(){return oe.Cd})),n.d(t,"vf",(function(){return oe.Fd})),n.d(t,"wf",(function(){return oe.Gd})),n.d(t,"xf",(function(){return oe.Kd})),n.d(t,"yf",(function(){return oe.Ld})),n.d(t,"Af",(function(){return oe.Nd})),n.d(t,"Bf",(function(){return oe.Od})),n.d(t,"Cf",(function(){return oe.Pd})),n.d(t,"Df",(function(){return oe.Qd})),n.d(t,"Gf",(function(){return oe.Wd})),n.d(t,"Jf",(function(){return oe.Zd})),n.d(t,"Kf",(function(){return oe.ce})),n.d(t,"Nf",(function(){return oe.ee})),n.d(t,"Qf",(function(){return oe.fe})),n.d(t,"Rf",(function(){return oe.he})),n.d(t,"Sf",(function(){return oe.ie})),n.d(t,"If",(function(){return oe.Yd})),n.d(t,"ee",(function(){return oe.fb})),n.d(t,"se",(function(){return oe.Cb})),n.d(t,"xe",(function(){return oe.Lb})),n.d(t,"oe",(function(){return oe.vb})),n.d(t,"Hf",(function(){return fe})),n.d(t,"ge",(function(){return me.c})),n.d(t,"Je",(function(){return me.f})),n.d(t,"Ff",(function(){return me.i})),n.d(t,"ce",(function(){return me.b})),n.d(t,"ue",(function(){return me.e})),n.d(t,"jf",(function(){return me.h})),n.d(t,"af",(function(){return me.g})),n.d(t,"Dd",(function(){return me.a})),n.d(t,"bf",(function(){return z.e})),n.d(t,"Of",(function(){return ge.b})),n.d(t,"he",(function(){return c.b})),n.d(t,"Pf",(function(){return re})),n.d(t,"Pe",(function(){return be.a})),n.d(t,"Kd",(function(){return a})),n.d(t,"te",(function(){return r})),n.d(t,"if",(function(){return ee})),n.d(t,"Mf",(function(){return ne})),n.d(t,"Ed",(function(){return o})),n.d(t,"Jd",(function(){return M})),n.d(t,"Ef",(function(){return te})),n.d(t,"qf",(function(){return $})),n.d(t,"be",(function(){return It})),n.d(t,"ve",(function(){return i})),n.d(t,"Ab",(function(){return jt.b})),n.d(t,"O",(function(){return jt.a})),n.d(t,"a",(function(){return L.a})),n.d(t,"b",(function(){return L.b})),n.d(t,"c",(function(){return L.c})),n.d(t,"d",(function(){return L.d})),n.d(t,"e",(function(){return L.e})),n.d(t,"f",(function(){return L.f})),n.d(t,"g",(function(){return L.g})),n.d(t,"h",(function(){return L.h})),n.d(t,"i",(function(){return L.i})),n.d(t,"j",(function(){return L.j})),n.d(t,"k",(function(){return L.k})),n.d(t,"l",(function(){return L.l})),n.d(t,"n",(function(){return L.n})),n.d(t,"m",(function(){return L.m})),n.d(t,"o",(function(){return L.o})),n.d(t,"r",(function(){return L.r})),n.d(t,"p",(function(){return L.p})),n.d(t,"q",(function(){return L.q})),n.d(t,"s",(function(){return L.s})),n.d(t,"t",(function(){return L.t})),n.d(t,"u",(function(){return L.u})),n.d(t,"v",(function(){return L.v})),n.d(t,"w",(function(){return L.w})),n.d(t,"x",(function(){return L.y})),n.d(t,"y",(function(){return L.z})),n.d(t,"z",(function(){return L.A})),n.d(t,"A",(function(){return L.B})),n.d(t,"B",(function(){return L.C})),n.d(t,"C",(function(){return L.D})),n.d(t,"D",(function(){return L.E})),n.d(t,"E",(function(){return L.F})),n.d(t,"F",(function(){return L.G})),n.d(t,"G",(function(){return L.H})),n.d(t,"H",(function(){return L.I})),n.d(t,"I",(function(){return L.J})),n.d(t,"J",(function(){return L.K})),n.d(t,"K",(function(){return L.L})),n.d(t,"M",(function(){return L.N})),n.d(t,"N",(function(){return L.O})),n.d(t,"L",(function(){return L.M})),n.d(t,"P",(function(){return L.P})),n.d(t,"Q",(function(){return L.Q})),n.d(t,"R",(function(){return L.R})),n.d(t,"S",(function(){return L.S})),n.d(t,"T",(function(){return L.T})),n.d(t,"U",(function(){return L.U})),n.d(t,"V",(function(){return L.V})),n.d(t,"X",(function(){return L.X})),n.d(t,"W",(function(){return L.W})),n.d(t,"Y",(function(){return L.Y})),n.d(t,"sc",(function(){return L.rc})),n.d(t,"Z",(function(){return L.Z})),n.d(t,"ab",(function(){return L.ab})),n.d(t,"bb",(function(){return L.bb})),n.d(t,"db",(function(){return L.db})),n.d(t,"cb",(function(){return L.cb})),n.d(t,"eb",(function(){return L.eb})),n.d(t,"fb",(function(){return L.fb})),n.d(t,"gb",(function(){return L.gb})),n.d(t,"hb",(function(){return L.hb})),n.d(t,"ib",(function(){return L.ib})),n.d(t,"jb",(function(){return L.jb})),n.d(t,"kb",(function(){return L.kb})),n.d(t,"lb",(function(){return L.lb})),n.d(t,"nb",(function(){return L.nb})),n.d(t,"rb",(function(){return L.rb})),n.d(t,"qb",(function(){return L.qb})),n.d(t,"sb",(function(){return L.sb})),n.d(t,"tb",(function(){return L.tb})),n.d(t,"vb",(function(){return L.vb})),n.d(t,"ub",(function(){return L.ub})),n.d(t,"wb",(function(){return L.wb})),n.d(t,"xb",(function(){return L.xb})),n.d(t,"yb",(function(){return L.yb})),n.d(t,"zb",(function(){return L.zb})),n.d(t,"Db",(function(){return L.Cb})),n.d(t,"Eb",(function(){return L.Db})),n.d(t,"Fb",(function(){return L.Eb})),n.d(t,"Gb",(function(){return L.Fb})),n.d(t,"Hb",(function(){return L.Gb})),n.d(t,"Ib",(function(){return L.Hb})),n.d(t,"Jb",(function(){return L.Jb})),n.d(t,"Kb",(function(){return L.Kb})),n.d(t,"Lb",(function(){return L.Lb})),n.d(t,"Bb",(function(){return L.Ab})),n.d(t,"Cb",(function(){return L.Bb})),n.d(t,"Mb",(function(){return L.Mb})),n.d(t,"Sb",(function(){return L.Sb})),n.d(t,"Nb",(function(){return L.Nb})),n.d(t,"Qb",(function(){return L.Qb})),n.d(t,"Ob",(function(){return L.Ob})),n.d(t,"Pb",(function(){return L.Pb})),n.d(t,"Rb",(function(){return L.Rb})),n.d(t,"Tb",(function(){return L.Tb})),n.d(t,"Ub",(function(){return L.Ub})),n.d(t,"Vb",(function(){return L.Vb})),n.d(t,"Wb",(function(){return L.Wb})),n.d(t,"Xb",(function(){return L.Xb})),n.d(t,"Yb",(function(){return L.Yb})),n.d(t,"Zb",(function(){return L.Zb})),n.d(t,"ac",(function(){return L.ac})),n.d(t,"ec",(function(){return L.ec})),n.d(t,"bc",(function(){return L.bc})),n.d(t,"cc",(function(){return L.cc})),n.d(t,"dc",(function(){return L.dc})),n.d(t,"gc",(function(){return L.gc})),n.d(t,"fc",(function(){return L.fc})),n.d(t,"ic",(function(){return L.hc})),n.d(t,"jc",(function(){return L.ic})),n.d(t,"kc",(function(){return L.jc})),n.d(t,"lc",(function(){return L.kc})),n.d(t,"mc",(function(){return L.lc})),n.d(t,"nc",(function(){return L.mc})),n.d(t,"oc",(function(){return L.nc})),n.d(t,"pc",(function(){return L.oc})),n.d(t,"qc",(function(){return L.pc})),n.d(t,"rc",(function(){return L.qc})),n.d(t,"tc",(function(){return L.sc})),n.d(t,"uc",(function(){return L.tc})),n.d(t,"wc",(function(){return L.vc})),n.d(t,"zc",(function(){return L.yc})),n.d(t,"Ac",(function(){return L.zc})),n.d(t,"xc",(function(){return L.wc})),n.d(t,"yc",(function(){return L.xc})),n.d(t,"vc",(function(){return L.uc})),n.d(t,"Bc",(function(){return L.Ac})),n.d(t,"Dc",(function(){return L.Cc})),n.d(t,"Ec",(function(){return L.Dc})),n.d(t,"Fc",(function(){return L.Ec})),n.d(t,"md",(function(){return L.jd})),n.d(t,"Gc",(function(){return L.Fc})),n.d(t,"Hc",(function(){return L.Gc})),n.d(t,"Ic",(function(){return L.Hc})),n.d(t,"Nc",(function(){return L.Mc})),n.d(t,"Lc",(function(){return L.Kc})),n.d(t,"Mc",(function(){return L.Lc})),n.d(t,"Kc",(function(){return L.Jc})),n.d(t,"Jc",(function(){return L.Ic})),n.d(t,"Pc",(function(){return L.Oc})),n.d(t,"Xc",(function(){return L.Wc})),n.d(t,"hd",(function(){return L.gd})),n.d(t,"Qc",(function(){return L.Pc})),n.d(t,"Wc",(function(){return L.Vc})),n.d(t,"Oc",(function(){return L.Nc})),n.d(t,"Rc",(function(){return L.Qc})),n.d(t,"Sc",(function(){return L.Rc})),n.d(t,"Tc",(function(){return L.Sc})),n.d(t,"Uc",(function(){return L.Tc})),n.d(t,"Vc",(function(){return L.Uc})),n.d(t,"Zc",(function(){return L.Yc})),n.d(t,"Yc",(function(){return L.Xc})),n.d(t,"ad",(function(){return L.Zc})),n.d(t,"cd",(function(){return L.bd})),n.d(t,"dd",(function(){return L.cd})),n.d(t,"ed",(function(){return L.dd})),n.d(t,"fd",(function(){return L.ed})),n.d(t,"gd",(function(){return L.fd})),n.d(t,"id",(function(){return L.hd})),n.d(t,"jd",(function(){return L.id})),n.d(t,"nd",(function(){return L.kd})),n.d(t,"od",(function(){return L.ld})),n.d(t,"pd",(function(){return L.md})),n.d(t,"qd",(function(){return L.nd})),n.d(t,"rd",(function(){return L.od})),n.d(t,"sd",(function(){return L.pd})),n.d(t,"td",(function(){return L.qd})),n.d(t,"ud",(function(){return L.rd})),n.d(t,"bd",(function(){return L.ad})),n.d(t,"mb",(function(){return L.mb})),n.d(t,"Cc",(function(){return L.Bc})),n.d(t,"vd",(function(){return L.sd})),n.d(t,"ob",(function(){return L.ob})),n.d(t,"pb",(function(){return L.pb}));var r={};n.r(r),n.d(r,"copyModel",(function(){return _.b})),n.d(r,"listModels",(function(){return _.c})),n.d(r,"moveModel",(function(){return _.d})),n.d(r,"removeModel",(function(){return _.e})),n.d(r,"browserFiles",(function(){return m})),n.d(r,"browserHTTPRequest",(function(){return N})),n.d(r,"CompositeArrayBuffer",(function(){return d.a})),n.d(r,"concatenateArrayBuffers",(function(){return u.d})),n.d(r,"decodeWeights",(function(){return u.e})),n.d(r,"decodeWeightsStream",(function(){return u.f})),n.d(r,"encodeWeights",(function(){return u.g})),n.d(r,"fromMemory",(function(){return C})),n.d(r,"fromMemorySync",(function(){return A})),n.d(r,"getLoadHandlers",(function(){return l.b})),n.d(r,"getModelArtifactsForJSON",(function(){return u.h})),n.d(r,"getModelArtifactsForJSONSync",(function(){return u.i})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return u.j})),n.d(r,"getSaveHandlers",(function(){return l.c})),n.d(r,"getWeightSpecs",(function(){return u.l})),n.d(r,"http",(function(){return I})),n.d(r,"isHTTPScheme",(function(){return k})),n.d(r,"loadWeights",(function(){return x})),n.d(r,"registerLoadRouter",(function(){return l.d})),n.d(r,"registerSaveRouter",(function(){return l.e})),n.d(r,"weightsLoaderFactory",(function(){return w})),n.d(r,"withSaveHandler",(function(){return R})),n.d(r,"withSaveHandlerSync",(function(){return F}));var a={};n.r(a),n.d(a,"fromPixelsAsync",(function(){return X})),n.d(a,"toPixels",(function(){return Q})),n.d(a,"draw",(function(){return Z})),n.d(a,"fromPixels",(function(){return J}));var s={};n.r(s),n.d(s,"segOpComputeOptimalWindowSize",(function(){return xt})),n.d(s,"computeOutShape",(function(){return wt})),n.d(s,"collectGatherOpShapeInfo",(function(){return Ot}));var o={};n.r(o),n.d(o,"axesAreInnerMostDims",(function(){return ye.b})),n.d(o,"combineLocations",(function(){return ye.c})),n.d(o,"computeOutAndReduceShapes",(function(){return ye.d})),n.d(o,"expandShapeToKeepDim",(function(){return ye.e})),n.d(o,"assertAxesAreInnerMostDims",(function(){return ye.a})),n.d(o,"getAxesPermutation",(function(){return ye.f})),n.d(o,"getUndoAxesPermutation",(function(){return ye.h})),n.d(o,"getInnerMostAxes",(function(){return ye.g})),n.d(o,"getBroadcastDims",(function(){return M.getBroadcastDims})),n.d(o,"getReductionAxes",(function(){return M.getReductionAxes})),n.d(o,"assertAndGetBroadcastShape",(function(){return M.assertAndGetBroadcastShape})),n.d(o,"assertParamsConsistent",(function(){return ve})),n.d(o,"computeOutShape",(function(){return xe})),n.d(o,"computeDilation2DInfo",(function(){return Oe.e})),n.d(o,"computePool2DInfo",(function(){return Oe.f})),n.d(o,"computePool3DInfo",(function(){return Oe.g})),n.d(o,"computeConv2DInfo",(function(){return Oe.b})),n.d(o,"computeConv3DInfo",(function(){return Oe.c})),n.d(o,"computeDefaultPad",(function(){return Oe.d})),n.d(o,"tupleValuesAreOne",(function(){return Oe.k})),n.d(o,"eitherStridesOrDilationsAreOne",(function(){return Oe.i})),n.d(o,"stridesOrDilationsArePositive",(function(){return Oe.j})),n.d(o,"convertConv2DDataFormat",(function(){return Oe.h})),n.d(o,"checkPadOnDimRoundingMode",(function(){return Oe.a})),n.d(o,"getFusedDyActivation",(function(){return ke.c})),n.d(o,"getFusedBiasGradient",(function(){return ke.b})),n.d(o,"applyActivation",(function(){return ke.a})),n.d(o,"shouldFuse",(function(){return ke.d})),n.d(o,"RowPartitionType",(function(){return we})),n.d(o,"combineRaggedTensorToTensorShapes",(function(){return Se})),n.d(o,"getRowPartitionTypesHelper",(function(){return Ie})),n.d(o,"getRaggedRank",(function(){return Ne})),n.d(o,"validateDefaultValueShape",(function(){return Te})),n.d(o,"PARALLELIZE_THRESHOLD",(function(){return je})),n.d(o,"computeOptimalWindowSize",(function(){return Ee})),n.d(o,"slice_util",(function(){return $})),n.d(o,"upcastType",(function(){return se.d})),n.d(o,"getImageCenter",(function(){return Ce})),n.d(o,"getReshaped",(function(){return Ae})),n.d(o,"getPermuted",(function(){return Re})),n.d(o,"getReshapedPermuted",(function(){return Fe})),n.d(o,"getSliceBeginCoords",(function(){return _e})),n.d(o,"getSliceSize",(function(){return Me})),n.d(o,"prepareAndValidate",(function(){return De})),n.d(o,"validateUpdateShape",(function(){return Le.c})),n.d(o,"validateInput",(function(){return Le.b})),n.d(o,"calculateShapes",(function(){return Le.a})),n.d(o,"SELU_SCALEALPHA",(function(){return ze.b})),n.d(o,"SELU_SCALE",(function(){return ze.a})),n.d(o,"ERF_P",(function(){return Pe})),n.d(o,"ERF_A1",(function(){return Be})),n.d(o,"ERF_A2",(function(){return We})),n.d(o,"ERF_A3",(function(){return Ue})),n.d(o,"ERF_A4",(function(){return Ve})),n.d(o,"ERF_A5",(function(){return Ge})),n.d(o,"warn",(function(){return He.b})),n.d(o,"log",(function(){return He.a})),n.d(o,"mergeRealAndImagArrays",(function(){return qe})),n.d(o,"splitRealAndImagArrays",(function(){return Ke})),n.d(o,"complexWithEvenIndex",(function(){return Xe})),n.d(o,"complexWithOddIndex",(function(){return Ye})),n.d(o,"getComplexWithIndex",(function(){return Qe})),n.d(o,"assignToTypedArray",(function(){return Ze})),n.d(o,"exponents",(function(){return Je})),n.d(o,"exponent",(function(){return $e})),n.d(o,"decodeEinsumEquation",(function(){return tt})),n.d(o,"getEinsumPermutation",(function(){return nt})),n.d(o,"checkEinsumDimSizes",(function(){return rt})),n.d(o,"getEinsumComputePath",(function(){return at})),n.d(o,"isIdentityPermutation",(function(){return st})),n.d(o,"prepareSplitSize",(function(){return it})),n.d(o,"getSparseFillEmptyRowsIndicesDenseShapeMismatch",(function(){return ct})),n.d(o,"getSparseFillEmptyRowsNegativeIndexErrorMessage",(function(){return ut})),n.d(o,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage",(function(){return lt})),n.d(o,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage",(function(){return dt})),n.d(o,"getSparseReshapeNegativeOutputDimErrorMessage",(function(){return ht})),n.d(o,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage",(function(){return pt})),n.d(o,"getSparseReshapeInputOutputMultipleErrorMessage",(function(){return ft})),n.d(o,"getSparseReshapeInputOutputMismatchErrorMessage",(function(){return mt})),n.d(o,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage",(function(){return gt})),n.d(o,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage",(function(){return bt})),n.d(o,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage",(function(){return yt})),n.d(o,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage",(function(){return vt})),n.d(o,"segment_util",(function(){return s})),n.d(o,"fromUint8ToStringArray",(function(){return kt})),n.d(o,"fromStringArrayToUint8",(function(){return St}));var i={};n.r(i),n.d(i,"nonMaxSuppressionV3Impl",(function(){return Nt.a})),n.d(i,"nonMaxSuppressionV4Impl",(function(){return Nt.b})),n.d(i,"nonMaxSuppressionV5Impl",(function(){return Nt.c})),n.d(i,"whereImpl",(function(){return Tt.a}));n(178),n(179),n(135);var c=n(18),u=n(29),l=n(37),d=n(45);function h(e){return new Promise(e=>setTimeout(e)).then(e)}class p{constructor(e){if(!Object(c.b)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(p.URL_SCHEME)&&(e=e.slice(p.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=d.a.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=Object(u.k)(e,t),a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await h(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await h(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(u.j)(e)}}}}p.URL_SCHEME="downloads://";class f{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(e));this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error("modelTopology field is missing from file ".concat(this.jsonFile.name)));if(null==r.weightsManifest)return void t(new Error("weightManifest field is missing from file ".concat(this.jsonFile.name)));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=Object(u.h)(r,e=>this.loadWeights(e));e(s)},n.onerror=e=>t("Failed to read model topology and weights manifest JSON "+"from file '".concat(this.jsonFile.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),n.readAsText(this.jsonFile)})}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map(e=>this.loadWeightsFile(e,r[e]));return Promise.all(a).then(e=>[t,e])}loadWeightsFile(e,t){return new Promise((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r("Failed to weights data from file of path '".concat(e,"'.")),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map(e=>Object(u.c)(e.name)),r={};for(const a of e)a.paths.forEach(e=>{const a=Object(u.c)(e);if(-1!==t.indexOf(a))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(a,"'"));if(t.push(a),-1===n.indexOf(a))throw new Error("Weight file with basename '".concat(a,"' is not provided."));r[e]=this.weightsFiles[n.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(t.length,") and the number of weight files provided ")+"(".concat(this.weightsFiles.length,")."));return r}}function m(e){return new f(e)}l.a.registerSaveRouter(e=>Object(c.b)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(p.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new p(e)}(e.slice(p.URL_SCHEME.length)):null);var g=n(8);function b(e,t,n,r){!function(e){Object(g.c)(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){Object(g.c)(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(e)),Object(g.c)(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(t)),Object(g.c)(t>=e,()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(e," and endFraction ")+"".concat(t))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map(s=>(s.then(s=>{const o=n+ ++a/e.length*(r-n);return t(o),s}),s)))}var y=n(84);async function v(e,t){null==t&&(t={});const n=null==t.fetchFunc?Object(c.b)().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),a=(null==t.onProgress?await Promise.all(r):await b(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(a):await b(a,t.onProgress,.5,1)}async function x(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;const a=e=>v(e,{requestInit:r}),s=w(a);return s(e,t,n)}function w(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2?arguments[2]:void 0;const a=t.map(()=>!1),s={},o=null!=r?r.map(()=>!1):[],i=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const c="quantization"in e?e.quantization.dtype:e.dtype,u=y.a[c]*g.O(e.shape),l=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach((t,n)=>{t===e.name&&(l(),o[n]=!0)}):l(),i.push(e.name),n+=u})}),!o.every(e=>e)){const e=r.filter((e,t)=>!o[t]);throw new Error("Could not find weights in manifest with names: "+"".concat(e.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const c=a.reduce((e,t,n)=>(t&&e.push(n),e),[]),l=[];c.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)})});const h=await e(l),p={};let f=0;return c.forEach(e=>{const n=t[e].paths.length,r=new d.a(h.slice(f,f+n));s[e].forEach(e=>{const t=r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=Object(u.e)(t,[e.manifestEntry]);for(const r in n)p[r]=n[r]}),f+=n}),p}}class O{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Object(g.c)("function"===typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Object(c.b)().platform.fetch,Object(g.c)(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&Object(g.c)(2===e.length,()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(e.length,").")),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=Object(u.k)(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=d.a.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Object(u.j)(e),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(a.status,"."))}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(e.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let t;try{t=await e.json()}catch(a){let e="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return Object(u.h)(e,e=>this.loadWeights(e))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=Object(u.l)(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const r=null==t.fetchFunc?Object(c.b)().platform.fetch:t.fetchFunc;let a,s=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var o;s<e.length;){if(!a){const n=(await r(e[s],t.requestInit,{isBinary:!0})).body;a=n.getReader()}const{done:i,value:c}=await a.read();if(!i)return void n.enqueue(c);s++,a=void 0,null===(o=t.onProgress)||void 0===o||o.call(t,s/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[],o=[];for(const i of e)for(const e of i.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(a+e+r);return this.weightUrlConverter&&s.push(...await Promise.all(o)),s}async loadWeights(e){const t=await this.getWeightUrls(e);return[Object(u.l)(e),await v(t,this.loadOptions)]}}function k(e){return null!=e.match(O.URL_SCHEME_REGEX)}O.URL_SCHEME_REGEX=/^https?:\/\//;const S=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>k(e)):k(e),n)return I(e,t)}return null};function I(e,t){return new O(e,t)}function N(e,t){return I(e,t)}l.a.registerSaveRouter(S),l.a.registerLoadRouter(S);class T{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class j{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class E{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function C(e,t,n,r){const a=arguments;return new E(A(...a))}function A(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new T(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new T({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new T({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function R(e){return new j(e)}function F(e){return new j(e)}var _=n(85),M=n(15),D=n(5),L=n(3),z=n(56),P=n(6),B=n(2),W=n(11),U=n(4),V=n(173);let G,H=!1;function q(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(e.constructor.name));i=!0}const c=Object(z.b)(L.mb,D.a.backendName);if(null!=c){const n={pixels:e},r={numChannels:t};return D.a.runKernel(L.mb,n,r)}const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let d,h;if(o)d=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)d=e.data;else if(s||a||i){if(null==G)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");G=new OffscreenCanvas(1,1).getContext("2d")}else G=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});G.canvas.width=u,G.canvas.height=l,G.drawImage(e,0,0,u,l),d=G.getImageData(0,0,u,l).data}if(4===t)h=new Int32Array(d);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=d[4*n+e]}const p=[l,u,t];return Object(V.a)(h,p,"int32")}function K(e){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function X(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if(Object(c.b)().getBool("WRAP_TO_IMAGEBITMAP")&&K(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return q(n,t)}function Y(e){if(2!==e.rank&&3!==e.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank ".concat(e.rank,"."));const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error("toPixels only supports depth of size "+"1, 3 or 4 but got ".concat(t));if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error("Unsupported type for toPixels: ".concat(e.dtype,".")+" Please use float32 or int32 tensors.")}async function Q(e,t){let n=Object(B.a)(e,"img","toPixels");if(!(e instanceof P.a)){const e=n;n=Object(W.a)(e,"int32"),e.dispose()}Y(n);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2],o=await n.data(),i="float32"===n.dtype?255:1,c=new Uint8ClampedArray(a*r*4);for(let u=0;u<r*a;++u){const e=[0,0,0,255];for(let r=0;r<s;r++){const t=o[u*s+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===n.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===s?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[r]=t*i}const t=4*u;c[t+0]=Math.round(e[0]),c[t+1]=Math.round(e[1]),c[t+2]=Math.round(e[2]),c[t+3]=Math.round(e[3])}if(null!=t){if(!H){null!=Object(z.b)(L.Y,D.a.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),H=!0)}t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(c,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),c}function Z(e,t,n){let r=Object(B.a)(e,"img","draw");if(!(e instanceof P.a)){const e=r;r=Object(W.a)(e,"int32"),e.dispose()}Y(r),function(e){const t=(null===e||void 0===e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error("Alpha value ".concat(t," is suppoed to be in range [0 - 1]."))}(null===n||void 0===n?void 0:n.imageOptions);const a={image:r},s={canvas:t,options:n};D.a.runKernel(L.Y,a,s)}const J=Object(U.b)({fromPixels_:q});var $=n(106),ee=n(108),te=n(23),ne=n(10);const re="4.17.0";var ae=n(53),se=n(52),oe=n(22),ie=n(107),ce=n(110),ue=n(111),le=n(112),de=n(113),he=n(114),pe=n(88);const fe=class{static sgd(e){return new pe.a(e)}static momentum(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return new de.a(e,t,n)}static rmsprop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return new he.a(e,t,n,r,a)}static adam(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return new ue.a(e,t,n,r)}static adadelta(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return new ie.a(e,t,n)}static adamax(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;return new le.a(e,t,n,r,a)}static adagrad(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;return new ce.a(e,t)}};var me=n(24),ge=n(32),be=n(210),ye=n(35);function ve(e,t){const n=e[0].length;e.forEach((e,t)=>{g.c(e.length===n,()=>"Error in concat".concat(n,"D: rank of tensors[").concat(t,"] must be the same ")+"as the rank of the rest (".concat(n,")"))}),g.c(t>=0&&t<n,()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,"."));const r=e[0];e.forEach((e,a)=>{for(let s=0;s<n;s++)g.c(s===t||e[s]===r[s],()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(a,"] (").concat(e,") ")+"does not match the shape of the rest (".concat(r,") ")+"along the non-concatenated axis ".concat(a,"."))})}function xe(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var we,Oe=n(20),ke=n(40);function Se(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.rank = ").concat(e+n.length,", but shape.rank = ").concat(r.length));for(let a=1;a<n.length;++a){const s=n[a],o=r[r.length-n.length+a],i=r[o];if(s>=0)if(i>=0){if(i!==s)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.shape[").concat(a+e,"] = ").concat(s," but shape[").concat(a+e,"] = ").concat(i))}else r[o]=s}return r}function Ie(e){const t={FIRST_DIM_SIZE:we.FIRST_DIM_SIZE,VALUE_ROWIDS:we.VALUE_ROWIDS,ROW_LENGTHS:we.ROW_LENGTHS,ROW_SPLITS:we.ROW_SPLITS,ROW_LIMITS:we.ROW_LIMITS,ROW_STARTS:we.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function Ne(e){return 0===e.length?0:e[0]===we.FIRST_DIM_SIZE?e.length-1:e.length}function Te(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error("defaultValue.shape=".concat(e," and ragged tensor flatValues.shape=").concat(t,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(r,")"));for(let a=0;a<Math.min(n,r-1);++a){const n=e[a],r=t[a+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error("defaultValue.shape=".concat(e,", and ragged tensor input flatValues.shape=").concat(t," are incompatible: defaultValue.shape[").concat(a-e.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(a-e.length,"] = ").concat(r))}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(we||(we={}));const je=30;function Ee(e){return e<=je?e:Object(g.G)(e,Math.floor(Math.sqrt(e)))}function Ce(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function Ae(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Re(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2===1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Fe(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?r?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function _e(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Me(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}function De(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(r<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(r,"."));if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.shape[r-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(t.shape[r-1]," vs. ").concat(n));if(0===Object(g.O)(e.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(e.shape,"."));const a=t.shape,s=a[a.length-1];let o=1;for(let d=0;d<a.length-1;++d)o*=a[d];const i=e.shape,c=a.slice();c.pop();let u=1;for(let d=s;d<n;++d)u*=i[d],c.push(i[d]);const l=[...Object(g.k)(e.shape).map(e=>e/u),1].slice(0,s);return[c,o,u,l]}var Le=n(86),ze=n(138);const Pe=.3275911,Be=.254829592,We=-.284496736,Ue=1.421413741,Ve=-1.453152027,Ge=1.061405429;var He=n(70);function qe(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(e.length,", imag: ").concat(t.length,"."));const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Ke(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Xe(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function Ye(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function Qe(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Ze(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Je(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function $e(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const et=/->/g;function tt(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(et,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat("->",'").'));const[r,a]=e.split("->");Object(g.c)(-1===r.indexOf("..."),()=>'The ellipsis notation ("'.concat("...",'") is not supported yet.'));const s=r.split(","),o=s.length;if(t!==o)throw new Error("Expected ".concat(o," input tensors, received ").concat(t));if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<a.length;++d){const e=a[d];if(!s.some(t=>-1!==t.indexOf(e)))throw new Error("Output subscripts contain the label ".concat(e," ")+"not present in the input subscripts.");-1===i.indexOf(e)&&i.push(e)}for(let d=0;d<r.length;++d){const e=r[d];-1===i.indexOf(e)&&","!==e&&i.push(e)}const c=new Array(s.length);for(let d=0;d<o;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error("Found duplicate axes in input component ".concat(s[d],". ")+"Support for duplicate axes in input is not implemented yet.");c[d]=[];for(let e=0;e<s[d].length;++e)c[d].push(i.indexOf(s[d][e]))}const u=i.length,l=[];for(let d=a.length;d<u;++d)l.push(d);return{allDims:i,summedDims:l,idDims:c}}function nt(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;const r=[];for(let a=0;a<e;++a)-1===n[a]&&r.push(a);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:r}}function rt(e,t,n){const r=new Array(e);for(let a=0;a<n.length;++a){const e=n[a].shape;for(let n=0;n<t[a].length;++n)void 0===r[t[a][n]]?r[t[a][n]]=e[n]:Object(g.c)(r[t[a][n]]===e[n],()=>"Expected dimension ".concat(r[t[a][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(e),", ")+"but got dimension ".concat(e[n]))}}function at(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let o=0;o<a;++o)r.push([]);const s=[];for(let o=0;o<n.length;++o){const e=ot(t,n[o]);for(const t of e)-1===s.indexOf(t)&&(r[o].push(t),s.push(t))}return{path:n,steps:r}}function st(e){return e.every((e,t)=>e===t)}function ot(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function it(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=[];if("number"===typeof t)Object(g.c)(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce((e,t)=>(-1===t&&(e+=1),e),0);Object(g.c)(a<=1,()=>"There should be only one negative value in split array.");const s=t.indexOf(-1);if(-1!==s){const r=t.reduce((e,t)=>t>0?e+t:e);t[s]=e.shape[n]-r}Object(g.c)(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function ct(e){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(e)}function ut(e,t){return"indices(".concat(e,", 0) is invalid: ").concat(t," < 0")}function lt(e,t,n){return"indices(".concat(e,", 0) is invalid: ").concat(t," >= ").concat(n)}function dt(e,t){return"only one output dimension may be -1, not both ".concat(e," and ").concat(t)}function ht(e,t){return"size ".concat(e," must be non-negative, not ").concat(t)}function pt(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function ft(e,t){const n=Object(g.O)(e),r=Object(g.O)(t);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(r,". inputShape=").concat(e," outputShape= ").concat(t)}function mt(e,t){const n=Object(g.O)(e),r=Object(g.O)(t);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(r,". inputShape=").concat(e," outputShape=").concat(t)}function gt(){return"segment ids must be >= 0"}function bt(){return"segment ids are not increasing"}function yt(e,t){return"Segment id ".concat(e," out of range [0, ").concat(t,"), possibly because segmentIds input is not sorted.")}function vt(e,t,n){return"Bad: indices[".concat(e,"] == ").concat(t," out of range [0, ").concat(n,")")}function xt(e,t){let n,r=!1;for(e<=je?(n=e,r=!0):n=Object(g.G)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Object(g.G)(e,n+1);return n}function wt(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Ot(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error("Expect batchDims in the range of [-".concat(a,", ").concat(a,"], but got ").concat(r));if(r<0&&(r+=a),r>s)throw new Error("batchDims (".concat(r,") must be less than rank(x) (\n    ").concat(s,")."));if(n<r)throw new Error("batchDims (".concat(r,") must be less than or equal to axis (").concat(n,")."));for(let d=0;d<r;++d)if(e.shape[d]!==t.shape[d])throw new Error("x.shape[".concat(d,"]: ").concat(e.shape[d]," should be equal to indices.shape[").concat(d,"]: ").concat(t.shape[d],"."));const o=e.shape[n],i=[];let c=1,u=1,l=1;for(let d=0;d<r;++d)i.push(e.shape[d]),c*=e.shape[d];for(let d=r;d<n;d++)i.push(e.shape[d]),u*=e.shape[d];for(let d=r;d<a;d++)i.push(t.shape[d]);for(let d=n+1;d<s;d++)i.push(e.shape[d]),l*=e.shape[d];return{batchSize:c,sliceSize:l,outerSize:u,dimSize:o,outputShape:i}}function kt(e){try{return e.map(e=>Object(ne.decodeString)(e))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(t))}}function St(e){return e.map(e=>Object(ne.encodeString)(e))}var It=n(142),Nt=n(71),Tt=n(176),jt=n(136)},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(r){"object"===typeof window&&(n=window)}e.exports=n},function(e,t){var n,r,a=e.exports={};function s(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function i(e){if(n===setTimeout)return setTimeout(e,0);if((n===s||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"===typeof setTimeout?setTimeout:s}catch(e){n=s}try{r="function"===typeof clearTimeout?clearTimeout:o}catch(e){r=o}}();var c,u=[],l=!1,d=-1;function h(){l&&c&&(l=!1,c.length?u=c.concat(u):d=-1,u.length&&p())}function p(){if(!l){var e=i(h);l=!0;for(var t=u.length;t;){for(c=u,u=[];++d<t;)c&&c[d].run();d=-1,t=u.length}c=null,l=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===o||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function f(e,t){this.fun=e,this.array=t}function m(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];u.push(new f(e,t)),1!==u.length||l||i(p)},f.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=m,a.addListener=m,a.once=m,a.off=m,a.removeListener=m,a.removeAllListeners=m,a.emit=m,a.prependListener=m,a.prependOnceListener=m,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},function(e,t,n){"use strict";let r;function a(e){r=e}function s(e){if(void 0!==r)return r;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function o(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}n.r(t),n.d(t,"mockIsMobile",(function(){return a})),n.d(t,"isMobile",(function(){return s})),n.d(t,"isBrowser",(function(){return o}))},function(e,t,n){"use strict";function r(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o=Object(s.a)(e,"x","all","bool"),i={x:o},c={axis:t,keepDims:n};return r.a.runKernel(a.f,i,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o=Object(s.a)(e,"x","any","bool"),i={x:o},c={axis:t,keepDims:n};return r.a.runKernel(a.g,i,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(s.a)(e,"x","argMax"),o={x:n},i={axis:t};return r.a.runKernel(a.h,o,i)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(s.a)(e,"x","argMin"),o={x:n},i={axis:t};return r.a.runKernel(a.i,o,i)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(23),o=n(2),i=n(4);const c=Object(i.b)({atan2_:function(e,t){let n=Object(o.a)(e,"a","atan2"),i=Object(o.a)(t,"b","atan2");[n,i]=Object(s.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.m,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(2),a=n(8),s=n(62),o=n(20),i=n(4),c=n(7);const u=Object(i.b)({conv1d_:function(e,t,n,i){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,d=arguments.length>6?arguments[6]:void 0;const h=Object(r.a)(e,"x","conv1d"),p=Object(r.a)(t,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=Object(c.a)(h,[1,h.shape[0],h.shape[1]])),a.c(3===f.rank,()=>"Error in conv1d: input must be rank 3, but got rank ".concat(f.rank,".")),a.c(3===p.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(p.rank,".")),o.a("conv1d",i,d),a.c(f.shape[2]===p.shape[1],()=>"Error in conv1d: depth of input (".concat(f.shape[2],") must match ")+"input depth for filter ".concat(p.shape[1],".")),a.c(o.i(n,l),()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(l,"'")),a.c(o.j(l),()=>"Error in conv1D: Dilated rates should be larger than 0."),a.c(o.j(n),()=>"Error in conv1D: Stride should be larger than 0."),a.c("NWC"===u,()=>"Error in conv1d: got dataFormat of ".concat(u," but only NWC is currently supported."));const g=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),b=Object(c.a)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=[1,n],v=[1,l],x="NHWC",w=Object(s.a)(b,g,y,i,x,v,d);return m?Object(c.a)(w,[w.shape[2],w.shape[3]]):Object(c.a)(w,[w.shape[0],w.shape[2],w.shape[3]])}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(2),a=n(132),s=n(4);const o=Object(s.b)({conv2dTranspose_:function(e,t,n,s,o,i){const c=Object(r.a)(e,"x","conv2dTranspose"),u=Object(r.a)(t,"filter","conv2dTranspose");return Object(a.a)(n,c,u,s,o,"NHWC",i)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({cosh_:function(e){const t={x:Object(s.a)(e,"x","cosh","float32")};return r.a.runKernel(a.L,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(4);const c=Object(i.b)({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const i=Object(s.a)(e,"x","depthToSpace","float32"),c="NHWC"===n?i.shape[1]:i.shape[2],u="NHWC"===n?i.shape[2]:i.shape[3],l="NHWC"===n?i.shape[3]:i.shape[1];o.c(t>1,()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(t)),o.c(c*t>=0,()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(c," and ").concat(t,"  for depthToSpace with input shape\n    ").concat(i.shape)),o.c(u*t>=0,()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(u," and ").concat(t," for depthToSpace with input shape\n        ").concat(i.shape)),o.c(l%(t*t)===0,()=>"Dimension size must be evenly divisible by ".concat(t*t," but is ").concat(l," for depthToSpace with input shape ").concat(i.shape));const d={x:i},h={blockSize:t,dataFormat:n};return r.a.runKernel(a.Q,d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(4),c=n(7);const u=Object(i.b)({dilation2d_:function(e,t,n,i){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const d=Object(s.a)(e,"x","dilation2d"),h=Object(s.a)(t,"filter","dilation2d");o.c(3===d.rank||4===d.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(d.rank,".")),o.c(3===h.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(h.rank,".")),o.c("NHWC"===l,()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(l));let p=d,f=!1;3===d.rank&&(p=Object(c.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0),o.c(p.shape[3]===h.shape[2],()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(p.shape[3]," vs ").concat(h.shape[2]));const m={x:p,filter:h},g={strides:n,pad:i,dilations:u},b=r.a.runKernel(a.V,m,g);return f?Object(c.a)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(23),a=n(2),s=n(14),o=n(91),i=n(4),c=n(31),u=n(19);const l=Object(i.b)({divNoNan_:function(e,t){let n=Object(a.a)(e,"a","div"),i=Object(a.a)(t,"b","div");[n,i]=Object(r.makeTypesMatch)(n,i);const l=Object(s.a)(n,i),d=Object(u.a)(l),h=Object(o.a)(i,d);return Object(c.a)(h,d,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(2),a=n(8),s=n(26),o=n(4),i=n(7);const c=Object(o.b)({dot_:function(e,t){const n=Object(r.a)(e,"t1","dot"),o=Object(r.a)(t,"t2","dot");a.c((1===n.rank||2===n.rank)&&(1===o.rank||2===o.rank),()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(o.rank,"."));const c=1===n.rank?n.size:n.shape[1],u=1===o.rank?o.size:o.shape[0];if(a.c(c===u,()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(c," and ").concat(u,".")),1===n.rank&&1===o.rank){const e=Object(i.a)(n,[1,-1]),t=Object(i.a)(o,[-1,1]),r=Object(s.a)(e,t);return Object(i.a)(r,[])}if(1===n.rank&&2===o.rank){const e=Object(i.a)(n,[1,-1]),t=Object(i.a)(o,[o.shape[0],o.shape[1]]),r=Object(s.a)(e,t);return Object(i.a)(r,[r.size])}if(2===n.rank&&1===o.rank){const e=Object(i.a)(o,[-1,1]),t=Object(s.a)(n,e);return Object(i.a)(t,[t.size])}{const e=Object(i.a)(o,[o.shape[0],o.shape[1]]);return Object(s.a)(n,e)}}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(92),a=n(4);const s=Object(a.b)({euclideanNorm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Object(r.a)(e,"euclidean",t,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(4),c=n(7);const u=Object(i.b)({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const l=Object(s.a)(e,"x","localResponseNormalization");o.c(4===l.rank||3===l.rank,()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(l.rank,".")),o.c(o.w(t),()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(t,"."));let d=l,h=!1;3===l.rank&&(h=!0,d=Object(c.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const p={x:d},f={depthRadius:t,bias:n,alpha:i,beta:u},m=r.a.runKernel(a.Ab,p,f);return h?Object(c.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({log1p_:function(e){const t={x:Object(s.a)(e,"x","log1p")};return r.a.runKernel(a.Hb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({softplus_:function(e){const t={x:Object(s.a)(e,"x","softplus")};return r.a.runKernel(a.Oc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(2),a=n(15),s=n(58),o=n(95),i=n(122),c=n(4);const u=Object(c.b)({logicalXor_:function(e,t){const n=Object(r.a)(e,"a","logicalXor","bool"),c=Object(r.a)(t,"b","logicalXor","bool");return Object(a.assertAndGetBroadcastShape)(n.shape,c.shape),Object(s.a)(Object(i.a)(e,t),Object(o.a)(Object(s.a)(e,t)))}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(4);const c=Object(i.b)({mirrorPad_:function(e,t,n){o.c("reflect"===n||"symmetric"===n,()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,"."));const i=Object(s.a)(e,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");o.c(t.length===i.rank,()=>"Padding doesn't match input. Must be ".concat(i.rank,". ")+"Got ".concat(t.length,"."));const c="reflect"===n?1:0;for(let r=0;r<i.rank;r++)o.c(2===t[r].length,()=>"Invalid number of paddings. Must be length of 2 each."),o.c(t[r][0]>=0&&t[r][0]<=i.shape[r]-c&&t[r][1]>=0&&t[r][1]<=i.shape[r]-c,()=>"Padding in dimension ".concat(r," cannot be greater than or equal ")+"to ".concat(i.shape[r]-c," or less than 0 for input of ")+"shape ".concat(i.shape));const u={paddings:t,mode:n},l={x:i};return r.a.runKernel(a.Wb,l,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(23),o=n(2),i=n(4);const c=Object(i.b)({mod_:function(e,t){let n=Object(o.a)(e,"a","mod"),i=Object(o.a)(t,"b","mod");[n,i]=Object(s.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.Xb,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(t));const c=Object(s.a)(e,"indices","oneHot","int32"),u={indices:c},l={dtype:i,depth:t,onValue:n,offValue:o};return r.a.runKernel(a.fc,u,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(2),a=n(8),s=n(115),o=n(89),i=n(20),c=n(123),u=n(4),l=n(7),d=n(96);const h=Object(u.b)({pool_:function(e,t,n,u,h,p,f){null==h&&(h=[1,1]),null==p&&(p=1),0===u&&(u="valid");const m=Object(r.a)(e,"x","maxPool");let g=m,b=!1;3===m.rank&&(b=!0,g=Object(l.a)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),a.c(i.i(p,h),()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(p," and dilations '").concat(h,"'"));const y=i.f(g.shape,t,p,h,u),v=[y.dilationHeight,y.dilationWidth];let x;x="same"===u?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),a=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],a[t]])}([y.filterHeight,y.filterWidth],v):[[0,0],[0,0]];const w=1===v[0]&&1===v[1],[O,k]=function(e,t,n){const r=n.map(e=>e[0]),a=n.map(e=>e[1]),s=e.concat(r,a),o=t.map((e,t)=>(e-s[t]%e)%e),i=a.map((e,t)=>e+o[t]),c=t.map((e,t)=>[r[t],i[t]]),u=t.map((e,t)=>[0,o[t]]);return[c,u]}([y.inHeight,y.inWidth],v,x),S=w?u:"valid",I=w?g:Object(d.a)(g,v,O),N=("avg"===n?()=>Object(s.a)(I,t,p,S,f):()=>Object(c.a)(I,t,p,S,f))(),T=w?N:Object(o.a)(N,v,k);return b?Object(l.a)(T,[T.shape[1],T.shape[2],T.shape[3]]):T}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(2),o=n(11),i=n(4);const c=Object(i.b)({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=Object(s.a)(e,"x","prod");"bool"===i.dtype&&(i=Object(o.a)(i,"int32"));const c={x:i},u={axis:t,keepDims:n};return r.a.runKernel(a.lc,c,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({round_:function(e){const t={x:Object(s.a)(e,"x","round")};return r.a.runKernel(a.Cc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({rsqrt_:function(e){const t={x:Object(s.a)(e,"x","rsqrt","float32")};return r.a.runKernel(a.Dc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({selu_:function(e){const t={x:Object(s.a)(e,"x","selu")};return r.a.runKernel(a.Hc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(2),a=n(8),s=n(62),o=n(90),i=n(4),c=n(7);const u=Object(i.b)({separableConv2d_:function(e,t,n,i,u){let l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const h=Object(r.a)(e,"x","separableConv2d"),p=Object(r.a)(t,"depthwiseFilter","separableConv2d"),f=Object(r.a)(n,"pointwiseFilter","separableConv2d");let m=h,g=!1;if(3===h.rank&&(g=!0,m=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.c(4===m.rank,()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,".")),a.c(4===p.rank,()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(p.rank,".")),a.c(4===f.rank,()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(p.rank,".")),a.c(1===f.shape[0],()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(f.shape[0],".")),a.c(1===f.shape[1],()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(f.shape[1],"."));const b=p.shape[2],y=p.shape[3];a.c(f.shape[2]===b*y,()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(b*y,", ")+"but got ".concat(f.shape[2],"."));const v=Object(o.a)(m,p,i,u,d,l),x=1,w=Object(s.a)(v,f,x,"valid",d);return g?Object(c.a)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({sin_:function(e){const t={x:Object(s.a)(e,"x","sin","float32")};return r.a.runKernel(a.Kc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({sinh_:function(e){const t={x:Object(s.a)(e,"x","sinh")};return r.a.runKernel(a.Lc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(47),a=n(30),s=n(94),o=n(9),i=n(4),c=n(83),u=n(7),l=n(43),d=n(17),h=n(27),p=n(102);const f=Object(i.b)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let i;if(t<=2){const r=Object(u.a)(e,[n,t]);i=Object(p.a)(r)}else{const f=[n,2*(t-1)],m=Object(u.a)(Object(c.a)(e),[n,t]),g=Object(u.a)(Object(s.a)(e),[n,t]),b=Object(l.a)(Object(h.a)(m,[0,1],[n,t-2]),1),y=Object(o.a)(Object(l.a)(Object(h.a)(g,[0,1],[n,t-2]),1),Object(d.a)(-1)),v=Object(a.a)([m,b],1),x=Object(a.a)([g,y],1),w=Object(u.a)(Object(r.a)(v,x),[f[0],f[1]]);i=Object(p.a)(w)}if(i=Object(c.a)(i),3===e.rank&&0!==e.shape[0]){const t=i,n=e.shape[0];i=Object(u.a)(i,[n,i.shape[0]/n,i.shape[1]]),t.dispose()}return i}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(2),a=n(8),s=n(46);function o(e,t,n){if(Object(a.e)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const o=Object(r.c)(e,n);if(3!==o.length&&1!==o.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===o.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(s.a)(e,t,o,n)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const o=Object(s.a)(e,"x","topk");if(0===o.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=o.shape[o.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(t));if(t>i)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(i,") ")+"but got ".concat(t));const c={x:o},u={k:t,sorted:n},[l,d]=r.a.runKernel(a.ld,c,u);return{values:l,indices:d}}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(4);const c=Object(i.b)({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(s.a)(e,"x","unique","string_or_numeric");Object(o.c)(n.rank>0,()=>"The input tensor must be at least 1D");const i={x:n},c={axis:t},[u,l]=r.a.runKernel(a.od,i,c);return{values:u,indices:l}}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(42);function a(e,t){const n=[];for(let r=0;r<t.length;r++)t[r]&&n.push(r);const a=Object(r.a)(e,"int32"),s=Object(r.a)([n.length,e.length],"int32");for(let r=0;r<n.length;r++){const t=a.indexToLoc(n[r]),o=r*e.length;s.values.set(t,o)}return s.toTensor()}},function(e,t,n){"use strict";function r(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));n(135);var r=n(18),a=n(29),s=n(37),o=n(45);function i(){if(!Object(r.b)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function c(e){const t=e.result;t.createObjectStore("models_store",{keyPath:"modelPath"}),t.createObjectStore("model_info_store",{keyPath:"modelPath"})}class u{constructor(e){if(this.indexedDB=i(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>c(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction("models_store","readonly"),r=t.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{t.weightData=o.a.join(t.weightData);const r=Object(a.j)(t),c=s.transaction("model_info_store","readwrite");let u,l,d=c.objectStore("model_info_store");try{u=d.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(i){return n(i)}u.onsuccess=()=>{l=s.transaction("models_store","readwrite");const a=l.objectStore("models_store");let o;try{o=a.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(i){return n(i)}o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{d=c.objectStore("model_info_store");const t=d.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},u.onerror=e=>(s.close(),n(u.error)),c.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)})}}u.URL_SCHEME="indexeddb://";const l=e=>{return Object(r.b)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(u.URL_SCHEME)?(t=e.slice(u.URL_SCHEME.length),new u(t)):null;var t};s.a.registerSaveRouter(l),s.a.registerLoadRouter(l);class d{constructor(){this.indexedDB=i()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>c(n),n.onsuccess=()=>{const r=n.result,a=r.transaction("model_info_store","readonly"),s=a.objectStore("model_info_store").getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(u.URL_SCHEME)?t.slice(u.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>c(r),r.onsuccess=()=>{const a=r.result,s=a.transaction("model_info_store","readwrite"),o=s.objectStore("model_info_store"),i=o.get(e);let c;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error("Cannot find model with path '".concat(e,"' ")+"in IndexedDB."));{const r=o.delete(e),s=()=>{c=a.transaction("models_store","readwrite");const r=c.objectStore("models_store").delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==c?a.close():c.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)})}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return v}));n(135);var r=n(18),a=n(8),s=n(29),o=n(45),i=n(37);const c="tensorflowjs_models",u="info",l="model_topology",d="weight_specs",h="weight_data",p="model_metadata";function f(e){return{info:[c,e,u].join("/"),topology:[c,e,l].join("/"),weightSpecs:[c,e,d].join("/"),weightData:[c,e,h].join("/"),modelMetadata:[c,e,p].join("/")}}function m(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function g(e){const t=e.split("/");if(t.length<3)throw new Error("Invalid key format: ".concat(e));return t.slice(1,t.length-1).join("/")}class b{constructor(e){if(!Object(r.b)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=f(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),a=Object(s.j)(e),i=o.a.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,Object(s.a)(i));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:a}}catch(t){throw m(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(a.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(a.weightSpecsBytes,", ")+"weightDataBytes=".concat(a.weightDataBytes,"."))}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(null==o)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return t.weightData=Object(s.b)(o),t}}b.URL_SCHEME="localstorage://";const y=e=>{return Object(r.b)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(b.URL_SCHEME)?(t=e.slice(b.URL_SCHEME.length),new b(t)):null;var t};i.a.registerSaveRouter(y),i.a.registerLoadRouter(y);class v{constructor(){Object(a.c)(Object(r.b)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(a.c)("undefined"===typeof window||"undefined"!==typeof window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=c+"/",n="/"+u;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){e[g(a)]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){var t;const n=f(e=(t=e).startsWith(b.URL_SCHEME)?t.slice(b.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(e,"'"));const r=JSON.parse(this.LS.getItem(n.info));return m(n),r}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(3),s=n(8),o=n(4),i=n(7);const c=Object(o.b)({conv3DBackpropInput_:function(e,t,n,o,c){s.c(e.length===t.rank,()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match"));let u=e,l=t,d=!1;4===t.rank&&(d=!0,l=Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),u=[1,e[0],e[1],e[2],e[3]]);const h=u[4],p=l.shape[4];s.c(5===u.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(u.length,".")),s.c(5===l.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(l.rank)),s.c(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank)),s.c(h===n.shape[3],()=>"Error in conv3dDerInput: depth of input (".concat(h,") must ")+"match input depth for filter ".concat(n.shape[3],".")),s.c(p===n.shape[4],()=>"Error in conv3dDerInput: depth of output (".concat(p,") must ")+"match output depth for filter ".concat(n.shape[4],"."));const f={dy:l,filter:n},m={pad:c,strides:o,inputShape:u},g=r.a.runKernel(a.J,f,m);return d?Object(i.a)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(4),c=n(7);const u=Object(i.b)({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const u=Object(s.a)(e,"images","resizeNearestNeighbor");o.c(3===u.rank||4===u.rank,()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(u.rank,".")),o.c(2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(t,".")),o.c("float32"===u.dtype||"int32"===u.dtype,()=>"`images` must have `int32` or `float32` as dtype"),o.c(!1===i||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let l=u,d=!1;3===u.rank&&(d=!0,l=Object(c.a)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=t,h={images:l},p={alignCorners:n,halfPixelCenters:i,size:t},f=r.a.runKernel(a.yc,h,p);return d?Object(c.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(4),c=n(7);const u=Object(i.b)({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const u=Object(s.a)(e,"images","resizeBilinear");o.c(3===u.rank||4===u.rank,()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(u.rank,".")),o.c(2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(t,".")),o.c(!1===i||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let l=u,d=!1;3===u.rank&&(d=!0,l=Object(c.a)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=t,h={images:l},p={alignCorners:n,halfPixelCenters:i,size:t},f=r.a.runKernel(a.wc,h,p);return d?Object(c.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(4),o=n(7);const i=Object(s.b)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],u=arguments.length>6?arguments[6]:void 0,l=t,d=!1;3===t.rank&&(d=!0,l=Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:l,filter:n},p={strides:s,pad:i,dimRoundingMode:u,dilations:c,inputShape:e},f=r.a.runKernel(a.T,h,p);return d?Object(o.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(4),o=n(7);const i=Object(s.b)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],u=arguments.length>6?arguments[6]:void 0,l=e;3===e.rank&&(l=Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:l,dy:d},p={strides:s,pad:i,dimRoundingMode:u,dilations:c,filterShape:n};return r.a.runKernel(a.S,h,p)}})},function(e,t,n){"use strict";(function(e){var r=n(242),a=n(243),s=n(244);function o(){return c.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function i(e,t){if(o()<t)throw new RangeError("Invalid typed array length");return c.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=c.prototype:(null===e&&(e=new c(t)),e.length=t),e}function c(e,t,n){if(!c.TYPED_ARRAY_SUPPORT&&!(this instanceof c))return new c(e,t,n);if("number"===typeof e){if("string"===typeof t)throw new Error("If encoding is specified then the first argument must be a string");return d(this,e)}return u(this,e,t,n)}function u(e,t,n,r){if("number"===typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!==typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r);c.TYPED_ARRAY_SUPPORT?(e=t).__proto__=c.prototype:e=h(e,t);return e}(e,t,n,r):"string"===typeof t?function(e,t,n){"string"===typeof n&&""!==n||(n="utf8");if(!c.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|f(t,n),a=(e=i(e,r)).write(t,n);a!==r&&(e=e.slice(0,a));return e}(e,t,n):function(e,t){if(c.isBuffer(t)){var n=0|p(t.length);return 0===(e=i(e,n)).length||t.copy(e,0,0,n),e}if(t){if("undefined"!==typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!==typeof t.length||(r=t.length)!==r?i(e,0):h(e,t);if("Buffer"===t.type&&s(t.data))return h(e,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function l(e){if("number"!==typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function d(e,t){if(l(t),e=i(e,t<0?0:0|p(t)),!c.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function h(e,t){var n=t.length<0?0:0|p(t.length);e=i(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function p(e){if(e>=o())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o().toString(16)+" bytes");return 0|e}function f(e,t){if(c.isBuffer(e))return e.length;if("undefined"!==typeof ArrayBuffer&&"function"===typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!==typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return B(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return W(e).length;default:if(r)return B(e).length;t=(""+t).toLowerCase(),r=!0}}function m(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return E(this,t,n);case"utf8":case"utf-8":return N(this,t,n);case"ascii":return T(this,t,n);case"latin1":case"binary":return j(this,t,n);case"base64":return I(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function g(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function b(e,t,n,r,a){if(0===e.length)return-1;if("string"===typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(a)return-1;n=e.length-1}else if(n<0){if(!a)return-1;n=0}if("string"===typeof t&&(t=c.from(t,r)),c.isBuffer(t))return 0===t.length?-1:y(e,t,n,r,a);if("number"===typeof t)return t&=255,c.TYPED_ARRAY_SUPPORT&&"function"===typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):y(e,[t],n,r,a);throw new TypeError("val must be string, number or Buffer")}function y(e,t,n,r,a){var s,o=1,i=e.length,c=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;o=2,i/=2,c/=2,n/=2}function u(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}if(a){var l=-1;for(s=n;s<i;s++)if(u(e,s)===u(t,-1===l?0:s-l)){if(-1===l&&(l=s),s-l+1===c)return l*o}else-1!==l&&(s-=s-l),l=-1}else for(n+c>i&&(n=i-c),s=n;s>=0;s--){for(var d=!0,h=0;h<c;h++)if(u(e,s+h)!==u(t,h)){d=!1;break}if(d)return s}return-1}function v(e,t,n,r){n=Number(n)||0;var a=e.length-n;r?(r=Number(r))>a&&(r=a):r=a;var s=t.length;if(s%2!==0)throw new TypeError("Invalid hex string");r>s/2&&(r=s/2);for(var o=0;o<r;++o){var i=parseInt(t.substr(2*o,2),16);if(isNaN(i))return o;e[n+o]=i}return o}function x(e,t,n,r){return U(B(t,e.length-n),e,n,r)}function w(e,t,n,r){return U(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function O(e,t,n,r){return w(e,t,n,r)}function k(e,t,n,r){return U(W(t),e,n,r)}function S(e,t,n,r){return U(function(e,t){for(var n,r,a,s=[],o=0;o<e.length&&!((t-=2)<0);++o)n=e.charCodeAt(o),r=n>>8,a=n%256,s.push(a),s.push(r);return s}(t,e.length-n),e,n,r)}function I(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function N(e,t,n){n=Math.min(e.length,n);for(var r=[],a=t;a<n;){var s,o,i,c,u=e[a],l=null,d=u>239?4:u>223?3:u>191?2:1;if(a+d<=n)switch(d){case 1:u<128&&(l=u);break;case 2:128===(192&(s=e[a+1]))&&(c=(31&u)<<6|63&s)>127&&(l=c);break;case 3:s=e[a+1],o=e[a+2],128===(192&s)&&128===(192&o)&&(c=(15&u)<<12|(63&s)<<6|63&o)>2047&&(c<55296||c>57343)&&(l=c);break;case 4:s=e[a+1],o=e[a+2],i=e[a+3],128===(192&s)&&128===(192&o)&&128===(192&i)&&(c=(15&u)<<18|(63&s)<<12|(63&o)<<6|63&i)>65535&&c<1114112&&(l=c)}null===l?(l=65533,d=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),a+=d}return function(e){var t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);var n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=4096));return n}(r)}t.Buffer=c,t.SlowBuffer=function(e){+e!=e&&(e=0);return c.alloc(+e)},t.INSPECT_MAX_BYTES=50,c.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"===typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(t){return!1}}(),t.kMaxLength=o(),c.poolSize=8192,c._augment=function(e){return e.__proto__=c.prototype,e},c.from=function(e,t,n){return u(null,e,t,n)},c.TYPED_ARRAY_SUPPORT&&(c.prototype.__proto__=Uint8Array.prototype,c.__proto__=Uint8Array,"undefined"!==typeof Symbol&&Symbol.species&&c[Symbol.species]===c&&Object.defineProperty(c,Symbol.species,{value:null,configurable:!0})),c.alloc=function(e,t,n){return function(e,t,n,r){return l(t),t<=0?i(e,t):void 0!==n?"string"===typeof r?i(e,t).fill(n,r):i(e,t).fill(n):i(e,t)}(null,e,t,n)},c.allocUnsafe=function(e){return d(null,e)},c.allocUnsafeSlow=function(e){return d(null,e)},c.isBuffer=function(e){return!(null==e||!e._isBuffer)},c.compare=function(e,t){if(!c.isBuffer(e)||!c.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,a=0,s=Math.min(n,r);a<s;++a)if(e[a]!==t[a]){n=e[a],r=t[a];break}return n<r?-1:r<n?1:0},c.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(e,t){if(!s(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return c.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=c.allocUnsafe(t),a=0;for(n=0;n<e.length;++n){var o=e[n];if(!c.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(r,a),a+=o.length}return r},c.byteLength=f,c.prototype._isBuffer=!0,c.prototype.swap16=function(){var e=this.length;if(e%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)g(this,t,t+1);return this},c.prototype.swap32=function(){var e=this.length;if(e%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)g(this,t,t+3),g(this,t+1,t+2);return this},c.prototype.swap64=function(){var e=this.length;if(e%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)g(this,t,t+7),g(this,t+1,t+6),g(this,t+2,t+5),g(this,t+3,t+4);return this},c.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?N(this,0,e):m.apply(this,arguments)},c.prototype.equals=function(e){if(!c.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===c.compare(this,e)},c.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},c.prototype.compare=function(e,t,n,r,a){if(!c.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),t<0||n>e.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&t>=n)return 0;if(r>=a)return-1;if(t>=n)return 1;if(this===e)return 0;for(var s=(a>>>=0)-(r>>>=0),o=(n>>>=0)-(t>>>=0),i=Math.min(s,o),u=this.slice(r,a),l=e.slice(t,n),d=0;d<i;++d)if(u[d]!==l[d]){s=u[d],o=l[d];break}return s<o?-1:o<s?1:0},c.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},c.prototype.indexOf=function(e,t,n){return b(this,e,t,n,!0)},c.prototype.lastIndexOf=function(e,t,n){return b(this,e,t,n,!1)},c.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"===typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-t;if((void 0===n||n>a)&&(n=a),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var s=!1;;)switch(r){case"hex":return v(this,e,t,n);case"utf8":case"utf-8":return x(this,e,t,n);case"ascii":return w(this,e,t,n);case"latin1":case"binary":return O(this,e,t,n);case"base64":return k(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S(this,e,t,n);default:if(s)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),s=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function T(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(127&e[a]);return r}function j(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(e[a]);return r}function E(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var a="",s=t;s<n;++s)a+=P(e[s]);return a}function C(e,t,n){for(var r=e.slice(t,n),a="",s=0;s<r.length;s+=2)a+=String.fromCharCode(r[s]+256*r[s+1]);return a}function A(e,t,n){if(e%1!==0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function R(e,t,n,r,a,s){if(!c.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<s)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function F(e,t,n,r){t<0&&(t=65535+t+1);for(var a=0,s=Math.min(e.length-n,2);a<s;++a)e[n+a]=(t&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function _(e,t,n,r){t<0&&(t=4294967295+t+1);for(var a=0,s=Math.min(e.length-n,4);a<s;++a)e[n+a]=t>>>8*(r?a:3-a)&255}function M(e,t,n,r,a,s){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function D(e,t,n,r,s){return s||M(e,0,n,4),a.write(e,t,n,r,23,4),n+4}function L(e,t,n,r,s){return s||M(e,0,n,8),a.write(e,t,n,r,52,8),n+8}c.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),c.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=c.prototype;else{var a=t-e;n=new c(a,void 0);for(var s=0;s<a;++s)n[s]=this[s+e]}return n},c.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||A(e,t,this.length);for(var r=this[e],a=1,s=0;++s<t&&(a*=256);)r+=this[e+s]*a;return r},c.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||A(e,t,this.length);for(var r=this[e+--t],a=1;t>0&&(a*=256);)r+=this[e+--t]*a;return r},c.prototype.readUInt8=function(e,t){return t||A(e,1,this.length),this[e]},c.prototype.readUInt16LE=function(e,t){return t||A(e,2,this.length),this[e]|this[e+1]<<8},c.prototype.readUInt16BE=function(e,t){return t||A(e,2,this.length),this[e]<<8|this[e+1]},c.prototype.readUInt32LE=function(e,t){return t||A(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},c.prototype.readUInt32BE=function(e,t){return t||A(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},c.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||A(e,t,this.length);for(var r=this[e],a=1,s=0;++s<t&&(a*=256);)r+=this[e+s]*a;return r>=(a*=128)&&(r-=Math.pow(2,8*t)),r},c.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||A(e,t,this.length);for(var r=t,a=1,s=this[e+--r];r>0&&(a*=256);)s+=this[e+--r]*a;return s>=(a*=128)&&(s-=Math.pow(2,8*t)),s},c.prototype.readInt8=function(e,t){return t||A(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},c.prototype.readInt16LE=function(e,t){t||A(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt16BE=function(e,t){t||A(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt32LE=function(e,t){return t||A(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},c.prototype.readInt32BE=function(e,t){return t||A(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},c.prototype.readFloatLE=function(e,t){return t||A(e,4,this.length),a.read(this,e,!0,23,4)},c.prototype.readFloatBE=function(e,t){return t||A(e,4,this.length),a.read(this,e,!1,23,4)},c.prototype.readDoubleLE=function(e,t){return t||A(e,8,this.length),a.read(this,e,!0,52,8)},c.prototype.readDoubleBE=function(e,t){return t||A(e,8,this.length),a.read(this,e,!1,52,8)},c.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||R(this,e,t,n,Math.pow(2,8*n)-1,0);var a=1,s=0;for(this[t]=255&e;++s<n&&(a*=256);)this[t+s]=e/a&255;return t+n},c.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||R(this,e,t,n,Math.pow(2,8*n)-1,0);var a=n-1,s=1;for(this[t+a]=255&e;--a>=0&&(s*=256);)this[t+a]=e/s&255;return t+n},c.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,1,255,0),c.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},c.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,65535,0),c.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):F(this,e,t,!0),t+2},c.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,65535,0),c.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):F(this,e,t,!1),t+2},c.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,4294967295,0),c.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):_(this,e,t,!0),t+4},c.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,4294967295,0),c.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):_(this,e,t,!1),t+4},c.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);R(this,e,t,n,a-1,-a)}var s=0,o=1,i=0;for(this[t]=255&e;++s<n&&(o*=256);)e<0&&0===i&&0!==this[t+s-1]&&(i=1),this[t+s]=(e/o>>0)-i&255;return t+n},c.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);R(this,e,t,n,a-1,-a)}var s=n-1,o=1,i=0;for(this[t+s]=255&e;--s>=0&&(o*=256);)e<0&&0===i&&0!==this[t+s+1]&&(i=1),this[t+s]=(e/o>>0)-i&255;return t+n},c.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,1,127,-128),c.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},c.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,32767,-32768),c.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):F(this,e,t,!0),t+2},c.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,32767,-32768),c.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):F(this,e,t,!1),t+2},c.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,2147483647,-2147483648),c.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):_(this,e,t,!0),t+4},c.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),c.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):_(this,e,t,!1),t+4},c.prototype.writeFloatLE=function(e,t,n){return D(this,e,t,!0,n)},c.prototype.writeFloatBE=function(e,t,n){return D(this,e,t,!1,n)},c.prototype.writeDoubleLE=function(e,t,n){return L(this,e,t,!0,n)},c.prototype.writeDoubleBE=function(e,t,n){return L(this,e,t,!1,n)},c.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var a,s=r-n;if(this===e&&n<t&&t<r)for(a=s-1;a>=0;--a)e[a+t]=this[a+n];else if(s<1e3||!c.TYPED_ARRAY_SUPPORT)for(a=0;a<s;++a)e[a+t]=this[a+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+s),t);return s},c.prototype.fill=function(e,t,n,r){if("string"===typeof e){if("string"===typeof t?(r=t,t=0,n=this.length):"string"===typeof n&&(r=n,n=this.length),1===e.length){var a=e.charCodeAt(0);a<256&&(e=a)}if(void 0!==r&&"string"!==typeof r)throw new TypeError("encoding must be a string");if("string"===typeof r&&!c.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"===typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var s;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"===typeof e)for(s=t;s<n;++s)this[s]=e;else{var o=c.isBuffer(e)?e:B(new c(e,r).toString()),i=o.length;for(s=0;s<n-t;++s)this[s+t]=o[s%i]}return this};var z=/[^+\/0-9A-Za-z-_]/g;function P(e){return e<16?"0"+e.toString(16):e.toString(16)}function B(e,t){var n;t=t||1/0;for(var r=e.length,a=null,s=[],o=0;o<r;++o){if((n=e.charCodeAt(o))>55295&&n<57344){if(!a){if(n>56319){(t-=3)>-1&&s.push(239,191,189);continue}if(o+1===r){(t-=3)>-1&&s.push(239,191,189);continue}a=n;continue}if(n<56320){(t-=3)>-1&&s.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(t-=3)>-1&&s.push(239,191,189);if(a=null,n<128){if((t-=1)<0)break;s.push(n)}else if(n<2048){if((t-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function W(e){return r.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(z,"")).length<2)return"";for(;e.length%4!==0;)e+="=";return e}(e))}function U(e,t,n,r){for(var a=0;a<r&&!(a+n>=t.length||a>=e.length);++a)t[a+n]=e[a];return a}}).call(this,n(140))},function(e,t){e.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(N){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},o={};function i(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=o[e])?r:(n=u(e,(0|e)<0?-1:0,!0),a&&(o[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function c(e,t){if(isNaN(e))return t?y:b;if(t){if(e<0)return y;if(e>=f)return k}else{if(e<=-m)return S;if(e+1>=m)return O}return e<0?c(-e,t).neg():u(e%p|0,e/p|0,t)}function u(e,t,n){return new r(e,t,n)}r.fromInt=i,r.fromNumber=c,r.fromBits=u;var l=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return b;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return d(e.substring(1),t,n).neg();for(var a=c(l(n,8)),s=b,o=0;o<e.length;o+=8){var i=Math.min(8,e.length-o),u=parseInt(e.substring(o,o+i),n);if(i<8){var h=c(l(n,i));s=s.mul(h).add(c(u))}else s=(s=s.mul(a)).add(c(u))}return s.unsigned=t,s}function h(e,t){return"number"===typeof e?c(e,t):"string"===typeof e?d(e,t):u(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}r.fromString=d,r.fromValue=h;var p=4294967296,f=p*p,m=f/2,g=i(1<<24),b=i(0);r.ZERO=b;var y=i(0,!0);r.UZERO=y;var v=i(1);r.ONE=v;var x=i(1,!0);r.UONE=x;var w=i(-1);r.NEG_ONE=w;var O=u(-1,2147483647,!1);r.MAX_VALUE=O;var k=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=k;var S=u(0,-2147483648,!1);r.MIN_VALUE=S;var I=r.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=c(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=c(l(e,6),this.unsigned),s=this,o="";;){var i=s.div(a),u=(s.sub(i.mul(a)).toInt()>>>0).toString(e);if((s=i).isZero())return u+o;for(;u.length<6;)u="0"+u;o=""+u+o}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return 1===(1&this.low)},I.isEven=function(){return 0===(1&this.low)},I.equals=function(e){return a(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(a(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(v)},I.neg=I.negate,I.add=function(e){a(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,i=65535&e.high,c=e.low>>>16,l=0,d=0,p=0,f=0;return p+=(f+=s+(65535&e.low))>>>16,d+=(p+=r+c)>>>16,l+=(d+=n+i)>>>16,l+=t+o,u((p&=65535)<<16|(f&=65535),(l&=65535)<<16|(d&=65535),this.unsigned)},I.subtract=function(e){return a(e)||(e=h(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return b;if(a(e)||(e=h(e)),n)return u(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return b;if(this.eq(S))return e.isOdd()?S:b;if(e.eq(S))return this.isOdd()?S:b;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return c(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,s=this.low>>>16,o=65535&this.low,i=e.high>>>16,l=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,m=0,y=0,v=0;return y+=(v+=o*p)>>>16,m+=(y+=s*p)>>>16,y&=65535,m+=(y+=o*d)>>>16,f+=(m+=r*p)>>>16,m&=65535,f+=(m+=s*d)>>>16,m&=65535,f+=(m+=o*l)>>>16,f+=t*p+r*d+s*l+o*i,u((y&=65535)<<16|(v&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(a(e)||(e=h(e)),e.isZero())throw Error("division by zero");var t,r,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:b;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;s=y}else{if(this.eq(S))return e.eq(v)||e.eq(w)?S:e.eq(S)?v:(t=this.shr(1).div(e).shl(1)).eq(b)?e.isNegative()?v:w:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(S))return this.unsigned?y:b;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=b}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(t)/Math.LN2),i=o<=48?1:l(2,o-48),d=c(t),p=d.mul(e);p.isNegative()||p.gt(r);)p=(d=c(t-=i,this.unsigned)).mul(e);d.isZero()&&(d=v),s=s.add(d),r=r.sub(p)}return s},I.div=I.divide,I.modulo=function(e){return a(e)||(e=h(e)),n?u((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return u(~this.low,~this.high,this.unsigned)},I.and=function(e){return a(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return a(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return a(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},function(e,t,n){"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}}(),e.exports=n(238)},function(e,t,n){(function(e){var r="undefined"!==typeof e&&e||"undefined"!==typeof self&&self||window,a=Function.prototype.apply;function s(e,t){this._id=e,this._clearFn=t}t.setTimeout=function(){return new s(a.call(setTimeout,r,arguments),clearTimeout)},t.setInterval=function(){return new s(a.call(setInterval,r,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},s.prototype.unref=s.prototype.ref=function(){},s.prototype.close=function(){this._clearFn.call(r,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout((function(){e._onTimeout&&e._onTimeout()}),t))},n(241),t.setImmediate="undefined"!==typeof self&&self.setImmediate||"undefined"!==typeof e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate="undefined"!==typeof self&&self.clearImmediate||"undefined"!==typeof e&&e.clearImmediate||this&&this.clearImmediate}).call(this,n(140))},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({acos_:function(e){const t={x:Object(s.a)(e,"x","acos")};return r.a.runKernel(a.b,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({acosh_:function(e){const t={x:Object(s.a)(e,"x","acosh")};return r.a.runKernel(a.c,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({asin_:function(e){const t={x:Object(s.a)(e,"x","asin")};return r.a.runKernel(a.j,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({asinh_:function(e){const t={x:Object(s.a)(e,"x","asinh")};return r.a.runKernel(a.k,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({atan_:function(e){const t={x:Object(s.a)(e,"x","atan")};return r.a.runKernel(a.l,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({atanh_:function(e){const t={x:Object(s.a)(e,"x","atanh")};return r.a.runKernel(a.n,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({ceil_:function(e){const t={x:Object(s.a)(e,"x","ceil","float32")};return r.a.runKernel(a.z,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(72),c=n(4);const u=Object(c.b)({clipByValue_:function(e,t,n){const c=Object(s.a)(e,"x","clipByValue");if(o.c(t<=n,()=>"Error in clip: min (".concat(t,") must be ")+"less than or equal to max (".concat(n,").")),t===n)return Object(i.a)(c.shape,t,c.dtype);const u={x:c},l={clipValueMin:t,clipValueMax:n};return r.a.runKernel(a.A,u,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(3),s=n(2),o=n(8),i=n(11),c=n(4);const u=Object(c.b)({erf_:function(e){let t=Object(s.a)(e,"x","erf");o.c("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=Object(i.a)(t,"float32"));const n={x:t};return r.a.runKernel(a.db,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({expm1_:function(e){const t={x:Object(s.a)(e,"x","expm1")};return r.a.runKernel(a.gb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({isFinite_:function(e){const t={x:Object(s.a)(e,"x","isFinite")};return r.a.runKernel(a.xb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({isInf_:function(e){const t={x:Object(s.a)(e,"x","isInf")};return r.a.runKernel(a.yb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({isNaN_:function(e){const t={x:Object(s.a)(e,"x","isNaN")};return r.a.runKernel(a.zb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(32),a=n(2),s=n(9),o=n(28),i=n(4),c=n(65),u=n(159);const l=Object(i.b)({logSigmoid_:function(e){const t=Object(a.a)(e,"x","logSigmoid");return Object(r.a)(e=>({value:Object(o.a)(Object(u.a)(Object(o.a)(e))),gradFunc:t=>Object(s.a)(t,Object(c.a)(Object(o.a)(e)))}))(t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var r=n(32),a=n(2),s=n(11),o=n(36),i=n(69),c=n(66),u=n(9),l=n(4),d=n(13),h=n(16);const p=Object(l.b)({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=Object(a.a)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(t));const l=Object(r.a)((e,n)=>{const r=Object(c.a)(e,t,!0),a=Object(d.a)(e,r),l=Object(d.a)(Object(s.a)(a,"float32"),Object(i.a)(Object(h.a)(Object(o.a)(a),t,!0)));n([l]);return{value:l,gradFunc:(e,n)=>{const[r]=n,a=Object(o.a)(r);return Object(d.a)(e,Object(u.a)(Object(h.a)(e,t,!0),a))}}});return l(n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({onesLike_:function(e){const t={x:Object(s.a)(e,"x","onesLike")};return r.a.runKernel(a.gc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({reciprocal_:function(e){const t={x:Object(s.a)(e,"x","reciprocal")};return r.a.runKernel(a.sc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({sign_:function(e){const t={x:Object(s.a)(e,"x","sign")};return r.a.runKernel(a.Jc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=Object(s.a)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(t));const o={logits:n},i={dim:t};return r.a.runKernel(a.Nc,o,i)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({stridedSlice_:function(e,t,n,o){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,u=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,l=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,d=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const h=Object(s.a)(e,"x","stridedSlice","string_or_numeric"),p={x:h},f={begin:t,end:n,strides:o,beginMask:i,endMask:c,ellipsisMask:u,newAxisMask:l,shrinkAxisMask:d};return r.a.runKernel(a.bd,p,f)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(2),o=n(4);const i=Object(o.b)({tan_:function(e){const t={x:Object(s.a)(e,"x","tan","float32")};return r.a.runKernel(a.hd,t)}})},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return a}));const r="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof e?e:e=>e();function a(){return new Promise(e=>r(()=>e()))}}).call(this,n(188).setImmediate)},function(e,t,n){"use strict";var r=n(187);t.createRoot=r.createRoot,t.hydrateRoot=r.hydrateRoot},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}]},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return o}));var r=n(0),a=n(41),s=n(232);class o extends a.a{decodeUTF8(){return new i(this)}}class i extends s.a{constructor(e){super(),this.upstream=e,this.impl=new c(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class c extends a.b{constructor(e){if(super(),this.upstream=e,Object(r.he)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(257);this.decoder=new e("utf8")}}summary(){return"".concat(this.upstream.summary()," -> Utf8")}async pump(){const t=await this.upstream.next();let n,a;return!t.done&&(n=t.value,a=Object(r.he)().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(e.from(n.buffer)),this.outputQueue.push(a),!0)}}}).call(this,n(185).Buffer)},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(41);class a extends r.a{split(e){return new s(this,e)}}class s extends a{constructor(e,t){super(),this.upstream=e,this.impl=new o(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class o extends r.b{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return"".concat(this.upstream.summary()," -> Split('").concat(this.separator,"')")}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(131),a=n(0);function s(e,t,n,r){return new(n||(n=Promise))((function(a,s){function o(e){try{c(r.next(e))}catch(t){s(t)}}function i(e){try{c(r.throw(e))}catch(t){s(t)}}function c(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,i)}c((r=r.apply(e,t||[])).next())}))}function o(e,t){var n,r,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:i(0),throw:i(1),return:i(2)},"function"===typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function i(s){return function(i){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,r=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(a=(a=o.trys).length>0&&a[a.length-1])&&(6===s[0]||2===s[0])){o=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){o.label=s[1];break}if(6===s[0]&&o.label<a[1]){o.label=a[1],a=s;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(s);break}a[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(i){s=[6,i],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,i])}}}var i=function(){function e(e){this.key=e,this.children={},this.end=!1}return e.prototype.getWord=function(){for(var e=[],t=this;null!=t;)null!=t.key&&e.unshift(t.key),t=t.parent;return[e,this.score,this.index]},e}(),c=function(){function e(){this.root=new i(null)}return e.prototype.insert=function(e,t,n){for(var r=this.root,a=[],s=0,o=e;s<o.length;s++){var c=o[s];a.push(c)}for(var u=0;u<a.length;u++)null==r.children[a[u]]&&(r.children[a[u]]=new i(a[u]),r.children[a[u]].parent=r),r=r.children[a[u]],u===a.length-1&&(r.end=!0,r.score=t,r.index=n)},e.prototype.find=function(e){for(var t=this.root,n=0;n<e.length&&null!=t;)t=t.children[e[n]],n++;return t},e}();function u(e){return/\s/.test(e)}function l(e){return 0===e.charCodeAt(0)||65533===e.charCodeAt(0)}function d(e){return-1!=="[~`!@#$%^&*(){}[];:\"'<,.>?/\\|-_+=".indexOf(e)}var h=function(){function e(){}return e.prototype.load=function(){return s(this,void 0,void 0,(function(){var e,t,n;return o(this,(function(r){switch(r.label){case 0:return e=this,[4,this.loadVocab()];case 1:for(e.vocab=r.sent(),this.trie=new c,t=999;t<this.vocab.length;t++)n=this.vocab[t],this.trie.insert(n,1,t);return[2]}}))}))},e.prototype.loadVocab=function(){return s(this,void 0,void 0,(function(){return o(this,(function(e){return[2,a.Mf.fetch("https://tfhub.dev/tensorflow/tfjs-model/mobilebert/1/processed_vocab.json?tfjs-format=file").then((function(e){return e.json()}))]}))}))},e.prototype.processInput=function(e){for(var t=this,n=[],r=this.cleanText(e,n).split(" "),a=0,s=r.map((function(e){e=e.toLowerCase();var r=t.runSplitOnPunc(e,a,n);return a+=e.length+1,r})),o=[],i=0;i<s.length;i++)o=o.concat(s[i]);return o},e.prototype.cleanText=function(e,t){for(var n=[],r=0,a=0,s=0,o=e;s<o.length;s++){var i=o[s];if(l(i))r+=i.length;else{if(u(i)){if(!(n.length>0&&" "!==n[n.length-1])){r+=i.length;continue}n.push(" "),t[a]=r,r+=i.length}else n.push(i),t[a]=r,r+=i.length;a++}}return n.join("")},e.prototype.runSplitOnPunc=function(e,t,n){for(var r=[],a=!0,s=0,o=e;s<o.length;s++){var i=o[s];d(i)?(r.push({text:i,index:n[t]}),t+=i.length,a=!0):(a&&(r.push({text:"",index:n[t]}),a=!1),r[r.length-1].text+=i,t+=i.length)}return r},e.prototype.tokenize=function(e){var t=[],n=this.processInput(e);n.forEach((function(e){"[CLS]"!==e.text&&"[SEP]"!==e.text&&(e.text="".concat("\u2581").concat(e.text.normalize("NFKC")))}));for(var r=0;r<n.length;r++){for(var a=[],s=0,o=n[r].text;s<o.length;s++){var i=o[s];a.push(i)}for(var c=!1,u=0,l=[],d=a.length;u<d;){for(var h=d,p=void 0;u<h;){var f=a.slice(u,h).join(""),m=this.trie.find(f);if(null!=m&&null!=m.end){p=m.getWord()[2];break}h-=1}if(null==p){c=!0;break}l.push(p),u=h}c?t.push(100):t=t.concat(l)}return t},e}();function p(){return s(this,void 0,void 0,(function(){var e;return o(this,(function(t){switch(t.label){case 0:return[4,(e=new h).load()];case 1:return t.sent(),[2,e]}}))}))}var f=function(){function e(e){this.modelConfig=e,null==this.modelConfig&&(this.modelConfig={modelUrl:"https://tfhub.dev/tensorflow/tfjs-model/mobilebert/1",fromTFHub:!0}),null==this.modelConfig.fromTFHub&&(this.modelConfig.fromTFHub=!1)}return e.prototype.process=function(e,t,n,r,a){void 0===a&&(a=128),e=(e=e.replace(/\?/g,"")).trim(),e+="?";var s=this.tokenizer.tokenize(e);if(s.length>n)throw new Error("The length of question token exceeds the limit (".concat(n,")."));for(var o=this.tokenizer.processInput(t.trim()),i=[],c=[],u=0;u<o.length;u++)for(var l=o[u].text,d=this.tokenizer.tokenize(l),h=0;h<d.length;h++){var p=d[h];i.push(u),c.push(p)}for(var f=r-s.length-3,m=[],g=0;g<c.length;){var b=c.length-g;if(b>f&&(b=f),m.push({start:g,length:b}),g+b===c.length)break;g+=Math.min(b,a)}return m.map((function(e){var t=[],n=[],a={};t.push(101),n.push(0);for(var u=0;u<s.length;u++){var l=s[u];t.push(l),n.push(0)}t.push(102),n.push(0);for(u=0;u<e.length;u++){var d=u+e.start,h=c[d];t.push(h),n.push(1),a[t.length]=i[d]}t.push(102),n.push(1);for(var p=t,f=p.map((function(e){return 1}));p.length<r;)p.push(0),f.push(0),n.push(0);return{inputIds:p,inputMask:f,segmentIds:n,origTokens:o,tokenToOrigMap:a}}))},e.prototype.load=function(){return s(this,void 0,void 0,(function(){var e,t,n,s,i;return o(this,(function(o){switch(o.label){case 0:return e=this,[4,Object(r.a)(this.modelConfig.modelUrl,{fromTFHub:this.modelConfig.fromTFHub})];case 1:return e.model=o.sent(),1,t=Object(a.Se)([1,384],"int32"),n=Object(a.Se)([1,384],"int32"),s=Object(a.Se)([1,384],"int32"),this.model.execute({input_ids:t,segment_ids:n,input_mask:s,global_step:Object(a.ff)(1,"int32")}),i=this,[4,p()];case 2:return i.tokenizer=o.sent(),[2]}}))}))},e.prototype.findAnswers=function(e,t){return s(this,void 0,void 0,(function(){var n,r,s,i,c,u,l,d,h,p,f=this;return o(this,(function(o){switch(o.label){case 0:if(null==e||null==t)throw new Error("The input to findAnswers call is null, please pass a string as input.");return n=this.process(e,t,64,384),r=n.map((function(e){return e.inputIds})),s=n.map((function(e){return e.segmentIds})),i=n.map((function(e){return e.inputMask})),c=Object(a.ff)(1,"int32"),u=n.length,l=Object(a.Ff)((function(){var e=Object(a.Df)(r,[u,384],"int32"),t=Object(a.Df)(s,[u,384],"int32"),n=Object(a.Df)(i,[u,384],"int32");return f.model.execute({input_ids:e,segment_ids:t,input_mask:n,global_step:c},["start_logits","end_logits"])})),[4,Promise.all([l[0].array(),l[1].array()])];case 1:for(d=o.sent(),c.dispose(),l[0].dispose(),l[1].dispose(),h=[],p=0;p<u;p++)h.push(this.getBestAnswers(d[0][p],d[1][p],n[p].origTokens,n[p].tokenToOrigMap,t,p));return[2,h.reduce((function(e,t){return e.concat(t)}),[]).sort((function(e,t){return t.score-e.score})).slice(0,5)]}}))}))},e.prototype.getBestAnswers=function(e,t,n,r,a,s){var o,i=this.getBestIndex(e),c=this.getBestIndex(t),u=[];i.forEach((function(n){c.forEach((function(a){r[n+1]&&r[a+1]&&a>=n&&(a-n+1<32&&u.push({start:n,end:a,score:e[n]+t[a]}))}))})),u.sort((function(e,t){return t.score-e.score}));for(var l=[],d=0;d<u.length&&!(d>=5||u[d].score<4.3980759382247925);d++){var h="",p=0,f=0;u[d].start>0?(h=(o=this.convertBack(n,r,u[d].start,u[d].end,a))[0],p=o[1],f=o[2]):h="",l.push({text:h,score:u[d].score,startIndex:p,endIndex:f})}return l},e.prototype.getBestIndex=function(e){for(var t=[],n=0;n<384;n++)t.push([n,n,e[n]]);t.sort((function(e,t){return t[2]-e[2]}));var r=[];for(n=0;n<5;n++)r.push(t[n][0]);return r},e.prototype.convertBack=function(e,t,n,r,a){var s=r+1,o=t[n+1],i=t[s],c=e[o].index,u=i<e.length-1?e[i+1].index-1:e[i].index+e[i].text.length;return[a.slice(c,u+1).trim(),c,u]},e}();function m(e){return s(this,void 0,void 0,(function(){var t;return o(this,(function(n){switch(n.label){case 0:return[4,(t=new f(e)).load()];case 1:return n.sent(),[2,t]}}))}))}},,,,function(e,t,n){"use strict";var r=Symbol.for("react.element"),a=Symbol.for("react.portal"),s=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),c=Symbol.for("react.provider"),u=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),d=Symbol.for("react.suspense"),h=Symbol.for("react.memo"),p=Symbol.for("react.lazy"),f=Symbol.iterator;var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g=Object.assign,b={};function y(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||m}function v(){}function x(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||m}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=y.prototype;var w=x.prototype=new v;w.constructor=x,g(w,y.prototype),w.isPureReactComponent=!0;var O=Array.isArray,k=Object.prototype.hasOwnProperty,S={current:null},I={key:!0,ref:!0,__self:!0,__source:!0};function N(e,t,n){var a,s={},o=null,i=null;if(null!=t)for(a in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)k.call(t,a)&&!I.hasOwnProperty(a)&&(s[a]=t[a]);var c=arguments.length-2;if(1===c)s.children=n;else if(1<c){for(var u=Array(c),l=0;l<c;l++)u[l]=arguments[l+2];s.children=u}if(e&&e.defaultProps)for(a in c=e.defaultProps)void 0===s[a]&&(s[a]=c[a]);return{$$typeof:r,type:e,key:o,ref:i,props:s,_owner:S.current}}function T(e){return"object"===typeof e&&null!==e&&e.$$typeof===r}var j=/\/+/g;function E(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function C(e,t,n,s,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var c=!1;if(null===e)c=!0;else switch(i){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case r:case a:c=!0}}if(c)return o=o(c=e),e=""===s?"."+E(c,0):s,O(o)?(n="",null!=e&&(n=e.replace(j,"$&/")+"/"),C(o,t,n,"",(function(e){return e}))):null!=o&&(T(o)&&(o=function(e,t){return{$$typeof:r,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,n+(!o.key||c&&c.key===o.key?"":(""+o.key).replace(j,"$&/")+"/")+e)),t.push(o)),1;if(c=0,s=""===s?".":s+":",O(e))for(var u=0;u<e.length;u++){var l=s+E(i=e[u],u);c+=C(i,t,n,l,o)}else if("function"===typeof(l=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=f&&e[f]||e["@@iterator"])?e:null}(e)))for(e=l.call(e),u=0;!(i=e.next()).done;)c+=C(i=i.value,t,n,l=s+E(i,u++),o);else if("object"===i)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return c}function A(e,t,n){if(null==e)return e;var r=[],a=0;return C(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function R(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var F={current:null},_={transition:null},M={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:_,ReactCurrentOwner:S};t.Children={map:A,forEach:function(e,t,n){A(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return A(e,(function(){t++})),t},toArray:function(e){return A(e,(function(e){return e}))||[]},only:function(e){if(!T(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=s,t.Profiler=i,t.PureComponent=x,t.StrictMode=o,t.Suspense=d,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=M,t.cloneElement=function(e,t,n){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=g({},e.props),s=e.key,o=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,i=S.current),void 0!==t.key&&(s=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(u in t)k.call(t,u)&&!I.hasOwnProperty(u)&&(a[u]=void 0===t[u]&&void 0!==c?c[u]:t[u])}var u=arguments.length-2;if(1===u)a.children=n;else if(1<u){c=Array(u);for(var l=0;l<u;l++)c[l]=arguments[l+2];a.children=c}return{$$typeof:r,type:e.type,key:s,ref:o,props:a,_owner:i}},t.createContext=function(e){return(e={$$typeof:u,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},t.createElement=N,t.createFactory=function(e){var t=N.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:l,render:e}},t.isValidElement=T,t.lazy=function(e){return{$$typeof:p,_payload:{_status:-1,_result:e},_init:R}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=_.transition;_.transition={};try{e()}finally{_.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return F.current.useCallback(e,t)},t.useContext=function(e){return F.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return F.current.useDeferredValue(e)},t.useEffect=function(e,t){return F.current.useEffect(e,t)},t.useId=function(){return F.current.useId()},t.useImperativeHandle=function(e,t,n){return F.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return F.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return F.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return F.current.useMemo(e,t)},t.useReducer=function(e,t,n){return F.current.useReducer(e,t,n)},t.useRef=function(e){return F.current.useRef(e)},t.useState=function(e){return F.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return F.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return F.current.useTransition()},t.version="18.2.0"},function(e,t,n){"use strict";var r=n(21),a=n(239);function s(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,i={};function c(e,t){u(e,t),u(e+"Capture",t)}function u(e,t){for(i[e]=t,e=0;e<t.length;e++)o.add(t[e])}var l=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=Object.prototype.hasOwnProperty,h=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function m(e,t,n,r,a,s,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=o}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var b=/[\-:]([a-z])/g;function y(e){return e[1].toUpperCase()}function v(e,t,n,r){var a=g.hasOwnProperty(t)?g[t]:null;(null!==a?0!==a.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null===t||"undefined"===typeof t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!d.call(f,e)||!d.call(p,e)&&(h.test(e)?f[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(b,y);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(b,y);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(b,y);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var x=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),O=Symbol.for("react.portal"),k=Symbol.for("react.fragment"),S=Symbol.for("react.strict_mode"),I=Symbol.for("react.profiler"),N=Symbol.for("react.provider"),T=Symbol.for("react.context"),j=Symbol.for("react.forward_ref"),E=Symbol.for("react.suspense"),C=Symbol.for("react.suspense_list"),A=Symbol.for("react.memo"),R=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var F=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var _=Symbol.iterator;function M(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=_&&e[_]||e["@@iterator"])?e:null}var D,L=Object.assign;function z(e){if(void 0===D)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);D=t&&t[1]||""}return"\n"+D+e}var P=!1;function B(e,t){if(!e||P)return"";P=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(u){var r=u}Reflect.construct(e,[],t)}else{try{t.call()}catch(u){r=u}e.call(t.prototype)}else{try{throw Error()}catch(u){r=u}e()}}catch(u){if(u&&r&&"string"===typeof u.stack){for(var a=u.stack.split("\n"),s=r.stack.split("\n"),o=a.length-1,i=s.length-1;1<=o&&0<=i&&a[o]!==s[i];)i--;for(;1<=o&&0<=i;o--,i--)if(a[o]!==s[i]){if(1!==o||1!==i)do{if(o--,0>--i||a[o]!==s[i]){var c="\n"+a[o].replace(" at new "," at ");return e.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",e.displayName)),c}}while(1<=o&&0<=i);break}}}finally{P=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?z(e):""}function W(e){switch(e.tag){case 5:return z(e.type);case 16:return z("Lazy");case 13:return z("Suspense");case 19:return z("SuspenseList");case 0:case 2:case 15:return e=B(e.type,!1);case 11:return e=B(e.type.render,!1);case 1:return e=B(e.type,!0);default:return""}}function U(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return function e(t){if(null==t)return null;if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t;switch(t){case k:return"Fragment";case O:return"Portal";case I:return"Profiler";case S:return"StrictMode";case E:return"Suspense";case C:return"SuspenseList"}if("object"===typeof t)switch(t.$$typeof){case T:return(t.displayName||"Context")+".Consumer";case N:return(t._context.displayName||"Context")+".Provider";case j:var n=t.render;return(t=t.displayName)||(t=""!==(t=n.displayName||n.name||"")?"ForwardRef("+t+")":"ForwardRef"),t;case A:return null!==(n=t.displayName||null)?n:e(t.type)||"Memo";case R:n=t._payload,t=t._init;try{return e(t(n))}catch(r){}}return null}(t);case 8:return t===S?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function V(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function G(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function H(e){e._valueTracker||(e._valueTracker=function(e){var t=G(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var a=n.get,s=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=G(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function K(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function X(e,t){var n=t.checked;return L({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Y(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=V(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Q(e,t){null!=(t=t.checked)&&v(e,"checked",t,!1)}function Z(e,t){Q(e,t);var n=V(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?$(e,t.type,n):t.hasOwnProperty("defaultValue")&&$(e,t.type,V(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function $(e,t,n){"number"===t&&K(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var ee=Array.isArray;function te(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+V(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function ne(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(s(91));return L({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function re(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(s(92));if(ee(n)){if(1<n.length)throw Error(s(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:V(n)}}function ae(e,t){var n=V(t.value),r=V(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function oe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ie(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?oe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ce,ue=function(e){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,a){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function le(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var de={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},he=["Webkit","ms","Moz","O"];function pe(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||de.hasOwnProperty(e)&&de[e]?(""+t).trim():t+"px"}function fe(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=pe(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(de).forEach((function(e){he.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),de[t]=de[e]}))}));var me=L({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ge(e,t){if(t){if(me[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(s(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(s(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(s(62))}}function be(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ye=null;function ve(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var xe=null,we=null,Oe=null;function ke(e){if(e=ha(e)){if("function"!==typeof xe)throw Error(s(280));var t=e.stateNode;t&&(t=fa(t),xe(e.stateNode,e.type,t))}}function Se(e){we?Oe?Oe.push(e):Oe=[e]:we=e}function Ie(){if(we){var e=we,t=Oe;if(Oe=we=null,ke(e),t)for(e=0;e<t.length;e++)ke(t[e])}}function Ne(e,t){return e(t)}function Te(){}var je=!1;function Ee(e,t,n){if(je)return e(t,n);je=!0;try{return Ne(e,t,n)}finally{je=!1,(null!==we||null!==Oe)&&(Te(),Ie())}}function Ce(e,t){var n=e.stateNode;if(null===n)return null;var r=fa(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(s(231,t,typeof n));return n}var Ae=!1;if(l)try{var Re={};Object.defineProperty(Re,"passive",{get:function(){Ae=!0}}),window.addEventListener("test",Re,Re),window.removeEventListener("test",Re,Re)}catch(Yu){Ae=!1}function Fe(e,t,n,r,a,s,o,i,c){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(l){this.onError(l)}}var _e=!1,Me=null,De=!1,Le=null,ze={onError:function(e){_e=!0,Me=e}};function Pe(e,t,n,r,a,s,o,i,c){_e=!1,Me=null,Fe.apply(ze,arguments)}function Be(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function We(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Ue(e){if(Be(e)!==e)throw Error(s(188))}function Ve(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Be(e)))throw Error(s(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return Ue(a),e;if(o===r)return Ue(a),t;o=o.sibling}throw Error(s(188))}if(n.return!==r.return)n=a,r=o;else{for(var i=!1,c=a.child;c;){if(c===n){i=!0,n=a,r=o;break}if(c===r){i=!0,r=a,n=o;break}c=c.sibling}if(!i){for(c=o.child;c;){if(c===n){i=!0,n=o,r=a;break}if(c===r){i=!0,r=o,n=a;break}c=c.sibling}if(!i)throw Error(s(189))}}if(n.alternate!==r)throw Error(s(190))}if(3!==n.tag)throw Error(s(188));return n.stateNode.current===n?e:t}(e))?function e(t){if(5===t.tag||6===t.tag)return t;for(t=t.child;null!==t;){var n=e(t);if(null!==n)return n;t=t.sibling}return null}(e):null}var Ge=a.unstable_scheduleCallback,He=a.unstable_cancelCallback,qe=a.unstable_shouldYield,Ke=a.unstable_requestPaint,Xe=a.unstable_now,Ye=a.unstable_getCurrentPriorityLevel,Qe=a.unstable_ImmediatePriority,Ze=a.unstable_UserBlockingPriority,Je=a.unstable_NormalPriority,$e=a.unstable_LowPriority,et=a.unstable_IdlePriority,tt=null,nt=null;var rt=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(at(e)/st|0)|0},at=Math.log,st=Math.LN2;var ot=64,it=4194304;function ct(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ut(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,a=e.suspendedLanes,s=e.pingedLanes,o=268435455&n;if(0!==o){var i=o&~a;0!==i?r=ct(i):0!==(s&=o)&&(r=ct(s))}else 0!==(o=n&~a)?r=ct(o):0!==s&&(r=ct(s));if(0===r)return 0;if(0!==t&&t!==r&&0===(t&a)&&((a=r&-r)>=(s=t&-t)||16===a&&0!==(4194240&s)))return t;if(0!==(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-rt(t)),r|=e[n],t&=~a;return r}function lt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:default:return-1}}function dt(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function ht(){var e=ot;return 0===(4194240&(ot<<=1))&&(ot=64),e}function pt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function ft(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-rt(t)]=n}function mt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-rt(n),a=1<<r;a&t|e[r]&t&&(e[r]|=t),n&=~a}}var gt=0;function bt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var yt,vt,xt,wt,Ot,kt=!1,St=[],It=null,Nt=null,Tt=null,jt=new Map,Et=new Map,Ct=[],At="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Rt(e,t){switch(e){case"focusin":case"focusout":It=null;break;case"dragenter":case"dragleave":Nt=null;break;case"mouseover":case"mouseout":Tt=null;break;case"pointerover":case"pointerout":jt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Et.delete(t.pointerId)}}function Ft(e,t,n,r,a,s){return null===e||e.nativeEvent!==s?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:s,targetContainers:[a]},null!==t&&(null!==(t=ha(t))&&vt(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function _t(e){var t=da(e.target);if(null!==t){var n=Be(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=We(n)))return e.blockedOn=t,void Ot(e.priority,(function(){xt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Mt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=qt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=ha(n))&&vt(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);ye=r,n.target.dispatchEvent(r),ye=null,t.shift()}return!0}function Dt(e,t,n){Mt(e)&&n.delete(t)}function Lt(){kt=!1,null!==It&&Mt(It)&&(It=null),null!==Nt&&Mt(Nt)&&(Nt=null),null!==Tt&&Mt(Tt)&&(Tt=null),jt.forEach(Dt),Et.forEach(Dt)}function zt(e,t){e.blockedOn===t&&(e.blockedOn=null,kt||(kt=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Lt)))}function Pt(e){function t(t){return zt(t,e)}if(0<St.length){zt(St[0],e);for(var n=1;n<St.length;n++){var r=St[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==It&&zt(It,e),null!==Nt&&zt(Nt,e),null!==Tt&&zt(Tt,e),jt.forEach(t),Et.forEach(t),n=0;n<Ct.length;n++)(r=Ct[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Ct.length&&null===(n=Ct[0]).blockedOn;)_t(n),null===n.blockedOn&&Ct.shift()}var Bt=x.ReactCurrentBatchConfig,Wt=!0;function Ut(e,t,n,r){var a=gt,s=Bt.transition;Bt.transition=null;try{gt=1,Gt(e,t,n,r)}finally{gt=a,Bt.transition=s}}function Vt(e,t,n,r){var a=gt,s=Bt.transition;Bt.transition=null;try{gt=4,Gt(e,t,n,r)}finally{gt=a,Bt.transition=s}}function Gt(e,t,n,r){if(Wt){var a=qt(e,t,n,r);if(null===a)Lr(e,t,r,Ht,n),Rt(e,r);else if(function(e,t,n,r,a){switch(t){case"focusin":return It=Ft(It,e,t,n,r,a),!0;case"dragenter":return Nt=Ft(Nt,e,t,n,r,a),!0;case"mouseover":return Tt=Ft(Tt,e,t,n,r,a),!0;case"pointerover":var s=a.pointerId;return jt.set(s,Ft(jt.get(s)||null,e,t,n,r,a)),!0;case"gotpointercapture":return s=a.pointerId,Et.set(s,Ft(Et.get(s)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r))r.stopPropagation();else if(Rt(e,r),4&t&&-1<At.indexOf(e)){for(;null!==a;){var s=ha(a);if(null!==s&&yt(s),null===(s=qt(e,t,n,r))&&Lr(e,t,r,Ht,n),s===a)break;a=s}null!==a&&r.stopPropagation()}else Lr(e,t,r,null,n)}}var Ht=null;function qt(e,t,n,r){if(Ht=null,null!==(e=da(e=ve(r))))if(null===(t=Be(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=We(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Ht=e,null}function Kt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Ye()){case Qe:return 1;case Ze:return 4;case Je:case $e:return 16;case et:return 536870912;default:return 16}default:return 16}}var Xt=null,Yt=null,Qt=null;function Zt(){if(Qt)return Qt;var e,t,n=Yt,r=n.length,a="value"in Xt?Xt.value:Xt.textContent,s=a.length;for(e=0;e<r&&n[e]===a[e];e++);var o=r-e;for(t=1;t<=o&&n[r-t]===a[s-t];t++);return Qt=a.slice(e,1<t?1-t:void 0)}function Jt(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function $t(){return!0}function en(){return!1}function tn(e){function t(t,n,r,a,s){for(var o in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(a):a[o]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?$t:en,this.isPropagationStopped=en,this}return L(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=$t)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=$t)},persist:function(){},isPersistent:$t}),t}var nn,rn,an,sn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},on=tn(sn),cn=L({},sn,{view:0,detail:0}),un=tn(cn),ln=L({},cn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:wn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==an&&(an&&"mousemove"===e.type?(nn=e.screenX-an.screenX,rn=e.screenY-an.screenY):rn=nn=0,an=e),nn)},movementY:function(e){return"movementY"in e?e.movementY:rn}}),dn=tn(ln),hn=tn(L({},ln,{dataTransfer:0})),pn=tn(L({},cn,{relatedTarget:0})),fn=tn(L({},sn,{animationName:0,elapsedTime:0,pseudoElement:0})),mn=tn(L({},sn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),gn=tn(L({},sn,{data:0})),bn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},yn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},vn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function xn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=vn[e])&&!!t[e]}function wn(){return xn}var On=tn(L({},cn,{key:function(e){if(e.key){var t=bn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Jt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?yn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:wn,charCode:function(e){return"keypress"===e.type?Jt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Jt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),kn=tn(L({},ln,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Sn=tn(L({},cn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:wn})),In=tn(L({},sn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Nn=tn(L({},ln,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Tn=[9,13,27,32],jn=l&&"CompositionEvent"in window,En=null;l&&"documentMode"in document&&(En=document.documentMode);var Cn=l&&"TextEvent"in window&&!En,An=l&&(!jn||En&&8<En&&11>=En),Rn=String.fromCharCode(32),Fn=!1;function _n(e,t){switch(e){case"keyup":return-1!==Tn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Mn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Dn=!1;var Ln={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function zn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Ln[e.type]:"textarea"===t}function Pn(e,t,n,r){Se(r),0<(t=Pr(t,"onChange")).length&&(n=new on("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Bn=null,Wn=null;function Un(e){Ar(e,0)}function Vn(e){if(q(pa(e)))return e}function Gn(e,t){if("change"===e)return t}var Hn=!1;if(l){var qn;if(l){var Kn="oninput"in document;if(!Kn){var Xn=document.createElement("div");Xn.setAttribute("oninput","return;"),Kn="function"===typeof Xn.oninput}qn=Kn}else qn=!1;Hn=qn&&(!document.documentMode||9<document.documentMode)}function Yn(){Bn&&(Bn.detachEvent("onpropertychange",Qn),Wn=Bn=null)}function Qn(e){if("value"===e.propertyName&&Vn(Wn)){var t=[];Pn(t,Wn,e,ve(e)),Ee(Un,t)}}function Zn(e,t,n){"focusin"===e?(Yn(),Wn=n,(Bn=t).attachEvent("onpropertychange",Qn)):"focusout"===e&&Yn()}function Jn(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Vn(Wn)}function $n(e,t){if("click"===e)return Vn(t)}function er(e,t){if("input"===e||"change"===e)return Vn(t)}var tr="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function nr(e,t){if(tr(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var a=n[r];if(!d.call(t,a)||!tr(e[a],t[a]))return!1}return!0}function rr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ar(e,t){var n,r=rr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=rr(r)}}function sr(){for(var e=window,t=K();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(r){n=!1}if(!n)break;t=K((e=t.contentWindow).document)}return t}function or(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function ir(e){var t=sr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(n.ownerDocument.documentElement,n)){if(null!==r&&or(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=n.textContent.length,s=Math.min(r.start,a);r=void 0===r.end?s:Math.min(r.end,a),!e.extend&&s>r&&(a=r,r=s,s=a),a=ar(n,s);var o=ar(n,r);a&&o&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),s>r?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var cr=l&&"documentMode"in document&&11>=document.documentMode,ur=null,lr=null,dr=null,hr=!1;function pr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;hr||null==ur||ur!==K(r)||("selectionStart"in(r=ur)&&or(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},dr&&nr(dr,r)||(dr=r,0<(r=Pr(lr,"onSelect")).length&&(t=new on("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=ur)))}function fr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var mr={animationend:fr("Animation","AnimationEnd"),animationiteration:fr("Animation","AnimationIteration"),animationstart:fr("Animation","AnimationStart"),transitionend:fr("Transition","TransitionEnd")},gr={},br={};function yr(e){if(gr[e])return gr[e];if(!mr[e])return e;var t,n=mr[e];for(t in n)if(n.hasOwnProperty(t)&&t in br)return gr[e]=n[t];return e}l&&(br=document.createElement("div").style,"AnimationEvent"in window||(delete mr.animationend.animation,delete mr.animationiteration.animation,delete mr.animationstart.animation),"TransitionEvent"in window||delete mr.transitionend.transition);var vr=yr("animationend"),xr=yr("animationiteration"),wr=yr("animationstart"),Or=yr("transitionend"),kr=new Map,Sr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Ir(e,t){kr.set(e,t),c(t,[e])}for(var Nr=0;Nr<Sr.length;Nr++){var Tr=Sr[Nr];Ir(Tr.toLowerCase(),"on"+(Tr[0].toUpperCase()+Tr.slice(1)))}Ir(vr,"onAnimationEnd"),Ir(xr,"onAnimationIteration"),Ir(wr,"onAnimationStart"),Ir("dblclick","onDoubleClick"),Ir("focusin","onFocus"),Ir("focusout","onBlur"),Ir(Or,"onTransitionEnd"),u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var jr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Er=new Set("cancel close invalid load scroll toggle".split(" ").concat(jr));function Cr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,o,i,c,u){if(Pe.apply(this,arguments),_e){if(!_e)throw Error(s(198));var l=Me;_e=!1,Me=null,De||(De=!0,Le=l)}}(r,t,void 0,e),e.currentTarget=null}function Ar(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var s=void 0;if(t)for(var o=r.length-1;0<=o;o--){var i=r[o],c=i.instance,u=i.currentTarget;if(i=i.listener,c!==s&&a.isPropagationStopped())break e;Cr(a,i,u),s=c}else for(o=0;o<r.length;o++){if(c=(i=r[o]).instance,u=i.currentTarget,i=i.listener,c!==s&&a.isPropagationStopped())break e;Cr(a,i,u),s=c}}}if(De)throw e=Le,De=!1,Le=null,e}function Rr(e,t){var n=t[ca];void 0===n&&(n=t[ca]=new Set);var r=e+"__bubble";n.has(r)||(Dr(t,e,2,!1),n.add(r))}function Fr(e,t,n){var r=0;t&&(r|=4),Dr(n,e,r,t)}var _r="_reactListening"+Math.random().toString(36).slice(2);function Mr(e){if(!e[_r]){e[_r]=!0,o.forEach((function(t){"selectionchange"!==t&&(Er.has(t)||Fr(t,!1,e),Fr(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[_r]||(t[_r]=!0,Fr("selectionchange",!1,t))}}function Dr(e,t,n,r){switch(Kt(t)){case 1:var a=Ut;break;case 4:a=Vt;break;default:a=Gt}n=a.bind(null,t,n,e),a=void 0,!Ae||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Lr(e,t,n,r,a){var s=r;if(0===(1&t)&&0===(2&t)&&null!==r)e:for(;;){if(null===r)return;var o=r.tag;if(3===o||4===o){var i=r.stateNode.containerInfo;if(i===a||8===i.nodeType&&i.parentNode===a)break;if(4===o)for(o=r.return;null!==o;){var c=o.tag;if((3===c||4===c)&&((c=o.stateNode.containerInfo)===a||8===c.nodeType&&c.parentNode===a))return;o=o.return}for(;null!==i;){if(null===(o=da(i)))return;if(5===(c=o.tag)||6===c){r=s=o;continue e}i=i.parentNode}}r=r.return}Ee((function(){var r=s,a=ve(n),o=[];e:{var i=kr.get(e);if(void 0!==i){var c=on,u=e;switch(e){case"keypress":if(0===Jt(n))break e;case"keydown":case"keyup":c=On;break;case"focusin":u="focus",c=pn;break;case"focusout":u="blur",c=pn;break;case"beforeblur":case"afterblur":c=pn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":c=dn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":c=hn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":c=Sn;break;case vr:case xr:case wr:c=fn;break;case Or:c=In;break;case"scroll":c=un;break;case"wheel":c=Nn;break;case"copy":case"cut":case"paste":c=mn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":c=kn}var l=0!==(4&t),d=!l&&"scroll"===e,h=l?null!==i?i+"Capture":null:i;l=[];for(var p,f=r;null!==f;){var m=(p=f).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==h&&(null!=(m=Ce(f,h))&&l.push(zr(f,m,p)))),d)break;f=f.return}0<l.length&&(i=new c(i,u,null,n,a),o.push({event:i,listeners:l}))}}if(0===(7&t)){if(c="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===ye||!(u=n.relatedTarget||n.fromElement)||!da(u)&&!u[ia])&&(c||i)&&(i=a.window===a?a:(i=a.ownerDocument)?i.defaultView||i.parentWindow:window,c?(c=r,null!==(u=(u=n.relatedTarget||n.toElement)?da(u):null)&&(u!==(d=Be(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(c=null,u=r),c!==u)){if(l=dn,m="onMouseLeave",h="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(l=kn,m="onPointerLeave",h="onPointerEnter",f="pointer"),d=null==c?i:pa(c),p=null==u?i:pa(u),(i=new l(m,f+"leave",c,n,a)).target=d,i.relatedTarget=p,m=null,da(a)===r&&((l=new l(h,f+"enter",u,n,a)).target=p,l.relatedTarget=d,m=l),d=m,c&&u)e:{for(h=u,f=0,p=l=c;p;p=Br(p))f++;for(p=0,m=h;m;m=Br(m))p++;for(;0<f-p;)l=Br(l),f--;for(;0<p-f;)h=Br(h),p--;for(;f--;){if(l===h||null!==h&&l===h.alternate)break e;l=Br(l),h=Br(h)}l=null}else l=null;null!==c&&Wr(o,i,c,l,!1),null!==u&&null!==d&&Wr(o,d,u,l,!0)}if("select"===(c=(i=r?pa(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===c&&"file"===i.type)var g=Gn;else if(zn(i))if(Hn)g=er;else{g=Jn;var b=Zn}else(c=i.nodeName)&&"input"===c.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(g=$n);switch(g&&(g=g(e,r))?Pn(o,g,n,a):(b&&b(e,i,r),"focusout"===e&&(b=i._wrapperState)&&b.controlled&&"number"===i.type&&$(i,"number",i.value)),b=r?pa(r):window,e){case"focusin":(zn(b)||"true"===b.contentEditable)&&(ur=b,lr=r,dr=null);break;case"focusout":dr=lr=ur=null;break;case"mousedown":hr=!0;break;case"contextmenu":case"mouseup":case"dragend":hr=!1,pr(o,n,a);break;case"selectionchange":if(cr)break;case"keydown":case"keyup":pr(o,n,a)}var y;if(jn)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Dn?_n(e,n)&&(v="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(v="onCompositionStart");v&&(An&&"ko"!==n.locale&&(Dn||"onCompositionStart"!==v?"onCompositionEnd"===v&&Dn&&(y=Zt()):(Yt="value"in(Xt=a)?Xt.value:Xt.textContent,Dn=!0)),0<(b=Pr(r,v)).length&&(v=new gn(v,e,null,n,a),o.push({event:v,listeners:b}),y?v.data=y:null!==(y=Mn(n))&&(v.data=y))),(y=Cn?function(e,t){switch(e){case"compositionend":return Mn(t);case"keypress":return 32!==t.which?null:(Fn=!0,Rn);case"textInput":return(e=t.data)===Rn&&Fn?null:e;default:return null}}(e,n):function(e,t){if(Dn)return"compositionend"===e||!jn&&_n(e,t)?(e=Zt(),Qt=Yt=Xt=null,Dn=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return An&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&(0<(r=Pr(r,"onBeforeInput")).length&&(a=new gn("onBeforeInput","beforeinput",null,n,a),o.push({event:a,listeners:r}),a.data=y))}Ar(o,t)}))}function zr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Pr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,s=a.stateNode;5===a.tag&&null!==s&&(a=s,null!=(s=Ce(e,n))&&r.unshift(zr(e,s,a)),null!=(s=Ce(e,t))&&r.push(zr(e,s,a))),e=e.return}return r}function Br(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Wr(e,t,n,r,a){for(var s=t._reactName,o=[];null!==n&&n!==r;){var i=n,c=i.alternate,u=i.stateNode;if(null!==c&&c===r)break;5===i.tag&&null!==u&&(i=u,a?null!=(c=Ce(n,s))&&o.unshift(zr(n,c,i)):a||null!=(c=Ce(n,s))&&o.push(zr(n,c,i))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Ur=/\r\n?/g,Vr=/\u0000|\uFFFD/g;function Gr(e){return("string"===typeof e?e:""+e).replace(Ur,"\n").replace(Vr,"")}function Hr(e,t,n){if(t=Gr(t),Gr(e)!==t&&n)throw Error(s(425))}function qr(){}var Kr=null,Xr=null;function Yr(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Qr="function"===typeof setTimeout?setTimeout:void 0,Zr="function"===typeof clearTimeout?clearTimeout:void 0,Jr="function"===typeof Promise?Promise:void 0,$r="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof Jr?function(e){return Jr.resolve(null).then(e).catch(ea)}:Qr;function ea(e){setTimeout((function(){throw e}))}function ta(e,t){var n=t,r=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===r)return e.removeChild(a),void Pt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=a}while(n);Pt(t)}function na(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ra(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var aa=Math.random().toString(36).slice(2),sa="__reactFiber$"+aa,oa="__reactProps$"+aa,ia="__reactContainer$"+aa,ca="__reactEvents$"+aa,ua="__reactListeners$"+aa,la="__reactHandles$"+aa;function da(e){var t=e[sa];if(t)return t;for(var n=e.parentNode;n;){if(t=n[ia]||n[sa]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ra(e);null!==e;){if(n=e[sa])return n;e=ra(e)}return t}n=(e=n).parentNode}return null}function ha(e){return!(e=e[sa]||e[ia])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function pa(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(s(33))}function fa(e){return e[oa]||null}var ma=[],ga=-1;function ba(e){return{current:e}}function ya(e){0>ga||(e.current=ma[ga],ma[ga]=null,ga--)}function va(e,t){ga++,ma[ga]=e.current,e.current=t}var xa={},wa=ba(xa),Oa=ba(!1),ka=xa;function Sa(e,t){var n=e.type.contextTypes;if(!n)return xa;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,s={};for(a in n)s[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function Ia(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Na(){ya(Oa),ya(wa)}function Ta(e,t,n){if(wa.current!==xa)throw Error(s(168));va(wa,t),va(Oa,n)}function ja(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!==typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in t))throw Error(s(108,U(e)||"Unknown",a));return L({},n,r)}function Ea(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||xa,ka=wa.current,va(wa,e),va(Oa,Oa.current),!0}function Ca(e,t,n){var r=e.stateNode;if(!r)throw Error(s(169));n?(e=ja(e,t,ka),r.__reactInternalMemoizedMergedChildContext=e,ya(Oa),ya(wa),va(wa,e)):ya(Oa),va(Oa,n)}var Aa=null,Ra=!1,Fa=!1;function _a(e){null===Aa?Aa=[e]:Aa.push(e)}function Ma(){if(!Fa&&null!==Aa){Fa=!0;var e=0,t=gt;try{var n=Aa;for(gt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}Aa=null,Ra=!1}catch(a){throw null!==Aa&&(Aa=Aa.slice(e+1)),Ge(Qe,Ma),a}finally{gt=t,Fa=!1}}return null}var Da=[],La=0,za=null,Pa=0,Ba=[],Wa=0,Ua=null,Va=1,Ga="";function Ha(e,t){Da[La++]=Pa,Da[La++]=za,za=e,Pa=t}function qa(e,t,n){Ba[Wa++]=Va,Ba[Wa++]=Ga,Ba[Wa++]=Ua,Ua=e;var r=Va;e=Ga;var a=32-rt(r)-1;r&=~(1<<a),n+=1;var s=32-rt(t)+a;if(30<s){var o=a-a%5;s=(r&(1<<o)-1).toString(32),r>>=o,a-=o,Va=1<<32-rt(t)+a|n<<a|r,Ga=s+e}else Va=1<<s|n<<a|r,Ga=e}function Ka(e){null!==e.return&&(Ha(e,1),qa(e,1,0))}function Xa(e){for(;e===za;)za=Da[--La],Da[La]=null,Pa=Da[--La],Da[La]=null;for(;e===Ua;)Ua=Ba[--Wa],Ba[Wa]=null,Ga=Ba[--Wa],Ba[Wa]=null,Va=Ba[--Wa],Ba[Wa]=null}var Ya=null,Qa=null,Za=!1,Ja=null;function $a(e,t){var n=wu(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function es(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,Ya=e,Qa=na(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,Ya=e,Qa=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Ua?{id:Va,overflow:Ga}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=wu(18,null,null,0)).stateNode=t,n.return=e,e.child=n,Ya=e,Qa=null,!0);default:return!1}}function ts(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function ns(e){if(Za){var t=Qa;if(t){var n=t;if(!es(e,t)){if(ts(e))throw Error(s(418));t=na(n.nextSibling);var r=Ya;t&&es(e,t)?$a(r,n):(e.flags=-4097&e.flags|2,Za=!1,Ya=e)}}else{if(ts(e))throw Error(s(418));e.flags=-4097&e.flags|2,Za=!1,Ya=e}}}function rs(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Ya=e}function as(e){if(e!==Ya)return!1;if(!Za)return rs(e),Za=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!Yr(e.type,e.memoizedProps)),t&&(t=Qa)){if(ts(e))throw ss(),Error(s(418));for(;t;)$a(e,t),t=na(t.nextSibling)}if(rs(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(s(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Qa=na(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Qa=null}}else Qa=Ya?na(e.stateNode.nextSibling):null;return!0}function ss(){for(var e=Qa;e;)e=na(e.nextSibling)}function os(){Qa=Ya=null,Za=!1}function is(e){null===Ja?Ja=[e]:Ja.push(e)}var cs=x.ReactCurrentBatchConfig;function us(e,t){if(e&&e.defaultProps){for(var n in t=L({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var ls=ba(null),ds=null,hs=null,ps=null;function fs(){ps=hs=ds=null}function ms(e){var t=ls.current;ya(ls),e._currentValue=t}function gs(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function bs(e,t){ds=e,ps=hs=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(pi=!0),e.firstContext=null)}function ys(e){var t=e._currentValue;if(ps!==e)if(e={context:e,memoizedValue:t,next:null},null===hs){if(null===ds)throw Error(s(308));hs=e,ds.dependencies={lanes:0,firstContext:e}}else hs=hs.next=e;return t}var vs=null;function xs(e){null===vs?vs=[e]:vs.push(e)}function ws(e,t,n,r){var a=t.interleaved;return null===a?(n.next=n,xs(t)):(n.next=a.next,a.next=n),t.interleaved=n,Os(e,r)}function Os(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var ks=!1;function Ss(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Is(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Ns(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Ts(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!==(2&yc)){var a=r.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),r.pending=t,Os(e,n)}return null===(a=r.interleaved)?(t.next=t,xs(r)):(t.next=a.next,a.next=t),r.interleaved=t,Os(e,n)}function js(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,mt(e,n)}}function Es(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,s=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===s?a=s=o:s=s.next=o,n=n.next}while(null!==n);null===s?a=s=t:s=s.next=t}else a=s=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:s,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Cs(e,t,n,r){var a=e.updateQueue;ks=!1;var s=a.firstBaseUpdate,o=a.lastBaseUpdate,i=a.shared.pending;if(null!==i){a.shared.pending=null;var c=i,u=c.next;c.next=null,null===o?s=u:o.next=u,o=c;var l=e.alternate;null!==l&&((i=(l=l.updateQueue).lastBaseUpdate)!==o&&(null===i?l.firstBaseUpdate=u:i.next=u,l.lastBaseUpdate=c))}if(null!==s){var d=a.baseState;for(o=0,l=u=c=null,i=s;;){var h=i.lane,p=i.eventTime;if((r&h)===h){null!==l&&(l=l.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var f=e,m=i;switch(h=t,p=n,m.tag){case 1:if("function"===typeof(f=m.payload)){d=f.call(p,d,h);break e}d=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(h="function"===typeof(f=m.payload)?f.call(p,d,h):f)||void 0===h)break e;d=L({},d,h);break e;case 2:ks=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(h=a.effects)?a.effects=[i]:h.push(i))}else p={eventTime:p,lane:h,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===l?(u=l=p,c=d):l=l.next=p,o|=h;if(null===(i=i.next)){if(null===(i=a.shared.pending))break;i=(h=i).next,h.next=null,a.lastBaseUpdate=h,a.shared.pending=null}}if(null===l&&(c=d),a.baseState=c,a.firstBaseUpdate=u,a.lastBaseUpdate=l,null!==(t=a.shared.interleaved)){a=t;do{o|=a.lane,a=a.next}while(a!==t)}else null===s&&(a.shared.lanes=0);Nc|=o,e.lanes=o,e.memoizedState=d}}function As(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!==typeof a)throw Error(s(191,a));a.call(r)}}}var Rs=(new r.Component).refs;function Fs(e,t,n,r){n=null===(n=n(r,t=e.memoizedState))||void 0===n?t:L({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var _s={isMounted:function(e){return!!(e=e._reactInternals)&&Be(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=Gc(),a=Hc(e),s=Ns(r,a);s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Ts(e,s,a))&&(qc(t,e,a,r),js(t,e,a))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=Gc(),a=Hc(e),s=Ns(r,a);s.tag=1,s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Ts(e,s,a))&&(qc(t,e,a,r),js(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=Gc(),r=Hc(e),a=Ns(n,r);a.tag=2,void 0!==t&&null!==t&&(a.callback=t),null!==(t=Ts(e,a,r))&&(qc(t,e,r,n),js(t,e,r))}};function Ms(e,t,n,r,a,s,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,s,o):!t.prototype||!t.prototype.isPureReactComponent||(!nr(n,r)||!nr(a,s))}function Ds(e,t,n){var r=!1,a=xa,s=t.contextType;return"object"===typeof s&&null!==s?s=ys(s):(a=Ia(t)?ka:wa.current,s=(r=null!==(r=t.contextTypes)&&void 0!==r)?Sa(e,a):xa),t=new t(n,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=_s,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=s),t}function Ls(e,t,n,r){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&_s.enqueueReplaceState(t,t.state,null)}function zs(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=Rs,Ss(e);var s=t.contextType;"object"===typeof s&&null!==s?a.context=ys(s):(s=Ia(t)?ka:wa.current,a.context=Sa(e,s)),a.state=e.memoizedState,"function"===typeof(s=t.getDerivedStateFromProps)&&(Fs(e,t,s,n),a.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof a.getSnapshotBeforeUpdate||"function"!==typeof a.UNSAFE_componentWillMount&&"function"!==typeof a.componentWillMount||(t=a.state,"function"===typeof a.componentWillMount&&a.componentWillMount(),"function"===typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&_s.enqueueReplaceState(a,a.state,null),Cs(e,n,a,r),a.state=e.memoizedState),"function"===typeof a.componentDidMount&&(e.flags|=4194308)}function Ps(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(s(309));var r=n.stateNode}if(!r)throw Error(s(147,e));var a=r,o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=a.refs;t===Rs&&(t=a.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!==typeof e)throw Error(s(284));if(!n._owner)throw Error(s(290,e))}return e}function Bs(e,t){throw e=Object.prototype.toString.call(t),Error(s(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Ws(e){return(0,e._init)(e._payload)}function Us(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=ku(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function c(e,t,n,r){return null===t||6!==t.tag?((t=Tu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function u(e,t,n,r){var s=n.type;return s===k?d(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===s||"object"===typeof s&&null!==s&&s.$$typeof===R&&Ws(s)===t.type)?((r=a(t,n.props)).ref=Ps(e,t,n),r.return=e,r):((r=Su(n.type,n.key,n.props,null,e.mode,r)).ref=Ps(e,t,n),r.return=e,r)}function l(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=ju(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function d(e,t,n,r,s){return null===t||7!==t.tag?((t=Iu(n,e.mode,r,s)).return=e,t):((t=a(t,n)).return=e,t)}function h(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Tu(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Su(t.type,t.key,t.props,null,e.mode,n)).ref=Ps(e,null,t),n.return=e,n;case O:return(t=ju(t,e.mode,n)).return=e,t;case R:return h(e,(0,t._init)(t._payload),n)}if(ee(t)||M(t))return(t=Iu(t,e.mode,n,null)).return=e,t;Bs(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==a?null:c(e,t,""+n,r);if("object"===typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===a?u(e,t,n,r):null;case O:return n.key===a?l(e,t,n,r):null;case R:return p(e,t,(a=n._init)(n._payload),r)}if(ee(n)||M(n))return null!==a?null:d(e,t,n,r,null);Bs(e,n)}return null}function f(e,t,n,r,a){if("string"===typeof r&&""!==r||"number"===typeof r)return c(t,e=e.get(n)||null,""+r,a);if("object"===typeof r&&null!==r){switch(r.$$typeof){case w:return u(t,e=e.get(null===r.key?n:r.key)||null,r,a);case O:return l(t,e=e.get(null===r.key?n:r.key)||null,r,a);case R:return f(e,t,n,(0,r._init)(r._payload),a)}if(ee(r)||M(r))return d(t,e=e.get(n)||null,r,a,null);Bs(t,r)}return null}function m(a,s,i,c){for(var u=null,l=null,d=s,m=s=0,g=null;null!==d&&m<i.length;m++){d.index>m?(g=d,d=null):g=d.sibling;var b=p(a,d,i[m],c);if(null===b){null===d&&(d=g);break}e&&d&&null===b.alternate&&t(a,d),s=o(b,s,m),null===l?u=b:l.sibling=b,l=b,d=g}if(m===i.length)return n(a,d),Za&&Ha(a,m),u;if(null===d){for(;m<i.length;m++)null!==(d=h(a,i[m],c))&&(s=o(d,s,m),null===l?u=d:l.sibling=d,l=d);return Za&&Ha(a,m),u}for(d=r(a,d);m<i.length;m++)null!==(g=f(d,a,m,i[m],c))&&(e&&null!==g.alternate&&d.delete(null===g.key?m:g.key),s=o(g,s,m),null===l?u=g:l.sibling=g,l=g);return e&&d.forEach((function(e){return t(a,e)})),Za&&Ha(a,m),u}function g(a,i,c,u){var l=M(c);if("function"!==typeof l)throw Error(s(150));if(null==(c=l.call(c)))throw Error(s(151));for(var d=l=null,m=i,g=i=0,b=null,y=c.next();null!==m&&!y.done;g++,y=c.next()){m.index>g?(b=m,m=null):b=m.sibling;var v=p(a,m,y.value,u);if(null===v){null===m&&(m=b);break}e&&m&&null===v.alternate&&t(a,m),i=o(v,i,g),null===d?l=v:d.sibling=v,d=v,m=b}if(y.done)return n(a,m),Za&&Ha(a,g),l;if(null===m){for(;!y.done;g++,y=c.next())null!==(y=h(a,y.value,u))&&(i=o(y,i,g),null===d?l=y:d.sibling=y,d=y);return Za&&Ha(a,g),l}for(m=r(a,m);!y.done;g++,y=c.next())null!==(y=f(m,a,g,y.value,u))&&(e&&null!==y.alternate&&m.delete(null===y.key?g:y.key),i=o(y,i,g),null===d?l=y:d.sibling=y,d=y);return e&&m.forEach((function(e){return t(a,e)})),Za&&Ha(a,g),l}return function e(r,s,o,c){if("object"===typeof o&&null!==o&&o.type===k&&null===o.key&&(o=o.props.children),"object"===typeof o&&null!==o){switch(o.$$typeof){case w:e:{for(var u=o.key,l=s;null!==l;){if(l.key===u){if((u=o.type)===k){if(7===l.tag){n(r,l.sibling),(s=a(l,o.props.children)).return=r,r=s;break e}}else if(l.elementType===u||"object"===typeof u&&null!==u&&u.$$typeof===R&&Ws(u)===l.type){n(r,l.sibling),(s=a(l,o.props)).ref=Ps(r,l,o),s.return=r,r=s;break e}n(r,l);break}t(r,l),l=l.sibling}o.type===k?((s=Iu(o.props.children,r.mode,c,o.key)).return=r,r=s):((c=Su(o.type,o.key,o.props,null,r.mode,c)).ref=Ps(r,s,o),c.return=r,r=c)}return i(r);case O:e:{for(l=o.key;null!==s;){if(s.key===l){if(4===s.tag&&s.stateNode.containerInfo===o.containerInfo&&s.stateNode.implementation===o.implementation){n(r,s.sibling),(s=a(s,o.children||[])).return=r,r=s;break e}n(r,s);break}t(r,s),s=s.sibling}(s=ju(o,r.mode,c)).return=r,r=s}return i(r);case R:return e(r,s,(l=o._init)(o._payload),c)}if(ee(o))return m(r,s,o,c);if(M(o))return g(r,s,o,c);Bs(r,o)}return"string"===typeof o&&""!==o||"number"===typeof o?(o=""+o,null!==s&&6===s.tag?(n(r,s.sibling),(s=a(s,o)).return=r,r=s):(n(r,s),(s=Tu(o,r.mode,c)).return=r,r=s),i(r)):n(r,s)}}var Vs=Us(!0),Gs=Us(!1),Hs={},qs=ba(Hs),Ks=ba(Hs),Xs=ba(Hs);function Ys(e){if(e===Hs)throw Error(s(174));return e}function Qs(e,t){switch(va(Xs,t),va(Ks,e),va(qs,Hs),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ie(null,"");break;default:t=ie(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}ya(qs),va(qs,t)}function Zs(){ya(qs),ya(Ks),ya(Xs)}function Js(e){Ys(Xs.current);var t=Ys(qs.current),n=ie(t,e.type);t!==n&&(va(Ks,e),va(qs,n))}function $s(e){Ks.current===e&&(ya(qs),ya(Ks))}var eo=ba(0);function to(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var no=[];function ro(){for(var e=0;e<no.length;e++)no[e]._workInProgressVersionPrimary=null;no.length=0}var ao=x.ReactCurrentDispatcher,so=x.ReactCurrentBatchConfig,oo=0,io=null,co=null,uo=null,lo=!1,ho=!1,po=0,fo=0;function mo(){throw Error(s(321))}function go(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!tr(e[n],t[n]))return!1;return!0}function bo(e,t,n,r,a,o){if(oo=o,io=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ao.current=null===e||null===e.memoizedState?ei:ti,e=n(r,a),ho){o=0;do{if(ho=!1,po=0,25<=o)throw Error(s(301));o+=1,uo=co=null,t.updateQueue=null,ao.current=ni,e=n(r,a)}while(ho)}if(ao.current=$o,t=null!==co&&null!==co.next,oo=0,uo=co=io=null,lo=!1,t)throw Error(s(300));return e}function yo(){var e=0!==po;return po=0,e}function vo(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===uo?io.memoizedState=uo=e:uo=uo.next=e,uo}function xo(){if(null===co){var e=io.alternate;e=null!==e?e.memoizedState:null}else e=co.next;var t=null===uo?io.memoizedState:uo.next;if(null!==t)uo=t,co=e;else{if(null===e)throw Error(s(310));e={memoizedState:(co=e).memoizedState,baseState:co.baseState,baseQueue:co.baseQueue,queue:co.queue,next:null},null===uo?io.memoizedState=uo=e:uo=uo.next=e}return uo}function wo(e,t){return"function"===typeof t?t(e):t}function Oo(e){var t=xo(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var r=co,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var i=a.next;a.next=o.next,o.next=i}r.baseQueue=a=o,n.pending=null}if(null!==a){o=a.next,r=r.baseState;var c=i=null,u=null,l=o;do{var d=l.lane;if((oo&d)===d)null!==u&&(u=u.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),r=l.hasEagerState?l.eagerState:e(r,l.action);else{var h={lane:d,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null};null===u?(c=u=h,i=r):u=u.next=h,io.lanes|=d,Nc|=d}l=l.next}while(null!==l&&l!==o);null===u?i=r:u.next=c,tr(r,t.memoizedState)||(pi=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=u,n.lastRenderedState=r}if(null!==(e=n.interleaved)){a=e;do{o=a.lane,io.lanes|=o,Nc|=o,a=a.next}while(a!==e)}else null===a&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function ko(e){var t=xo(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var i=a=a.next;do{o=e(o,i.action),i=i.next}while(i!==a);tr(o,t.memoizedState)||(pi=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function So(){}function Io(e,t){var n=io,r=xo(),a=t(),o=!tr(r.memoizedState,a);if(o&&(r.memoizedState=a,pi=!0),r=r.queue,Lo(jo.bind(null,n,r,e),[e]),r.getSnapshot!==t||o||null!==uo&&1&uo.memoizedState.tag){if(n.flags|=2048,Ro(9,To.bind(null,n,r,a,t),void 0,null),null===vc)throw Error(s(349));0!==(30&oo)||No(n,t,a)}return a}function No(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=io.updateQueue)?(t={lastEffect:null,stores:null},io.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function To(e,t,n,r){t.value=n,t.getSnapshot=r,Eo(t)&&Co(e)}function jo(e,t,n){return n((function(){Eo(t)&&Co(e)}))}function Eo(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!tr(e,n)}catch(r){return!0}}function Co(e){var t=Os(e,1);null!==t&&qc(t,e,1,-1)}function Ao(e){var t=vo();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:wo,lastRenderedState:e},t.queue=e,e=e.dispatch=Yo.bind(null,io,e),[t.memoizedState,e]}function Ro(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=io.updateQueue)?(t={lastEffect:null,stores:null},io.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Fo(){return xo().memoizedState}function _o(e,t,n,r){var a=vo();io.flags|=e,a.memoizedState=Ro(1|t,n,void 0,void 0===r?null:r)}function Mo(e,t,n,r){var a=xo();r=void 0===r?null:r;var s=void 0;if(null!==co){var o=co.memoizedState;if(s=o.destroy,null!==r&&go(r,o.deps))return void(a.memoizedState=Ro(t,n,s,r))}io.flags|=e,a.memoizedState=Ro(1|t,n,s,r)}function Do(e,t){return _o(8390656,8,e,t)}function Lo(e,t){return Mo(2048,8,e,t)}function zo(e,t){return Mo(4,2,e,t)}function Po(e,t){return Mo(4,4,e,t)}function Bo(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Wo(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Mo(4,4,Bo.bind(null,t,e),n)}function Uo(){}function Vo(e,t){var n=xo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&go(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Go(e,t){var n=xo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&go(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Ho(e,t,n){return 0===(21&oo)?(e.baseState&&(e.baseState=!1,pi=!0),e.memoizedState=n):(tr(n,t)||(n=ht(),io.lanes|=n,Nc|=n,e.baseState=!0),t)}function qo(e,t){var n=gt;gt=0!==n&&4>n?n:4,e(!0);var r=so.transition;so.transition={};try{e(!1),t()}finally{gt=n,so.transition=r}}function Ko(){return xo().memoizedState}function Xo(e,t,n){var r=Hc(e);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},Qo(e))Zo(t,n);else if(null!==(n=ws(e,t,n,r))){qc(n,e,r,Gc()),Jo(n,t,r)}}function Yo(e,t,n){var r=Hc(e),a={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(Qo(e))Zo(t,a);else{var s=e.alternate;if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var o=t.lastRenderedState,i=s(o,n);if(a.hasEagerState=!0,a.eagerState=i,tr(i,o)){var c=t.interleaved;return null===c?(a.next=a,xs(t)):(a.next=c.next,c.next=a),void(t.interleaved=a)}}catch(u){}null!==(n=ws(e,t,a,r))&&(qc(n,e,r,a=Gc()),Jo(n,t,r))}}function Qo(e){var t=e.alternate;return e===io||null!==t&&t===io}function Zo(e,t){ho=lo=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Jo(e,t,n){if(0!==(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,mt(e,n)}}var $o={readContext:ys,useCallback:mo,useContext:mo,useEffect:mo,useImperativeHandle:mo,useInsertionEffect:mo,useLayoutEffect:mo,useMemo:mo,useReducer:mo,useRef:mo,useState:mo,useDebugValue:mo,useDeferredValue:mo,useTransition:mo,useMutableSource:mo,useSyncExternalStore:mo,useId:mo,unstable_isNewReconciler:!1},ei={readContext:ys,useCallback:function(e,t){return vo().memoizedState=[e,void 0===t?null:t],e},useContext:ys,useEffect:Do,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,_o(4194308,4,Bo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return _o(4194308,4,e,t)},useInsertionEffect:function(e,t){return _o(4,2,e,t)},useMemo:function(e,t){var n=vo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=vo();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=Xo.bind(null,io,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},vo().memoizedState=e},useState:Ao,useDebugValue:Uo,useDeferredValue:function(e){return vo().memoizedState=e},useTransition:function(){var e=Ao(!1),t=e[0];return e=qo.bind(null,e[1]),vo().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=io,a=vo();if(Za){if(void 0===n)throw Error(s(407));n=n()}else{if(n=t(),null===vc)throw Error(s(349));0!==(30&oo)||No(r,t,n)}a.memoizedState=n;var o={value:n,getSnapshot:t};return a.queue=o,Do(jo.bind(null,r,o,e),[e]),r.flags|=2048,Ro(9,To.bind(null,r,o,n,t),void 0,null),n},useId:function(){var e=vo(),t=vc.identifierPrefix;if(Za){var n=Ga;t=":"+t+"R"+(n=(Va&~(1<<32-rt(Va)-1)).toString(32)+n),0<(n=po++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=fo++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ti={readContext:ys,useCallback:Vo,useContext:ys,useEffect:Lo,useImperativeHandle:Wo,useInsertionEffect:zo,useLayoutEffect:Po,useMemo:Go,useReducer:Oo,useRef:Fo,useState:function(){return Oo(wo)},useDebugValue:Uo,useDeferredValue:function(e){return Ho(xo(),co.memoizedState,e)},useTransition:function(){return[Oo(wo)[0],xo().memoizedState]},useMutableSource:So,useSyncExternalStore:Io,useId:Ko,unstable_isNewReconciler:!1},ni={readContext:ys,useCallback:Vo,useContext:ys,useEffect:Lo,useImperativeHandle:Wo,useInsertionEffect:zo,useLayoutEffect:Po,useMemo:Go,useReducer:ko,useRef:Fo,useState:function(){return ko(wo)},useDebugValue:Uo,useDeferredValue:function(e){var t=xo();return null===co?t.memoizedState=e:Ho(t,co.memoizedState,e)},useTransition:function(){return[ko(wo)[0],xo().memoizedState]},useMutableSource:So,useSyncExternalStore:Io,useId:Ko,unstable_isNewReconciler:!1};function ri(e,t){try{var n="",r=t;do{n+=W(r),r=r.return}while(r);var a=n}catch(s){a="\nError generating stack: "+s.message+"\n"+s.stack}return{value:e,source:t,stack:a,digest:null}}function ai(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function si(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var oi="function"===typeof WeakMap?WeakMap:Map;function ii(e,t,n){(n=Ns(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){_c||(_c=!0,Mc=r),si(0,t)},n}function ci(e,t,n){(n=Ns(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"===typeof r){var a=t.value;n.payload=function(){return r(a)},n.callback=function(){si(0,t)}}var s=e.stateNode;return null!==s&&"function"===typeof s.componentDidCatch&&(n.callback=function(){si(0,t),"function"!==typeof r&&(null===Dc?Dc=new Set([this]):Dc.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function ui(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new oi;var a=new Set;r.set(t,a)}else void 0===(a=r.get(t))&&(a=new Set,r.set(t,a));a.has(n)||(a.add(n),e=mu.bind(null,e,t,n),t.then(e,e))}function li(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function di(e,t,n,r,a){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Ns(-1,1)).tag=2,Ts(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}var hi=x.ReactCurrentOwner,pi=!1;function fi(e,t,n,r){t.child=null===e?Gs(t,null,n,r):Vs(t,e.child,n,r)}function mi(e,t,n,r,a){n=n.render;var s=t.ref;return bs(t,a),r=bo(e,t,n,r,s,a),n=yo(),null===e||pi?(Za&&n&&Ka(t),t.flags|=1,fi(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Li(e,t,a))}function gi(e,t,n,r,a){if(null===e){var s=n.type;return"function"!==typeof s||Ou(s)||void 0!==s.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Su(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,bi(e,t,s,r,a))}if(s=e.child,0===(e.lanes&a)){var o=s.memoizedProps;if((n=null!==(n=n.compare)?n:nr)(o,r)&&e.ref===t.ref)return Li(e,t,a)}return t.flags|=1,(e=ku(s,r)).ref=t.ref,e.return=t,t.child=e}function bi(e,t,n,r,a){if(null!==e){var s=e.memoizedProps;if(nr(s,r)&&e.ref===t.ref){if(pi=!1,t.pendingProps=r=s,0===(e.lanes&a))return t.lanes=e.lanes,Li(e,t,a);0!==(131072&e.flags)&&(pi=!0)}}return xi(e,t,n,r,a)}function yi(e,t,n){var r=t.pendingProps,a=r.children,s=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},va(kc,Oc),Oc|=n;else{if(0===(1073741824&n))return e=null!==s?s.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,va(kc,Oc),Oc|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==s?s.baseLanes:n,va(kc,Oc),Oc|=r}else null!==s?(r=s.baseLanes|n,t.memoizedState=null):r=n,va(kc,Oc),Oc|=r;return fi(e,t,a,n),t.child}function vi(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function xi(e,t,n,r,a){var s=Ia(n)?ka:wa.current;return s=Sa(t,s),bs(t,a),n=bo(e,t,n,r,s,a),r=yo(),null===e||pi?(Za&&r&&Ka(t),t.flags|=1,fi(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Li(e,t,a))}function wi(e,t,n,r,a){if(Ia(n)){var s=!0;Ea(t)}else s=!1;if(bs(t,a),null===t.stateNode)Di(e,t),Ds(t,n,r),zs(t,n,r,a),r=!0;else if(null===e){var o=t.stateNode,i=t.memoizedProps;o.props=i;var c=o.context,u=n.contextType;"object"===typeof u&&null!==u?u=ys(u):u=Sa(t,u=Ia(n)?ka:wa.current);var l=n.getDerivedStateFromProps,d="function"===typeof l||"function"===typeof o.getSnapshotBeforeUpdate;d||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==r||c!==u)&&Ls(t,o,r,u),ks=!1;var h=t.memoizedState;o.state=h,Cs(t,r,o,a),c=t.memoizedState,i!==r||h!==c||Oa.current||ks?("function"===typeof l&&(Fs(t,n,l,r),c=t.memoizedState),(i=ks||Ms(t,n,i,r,h,c,u))?(d||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(t.flags|=4194308)):("function"===typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=c),o.props=r,o.state=c,o.context=u,r=i):("function"===typeof o.componentDidMount&&(t.flags|=4194308),r=!1)}else{o=t.stateNode,Is(e,t),i=t.memoizedProps,u=t.type===t.elementType?i:us(t.type,i),o.props=u,d=t.pendingProps,h=o.context,"object"===typeof(c=n.contextType)&&null!==c?c=ys(c):c=Sa(t,c=Ia(n)?ka:wa.current);var p=n.getDerivedStateFromProps;(l="function"===typeof p||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==d||h!==c)&&Ls(t,o,r,c),ks=!1,h=t.memoizedState,o.state=h,Cs(t,r,o,a);var f=t.memoizedState;i!==d||h!==f||Oa.current||ks?("function"===typeof p&&(Fs(t,n,p,r),f=t.memoizedState),(u=ks||Ms(t,n,u,r,h,f,c)||!1)?(l||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(r,f,c),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,f,c)),"function"===typeof o.componentDidUpdate&&(t.flags|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=f),o.props=r,o.state=f,o.context=c,r=u):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),r=!1)}return Oi(e,t,n,r,s,a)}function Oi(e,t,n,r,a,s){vi(e,t);var o=0!==(128&t.flags);if(!r&&!o)return a&&Ca(t,n,!1),Li(e,t,s);r=t.stateNode,hi.current=t;var i=o&&"function"!==typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&o?(t.child=Vs(t,e.child,null,s),t.child=Vs(t,null,i,s)):fi(e,t,i,s),t.memoizedState=r.state,a&&Ca(t,n,!0),t.child}function ki(e){var t=e.stateNode;t.pendingContext?Ta(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ta(0,t.context,!1),Qs(e,t.containerInfo)}function Si(e,t,n,r,a){return os(),is(a),t.flags|=256,fi(e,t,n,r),t.child}var Ii,Ni,Ti,ji={dehydrated:null,treeContext:null,retryLane:0};function Ei(e){return{baseLanes:e,cachePool:null,transitions:null}}function Ci(e,t,n){var r,a=t.pendingProps,o=eo.current,i=!1,c=0!==(128&t.flags);if((r=c)||(r=(null===e||null!==e.memoizedState)&&0!==(2&o)),r?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),va(eo,1&o),null===e)return ns(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(c=a.children,e=a.fallback,i?(a=t.mode,i=t.child,c={mode:"hidden",children:c},0===(1&a)&&null!==i?(i.childLanes=0,i.pendingProps=c):i=Nu(c,a,0,null),e=Iu(e,a,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=Ei(n),t.memoizedState=ji,e):Ai(t,c));if(null!==(o=e.memoizedState)&&null!==(r=o.dehydrated))return function(e,t,n,r,a,o,i){if(n)return 256&t.flags?(t.flags&=-257,r=ai(Error(s(422))),Ri(e,t,i,r)):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=r.fallback,a=t.mode,r=Nu({mode:"visible",children:r.children},a,0,null),(o=Iu(o,a,i,null)).flags|=2,r.return=t,o.return=t,r.sibling=o,t.child=r,0!==(1&t.mode)&&Vs(t,e.child,null,i),t.child.memoizedState=Ei(i),t.memoizedState=ji,o);if(0===(1&t.mode))return Ri(e,t,i,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var c=r.dgst;return r=c,o=Error(s(419)),r=ai(o,r,void 0),Ri(e,t,i,r)}if(c=0!==(i&e.childLanes),pi||c){if(null!==(r=vc)){switch(i&-i){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!==(a&(r.suspendedLanes|i))?0:a)&&a!==o.retryLane&&(o.retryLane=a,Os(e,a),qc(r,e,a,-1))}return su(),r=ai(Error(s(421))),Ri(e,t,i,r)}return"$?"===a.data?(t.flags|=128,t.child=e.child,t=bu.bind(null,e),a._reactRetry=t,null):(e=o.treeContext,Qa=na(a.nextSibling),Ya=t,Za=!0,Ja=null,null!==e&&(Ba[Wa++]=Va,Ba[Wa++]=Ga,Ba[Wa++]=Ua,Va=e.id,Ga=e.overflow,Ua=t),(t=Ai(t,r.children)).flags|=4096,t)}(e,t,c,a,r,o,n);if(i){i=a.fallback,c=t.mode,r=(o=e.child).sibling;var u={mode:"hidden",children:a.children};return 0===(1&c)&&t.child!==o?((a=t.child).childLanes=0,a.pendingProps=u,t.deletions=null):(a=ku(o,u)).subtreeFlags=14680064&o.subtreeFlags,null!==r?i=ku(r,i):(i=Iu(i,c,n,null)).flags|=2,i.return=t,a.return=t,a.sibling=i,t.child=a,a=i,i=t.child,c=null===(c=e.child.memoizedState)?Ei(n):{baseLanes:c.baseLanes|n,cachePool:null,transitions:c.transitions},i.memoizedState=c,i.childLanes=e.childLanes&~n,t.memoizedState=ji,a}return e=(i=e.child).sibling,a=ku(i,{mode:"visible",children:a.children}),0===(1&t.mode)&&(a.lanes=n),a.return=t,a.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=a,t.memoizedState=null,a}function Ai(e,t){return(t=Nu({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Ri(e,t,n,r){return null!==r&&is(r),Vs(t,e.child,null,n),(e=Ai(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Fi(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),gs(e.return,t,n)}function _i(e,t,n,r,a){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=r,s.tail=n,s.tailMode=a)}function Mi(e,t,n){var r=t.pendingProps,a=r.revealOrder,s=r.tail;if(fi(e,t,r.children,n),0!==(2&(r=eo.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Fi(e,n,t);else if(19===e.tag)Fi(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(va(eo,r),0===(1&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===to(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),_i(t,!1,a,n,s);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===to(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}_i(t,!0,n,null,s);break;case"together":_i(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Di(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Li(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Nc|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(s(153));if(null!==t.child){for(n=ku(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=ku(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function zi(e,t){if(!Za)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Pi(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Bi(e,t,n){var r=t.pendingProps;switch(Xa(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Pi(t),null;case 1:return Ia(t.type)&&Na(),Pi(t),null;case 3:return r=t.stateNode,Zs(),ya(Oa),ya(wa),ro(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(as(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==Ja&&(Qc(Ja),Ja=null))),Pi(t),null;case 5:$s(t);var a=Ys(Xs.current);if(n=t.type,null!==e&&null!=t.stateNode)Ni(e,t,n,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(s(166));return Pi(t),null}if(e=Ys(qs.current),as(t)){r=t.stateNode,n=t.type;var o=t.memoizedProps;switch(r[sa]=t,r[oa]=o,e=0!==(1&t.mode),n){case"dialog":Rr("cancel",r),Rr("close",r);break;case"iframe":case"object":case"embed":Rr("load",r);break;case"video":case"audio":for(a=0;a<jr.length;a++)Rr(jr[a],r);break;case"source":Rr("error",r);break;case"img":case"image":case"link":Rr("error",r),Rr("load",r);break;case"details":Rr("toggle",r);break;case"input":Y(r,o),Rr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},Rr("invalid",r);break;case"textarea":re(r,o),Rr("invalid",r)}for(var c in ge(n,o),a=null,o)if(o.hasOwnProperty(c)){var u=o[c];"children"===c?"string"===typeof u?r.textContent!==u&&(!0!==o.suppressHydrationWarning&&Hr(r.textContent,u,e),a=["children",u]):"number"===typeof u&&r.textContent!==""+u&&(!0!==o.suppressHydrationWarning&&Hr(r.textContent,u,e),a=["children",""+u]):i.hasOwnProperty(c)&&null!=u&&"onScroll"===c&&Rr("scroll",r)}switch(n){case"input":H(r),J(r,o,!0);break;case"textarea":H(r),se(r);break;case"select":case"option":break;default:"function"===typeof o.onClick&&(r.onclick=qr)}r=a,t.updateQueue=r,null!==r&&(t.flags|=4)}else{c=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=oe(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof r.is?e=c.createElement(n,{is:r.is}):(e=c.createElement(n),"select"===n&&(c=e,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):e=c.createElementNS(e,n),e[sa]=t,e[oa]=r,Ii(e,t),t.stateNode=e;e:{switch(c=be(n,r),n){case"dialog":Rr("cancel",e),Rr("close",e),a=r;break;case"iframe":case"object":case"embed":Rr("load",e),a=r;break;case"video":case"audio":for(a=0;a<jr.length;a++)Rr(jr[a],e);a=r;break;case"source":Rr("error",e),a=r;break;case"img":case"image":case"link":Rr("error",e),Rr("load",e),a=r;break;case"details":Rr("toggle",e),a=r;break;case"input":Y(e,r),a=X(e,r),Rr("invalid",e);break;case"option":a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=L({},r,{value:void 0}),Rr("invalid",e);break;case"textarea":re(e,r),a=ne(e,r),Rr("invalid",e);break;default:a=r}for(o in ge(n,a),u=a)if(u.hasOwnProperty(o)){var l=u[o];"style"===o?fe(e,l):"dangerouslySetInnerHTML"===o?null!=(l=l?l.__html:void 0)&&ue(e,l):"children"===o?"string"===typeof l?("textarea"!==n||""!==l)&&le(e,l):"number"===typeof l&&le(e,""+l):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(i.hasOwnProperty(o)?null!=l&&"onScroll"===o&&Rr("scroll",e):null!=l&&v(e,o,l,c))}switch(n){case"input":H(e),J(e,r,!1);break;case"textarea":H(e),se(e);break;case"option":null!=r.value&&e.setAttribute("value",""+V(r.value));break;case"select":e.multiple=!!r.multiple,null!=(o=r.value)?te(e,!!r.multiple,o,!1):null!=r.defaultValue&&te(e,!!r.multiple,r.defaultValue,!0);break;default:"function"===typeof a.onClick&&(e.onclick=qr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Pi(t),null;case 6:if(e&&null!=t.stateNode)Ti(0,t,e.memoizedProps,r);else{if("string"!==typeof r&&null===t.stateNode)throw Error(s(166));if(n=Ys(Xs.current),Ys(qs.current),as(t)){if(r=t.stateNode,n=t.memoizedProps,r[sa]=t,(o=r.nodeValue!==n)&&null!==(e=Ya))switch(e.tag){case 3:Hr(r.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Hr(r.nodeValue,n,0!==(1&e.mode))}o&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[sa]=t,t.stateNode=r}return Pi(t),null;case 13:if(ya(eo),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(Za&&null!==Qa&&0!==(1&t.mode)&&0===(128&t.flags))ss(),os(),t.flags|=98560,o=!1;else if(o=as(t),null!==r&&null!==r.dehydrated){if(null===e){if(!o)throw Error(s(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(s(317));o[sa]=t}else os(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Pi(t),o=!1}else null!==Ja&&(Qc(Ja),Ja=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((r=null!==r)!==(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&eo.current)?0===Sc&&(Sc=3):su())),null!==t.updateQueue&&(t.flags|=4),Pi(t),null);case 4:return Zs(),null===e&&Mr(t.stateNode.containerInfo),Pi(t),null;case 10:return ms(t.type._context),Pi(t),null;case 17:return Ia(t.type)&&Na(),Pi(t),null;case 19:if(ya(eo),null===(o=t.memoizedState))return Pi(t),null;if(r=0!==(128&t.flags),null===(c=o.rendering))if(r)zi(o,!1);else{if(0!==Sc||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(c=to(e))){for(t.flags|=128,zi(o,!1),null!==(r=c.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(o=n).flags&=14680066,null===(c=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=c.childLanes,o.lanes=c.lanes,o.child=c.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=c.memoizedProps,o.memoizedState=c.memoizedState,o.updateQueue=c.updateQueue,o.type=c.type,e=c.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return va(eo,1&eo.current|2),t.child}e=e.sibling}null!==o.tail&&Xe()>Rc&&(t.flags|=128,r=!0,zi(o,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=to(c))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),zi(o,!0),null===o.tail&&"hidden"===o.tailMode&&!c.alternate&&!Za)return Pi(t),null}else 2*Xe()-o.renderingStartTime>Rc&&1073741824!==n&&(t.flags|=128,r=!0,zi(o,!1),t.lanes=4194304);o.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=o.last)?n.sibling=c:t.child=c,o.last=c)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Xe(),t.sibling=null,n=eo.current,va(eo,r?1&n|2:1&n),t):(Pi(t),null);case 22:case 23:return tu(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!==(1&t.mode)?0!==(1073741824&Oc)&&(Pi(t),6&t.subtreeFlags&&(t.flags|=8192)):Pi(t),null;case 24:case 25:return null}throw Error(s(156,t.tag))}function Wi(e,t){switch(Xa(t),t.tag){case 1:return Ia(t.type)&&Na(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Zs(),ya(Oa),ya(wa),ro(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return $s(t),null;case 13:if(ya(eo),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(s(340));os()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return ya(eo),null;case 4:return Zs(),null;case 10:return ms(t.type._context),null;case 22:case 23:return tu(),null;case 24:default:return null}}Ii=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ni=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,Ys(qs.current);var s,o=null;switch(n){case"input":a=X(e,a),r=X(e,r),o=[];break;case"select":a=L({},a,{value:void 0}),r=L({},r,{value:void 0}),o=[];break;case"textarea":a=ne(e,a),r=ne(e,r),o=[];break;default:"function"!==typeof a.onClick&&"function"===typeof r.onClick&&(e.onclick=qr)}for(l in ge(n,r),n=null,a)if(!r.hasOwnProperty(l)&&a.hasOwnProperty(l)&&null!=a[l])if("style"===l){var c=a[l];for(s in c)c.hasOwnProperty(s)&&(n||(n={}),n[s]="")}else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(i.hasOwnProperty(l)?o||(o=[]):(o=o||[]).push(l,null));for(l in r){var u=r[l];if(c=null!=a?a[l]:void 0,r.hasOwnProperty(l)&&u!==c&&(null!=u||null!=c))if("style"===l)if(c){for(s in c)!c.hasOwnProperty(s)||u&&u.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in u)u.hasOwnProperty(s)&&c[s]!==u[s]&&(n||(n={}),n[s]=u[s])}else n||(o||(o=[]),o.push(l,n)),n=u;else"dangerouslySetInnerHTML"===l?(u=u?u.__html:void 0,c=c?c.__html:void 0,null!=u&&c!==u&&(o=o||[]).push(l,u)):"children"===l?"string"!==typeof u&&"number"!==typeof u||(o=o||[]).push(l,""+u):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(i.hasOwnProperty(l)?(null!=u&&"onScroll"===l&&Rr("scroll",e),o||c===u||(o=[])):(o=o||[]).push(l,u))}n&&(o=o||[]).push("style",n);var l=o;(t.updateQueue=l)&&(t.flags|=4)}},Ti=function(e,t,n,r){n!==r&&(t.flags|=4)};var Ui=!1,Vi=!1,Gi="function"===typeof WeakSet?WeakSet:Set,Hi=null;function qi(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(r){fu(e,t,r)}else n.current=null}function Ki(e,t,n){try{n()}catch(r){fu(e,t,r)}}var Xi=!1;function Yi(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var s=a.destroy;a.destroy=void 0,void 0!==s&&Ki(t,n,s)}a=a.next}while(a!==r)}}function Qi(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function Zi(e){var t=e.ref;if(null!==t){var n=e.stateNode;switch(e.tag){case 5:e=n;break;default:e=n}"function"===typeof t?t(e):t.current=e}}function Ji(e){var t=e.alternate;null!==t&&(e.alternate=null,Ji(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[sa],delete t[oa],delete t[ca],delete t[ua],delete t[la])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function $i(e){return 5===e.tag||3===e.tag||4===e.tag}function ec(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||$i(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}var tc=null,nc=!1;function rc(e,t,n){for(n=n.child;null!==n;)ac(e,t,n),n=n.sibling}function ac(e,t,n){if(nt&&"function"===typeof nt.onCommitFiberUnmount)try{nt.onCommitFiberUnmount(tt,n)}catch(i){}switch(n.tag){case 5:Vi||qi(n,t);case 6:var r=tc,a=nc;tc=null,rc(e,t,n),nc=a,null!==(tc=r)&&(nc?(e=tc,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):tc.removeChild(n.stateNode));break;case 18:null!==tc&&(nc?(e=tc,n=n.stateNode,8===e.nodeType?ta(e.parentNode,n):1===e.nodeType&&ta(e,n),Pt(e)):ta(tc,n.stateNode));break;case 4:r=tc,a=nc,tc=n.stateNode.containerInfo,nc=!0,rc(e,t,n),tc=r,nc=a;break;case 0:case 11:case 14:case 15:if(!Vi&&(null!==(r=n.updateQueue)&&null!==(r=r.lastEffect))){a=r=r.next;do{var s=a,o=s.destroy;s=s.tag,void 0!==o&&(0!==(2&s)||0!==(4&s))&&Ki(n,t,o),a=a.next}while(a!==r)}rc(e,t,n);break;case 1:if(!Vi&&(qi(n,t),"function"===typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(i){fu(n,t,i)}rc(e,t,n);break;case 21:rc(e,t,n);break;case 22:1&n.mode?(Vi=(r=Vi)||null!==n.memoizedState,rc(e,t,n),Vi=r):rc(e,t,n);break;default:rc(e,t,n)}}function sc(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Gi),t.forEach((function(t){var r=yu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function oc(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var a=n[r];try{var o=e,i=t,c=i;e:for(;null!==c;){switch(c.tag){case 5:tc=c.stateNode,nc=!1;break e;case 3:case 4:tc=c.stateNode.containerInfo,nc=!0;break e}c=c.return}if(null===tc)throw Error(s(160));ac(o,i,a),tc=null,nc=!1;var u=a.alternate;null!==u&&(u.return=null),a.return=null}catch(l){fu(a,t,l)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)ic(t,e),t=t.sibling}function ic(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(oc(t,e),cc(e),4&r){try{Yi(3,e,e.return),Qi(3,e)}catch(g){fu(e,e.return,g)}try{Yi(5,e,e.return)}catch(g){fu(e,e.return,g)}}break;case 1:oc(t,e),cc(e),512&r&&null!==n&&qi(n,n.return);break;case 5:if(oc(t,e),cc(e),512&r&&null!==n&&qi(n,n.return),32&e.flags){var a=e.stateNode;try{le(a,"")}catch(g){fu(e,e.return,g)}}if(4&r&&null!=(a=e.stateNode)){var o=e.memoizedProps,i=null!==n?n.memoizedProps:o,c=e.type,u=e.updateQueue;if(e.updateQueue=null,null!==u)try{"input"===c&&"radio"===o.type&&null!=o.name&&Q(a,o),be(c,i);var l=be(c,o);for(i=0;i<u.length;i+=2){var d=u[i],h=u[i+1];"style"===d?fe(a,h):"dangerouslySetInnerHTML"===d?ue(a,h):"children"===d?le(a,h):v(a,d,h,l)}switch(c){case"input":Z(a,o);break;case"textarea":ae(a,o);break;case"select":var p=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!o.multiple;var f=o.value;null!=f?te(a,!!o.multiple,f,!1):p!==!!o.multiple&&(null!=o.defaultValue?te(a,!!o.multiple,o.defaultValue,!0):te(a,!!o.multiple,o.multiple?[]:"",!1))}a[oa]=o}catch(g){fu(e,e.return,g)}}break;case 6:if(oc(t,e),cc(e),4&r){if(null===e.stateNode)throw Error(s(162));a=e.stateNode,o=e.memoizedProps;try{a.nodeValue=o}catch(g){fu(e,e.return,g)}}break;case 3:if(oc(t,e),cc(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Pt(t.containerInfo)}catch(g){fu(e,e.return,g)}break;case 4:oc(t,e),cc(e);break;case 13:oc(t,e),cc(e),8192&(a=e.child).flags&&(o=null!==a.memoizedState,a.stateNode.isHidden=o,!o||null!==a.alternate&&null!==a.alternate.memoizedState||(Ac=Xe())),4&r&&sc(e);break;case 22:if(d=null!==n&&null!==n.memoizedState,1&e.mode?(Vi=(l=Vi)||d,oc(t,e),Vi=l):oc(t,e),cc(e),8192&r){if(l=null!==e.memoizedState,(e.stateNode.isHidden=l)&&!d&&0!==(1&e.mode))for(Hi=e,d=e.child;null!==d;){for(h=Hi=d;null!==Hi;){switch(f=(p=Hi).child,p.tag){case 0:case 11:case 14:case 15:Yi(4,p,p.return);break;case 1:qi(p,p.return);var m=p.stateNode;if("function"===typeof m.componentWillUnmount){r=p,n=p.return;try{t=r,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(g){fu(r,n,g)}}break;case 5:qi(p,p.return);break;case 22:if(null!==p.memoizedState){dc(h);continue}}null!==f?(f.return=p,Hi=f):dc(h)}d=d.sibling}e:for(d=null,h=e;;){if(5===h.tag){if(null===d){d=h;try{a=h.stateNode,l?"function"===typeof(o=a.style).setProperty?o.setProperty("display","none","important"):o.display="none":(c=h.stateNode,i=void 0!==(u=h.memoizedProps.style)&&null!==u&&u.hasOwnProperty("display")?u.display:null,c.style.display=pe("display",i))}catch(g){fu(e,e.return,g)}}}else if(6===h.tag){if(null===d)try{h.stateNode.nodeValue=l?"":h.memoizedProps}catch(g){fu(e,e.return,g)}}else if((22!==h.tag&&23!==h.tag||null===h.memoizedState||h===e)&&null!==h.child){h.child.return=h,h=h.child;continue}if(h===e)break e;for(;null===h.sibling;){if(null===h.return||h.return===e)break e;d===h&&(d=null),h=h.return}d===h&&(d=null),h.sibling.return=h.return,h=h.sibling}}break;case 19:oc(t,e),cc(e),4&r&&sc(e);break;case 21:break;default:oc(t,e),cc(e)}}function cc(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if($i(n)){var r=n;break e}n=n.return}throw Error(s(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(le(a,""),r.flags&=-33),function e(t,n,r){var a=t.tag;if(5===a||6===a)t=t.stateNode,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==a&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,ec(e),a);break;case 3:case 4:var o=r.stateNode.containerInfo;!function e(t,n,r){var a=t.tag;if(5===a||6===a)t=t.stateNode,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=qr));else if(4!==a&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,ec(e),o);break;default:throw Error(s(161))}}catch(i){fu(e,e.return,i)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function uc(e,t,n){Hi=e,function e(t,n,r){for(var a=0!==(1&t.mode);null!==Hi;){var s=Hi,o=s.child;if(22===s.tag&&a){var i=null!==s.memoizedState||Ui;if(!i){var c=s.alternate,u=null!==c&&null!==c.memoizedState||Vi;c=Ui;var l=Vi;if(Ui=i,(Vi=u)&&!l)for(Hi=s;null!==Hi;)u=(i=Hi).child,22===i.tag&&null!==i.memoizedState?hc(s):null!==u?(u.return=i,Hi=u):hc(s);for(;null!==o;)Hi=o,e(o,n,r),o=o.sibling;Hi=s,Ui=c,Vi=l}lc(t)}else 0!==(8772&s.subtreeFlags)&&null!==o?(o.return=s,Hi=o):lc(t)}}(e,t,n)}function lc(e){for(;null!==Hi;){var t=Hi;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Vi||Qi(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Vi)if(null===n)r.componentDidMount();else{var a=t.elementType===t.type?n.memoizedProps:us(t.type,n.memoizedProps);r.componentDidUpdate(a,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&As(t,o,r);break;case 3:var i=t.updateQueue;if(null!==i){if(n=null,null!==t.child)switch(t.child.tag){case 5:n=t.child.stateNode;break;case 1:n=t.child.stateNode}As(t,i,n)}break;case 5:var c=t.stateNode;if(null===n&&4&t.flags){n=c;var u=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&n.focus();break;case"img":u.src&&(n.src=u.src)}}break;case 6:case 4:case 12:break;case 13:if(null===t.memoizedState){var l=t.alternate;if(null!==l){var d=l.memoizedState;if(null!==d){var h=d.dehydrated;null!==h&&Pt(h)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(s(163))}Vi||512&t.flags&&Zi(t)}catch(p){fu(t,t.return,p)}}if(t===e){Hi=null;break}if(null!==(n=t.sibling)){n.return=t.return,Hi=n;break}Hi=t.return}}function dc(e){for(;null!==Hi;){var t=Hi;if(t===e){Hi=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Hi=n;break}Hi=t.return}}function hc(e){for(;null!==Hi;){var t=Hi;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{Qi(4,t)}catch(c){fu(t,n,c)}break;case 1:var r=t.stateNode;if("function"===typeof r.componentDidMount){var a=t.return;try{r.componentDidMount()}catch(c){fu(t,a,c)}}var s=t.return;try{Zi(t)}catch(c){fu(t,s,c)}break;case 5:var o=t.return;try{Zi(t)}catch(c){fu(t,o,c)}}}catch(c){fu(t,t.return,c)}if(t===e){Hi=null;break}var i=t.sibling;if(null!==i){i.return=t.return,Hi=i;break}Hi=t.return}}var pc,fc=Math.ceil,mc=x.ReactCurrentDispatcher,gc=x.ReactCurrentOwner,bc=x.ReactCurrentBatchConfig,yc=0,vc=null,xc=null,wc=0,Oc=0,kc=ba(0),Sc=0,Ic=null,Nc=0,Tc=0,jc=0,Ec=null,Cc=null,Ac=0,Rc=1/0,Fc=null,_c=!1,Mc=null,Dc=null,Lc=!1,zc=null,Pc=0,Bc=0,Wc=null,Uc=-1,Vc=0;function Gc(){return 0!==(6&yc)?Xe():-1!==Uc?Uc:Uc=Xe()}function Hc(e){return 0===(1&e.mode)?1:0!==(2&yc)&&0!==wc?wc&-wc:null!==cs.transition?(0===Vc&&(Vc=ht()),Vc):0!==(e=gt)?e:e=void 0===(e=window.event)?16:Kt(e.type)}function qc(e,t,n,r){if(50<Bc)throw Bc=0,Wc=null,Error(s(185));ft(e,n,r),0!==(2&yc)&&e===vc||(e===vc&&(0===(2&yc)&&(Tc|=n),4===Sc&&Zc(e,wc)),Kc(e,r),1===n&&0===yc&&0===(1&t.mode)&&(Rc=Xe()+500,Ra&&Ma()))}function Kc(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,s=e.pendingLanes;0<s;){var o=31-rt(s),i=1<<o,c=a[o];-1===c?0!==(i&n)&&0===(i&r)||(a[o]=lt(i,t)):c<=t&&(e.expiredLanes|=i),s&=~i}}(e,t);var r=ut(e,e===vc?wc:0);if(0===r)null!==n&&He(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&He(n),1===t)0===e.tag?function(e){Ra=!0,_a(e)}(Jc.bind(null,e)):_a(Jc.bind(null,e)),$r((function(){0===(6&yc)&&Ma()})),n=null;else{switch(bt(r)){case 1:n=Qe;break;case 4:n=Ze;break;case 16:n=Je;break;case 536870912:n=et;break;default:n=Je}n=vu(n,Xc.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function Xc(e,t){if(Uc=-1,Vc=0,0!==(6&yc))throw Error(s(327));var n=e.callbackNode;if(hu()&&e.callbackNode!==n)return null;var r=ut(e,e===vc?wc:0);if(0===r)return null;if(0!==(30&r)||0!==(r&e.expiredLanes)||t)t=ou(e,r);else{t=r;var a=yc;yc|=2;var o=au();for(vc===e&&wc===t||(Fc=null,Rc=Xe()+500,nu(e,t));;)try{cu();break}catch(c){ru(e,c)}fs(),mc.current=o,yc=a,null!==xc?t=0:(vc=null,wc=0,t=Sc)}if(0!==t){if(2===t&&(0!==(a=dt(e))&&(r=a,t=Yc(e,a))),1===t)throw n=Ic,nu(e,0),Zc(e,r),Kc(e,Xe()),n;if(6===t)Zc(e,r);else{if(a=e.current.alternate,0===(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var a=n[r],s=a.getSnapshot;a=a.value;try{if(!tr(s(),a))return!1}catch(i){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)&&(2===(t=ou(e,r))&&(0!==(o=dt(e))&&(r=o,t=Yc(e,o))),1===t))throw n=Ic,nu(e,0),Zc(e,r),Kc(e,Xe()),n;switch(e.finishedWork=a,e.finishedLanes=r,t){case 0:case 1:throw Error(s(345));case 2:du(e,Cc,Fc);break;case 3:if(Zc(e,r),(130023424&r)===r&&10<(t=Ac+500-Xe())){if(0!==ut(e,0))break;if(((a=e.suspendedLanes)&r)!==r){Gc(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=Qr(du.bind(null,e,Cc,Fc),t);break}du(e,Cc,Fc);break;case 4:if(Zc(e,r),(4194240&r)===r)break;for(t=e.eventTimes,a=-1;0<r;){var i=31-rt(r);o=1<<i,(i=t[i])>a&&(a=i),r&=~o}if(r=a,10<(r=(120>(r=Xe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*fc(r/1960))-r)){e.timeoutHandle=Qr(du.bind(null,e,Cc,Fc),r);break}du(e,Cc,Fc);break;case 5:du(e,Cc,Fc);break;default:throw Error(s(329))}}}return Kc(e,Xe()),e.callbackNode===n?Xc.bind(null,e):null}function Yc(e,t){var n=Ec;return e.current.memoizedState.isDehydrated&&(nu(e,t).flags|=256),2!==(e=ou(e,t))&&(t=Cc,Cc=n,null!==t&&Qc(t)),e}function Qc(e){null===Cc?Cc=e:Cc.push.apply(Cc,e)}function Zc(e,t){for(t&=~jc,t&=~Tc,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-rt(t),r=1<<n;e[n]=-1,t&=~r}}function Jc(e){if(0!==(6&yc))throw Error(s(327));hu();var t=ut(e,0);if(0===(1&t))return Kc(e,Xe()),null;var n=ou(e,t);if(0!==e.tag&&2===n){var r=dt(e);0!==r&&(t=r,n=Yc(e,r))}if(1===n)throw n=Ic,nu(e,0),Zc(e,t),Kc(e,Xe()),n;if(6===n)throw Error(s(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,du(e,Cc,Fc),Kc(e,Xe()),null}function $c(e,t){var n=yc;yc|=1;try{return e(t)}finally{0===(yc=n)&&(Rc=Xe()+500,Ra&&Ma())}}function eu(e){null!==zc&&0===zc.tag&&0===(6&yc)&&hu();var t=yc;yc|=1;var n=bc.transition,r=gt;try{if(bc.transition=null,gt=1,e)return e()}finally{gt=r,bc.transition=n,0===(6&(yc=t))&&Ma()}}function tu(){Oc=kc.current,ya(kc)}function nu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Zr(n)),null!==xc)for(n=xc.return;null!==n;){var r=n;switch(Xa(r),r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&Na();break;case 3:Zs(),ya(Oa),ya(wa),ro();break;case 5:$s(r);break;case 4:Zs();break;case 13:case 19:ya(eo);break;case 10:ms(r.type._context);break;case 22:case 23:tu()}n=n.return}if(vc=e,xc=e=ku(e.current,null),wc=Oc=t,Sc=0,Ic=null,jc=Tc=Nc=0,Cc=Ec=null,null!==vs){for(t=0;t<vs.length;t++)if(null!==(r=(n=vs[t]).interleaved)){n.interleaved=null;var a=r.next,s=n.pending;if(null!==s){var o=s.next;s.next=a,r.next=o}n.pending=r}vs=null}return e}function ru(e,t){for(;;){var n=xc;try{if(fs(),ao.current=$o,lo){for(var r=io.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}lo=!1}if(oo=0,uo=co=io=null,ho=!1,po=0,gc.current=null,null===n||null===n.return){Sc=1,Ic=t,xc=null;break}e:{var o=e,i=n.return,c=n,u=t;if(t=wc,c.flags|=32768,null!==u&&"object"===typeof u&&"function"===typeof u.then){var l=u,d=c,h=d.tag;if(0===(1&d.mode)&&(0===h||11===h||15===h)){var p=d.alternate;p?(d.updateQueue=p.updateQueue,d.memoizedState=p.memoizedState,d.lanes=p.lanes):(d.updateQueue=null,d.memoizedState=null)}var f=li(i);if(null!==f){f.flags&=-257,di(f,i,c,0,t),1&f.mode&&ui(o,l,t),u=l;var m=(t=f).updateQueue;if(null===m){var g=new Set;g.add(u),t.updateQueue=g}else m.add(u);break e}if(0===(1&t)){ui(o,l,t),su();break e}u=Error(s(426))}else if(Za&&1&c.mode){var b=li(i);if(null!==b){0===(65536&b.flags)&&(b.flags|=256),di(b,i,c,0,t),is(ri(u,c));break e}}o=u=ri(u,c),4!==Sc&&(Sc=2),null===Ec?Ec=[o]:Ec.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Es(o,ii(0,u,t));break e;case 1:c=u;var y=o.type,v=o.stateNode;if(0===(128&o.flags)&&("function"===typeof y.getDerivedStateFromError||null!==v&&"function"===typeof v.componentDidCatch&&(null===Dc||!Dc.has(v)))){o.flags|=65536,t&=-t,o.lanes|=t,Es(o,ci(o,c,t));break e}}o=o.return}while(null!==o)}lu(n)}catch(x){t=x,xc===n&&null!==n&&(xc=n=n.return);continue}break}}function au(){var e=mc.current;return mc.current=$o,null===e?$o:e}function su(){0!==Sc&&3!==Sc&&2!==Sc||(Sc=4),null===vc||0===(268435455&Nc)&&0===(268435455&Tc)||Zc(vc,wc)}function ou(e,t){var n=yc;yc|=2;var r=au();for(vc===e&&wc===t||(Fc=null,nu(e,t));;)try{iu();break}catch(a){ru(e,a)}if(fs(),yc=n,mc.current=r,null!==xc)throw Error(s(261));return vc=null,wc=0,Sc}function iu(){for(;null!==xc;)uu(xc)}function cu(){for(;null!==xc&&!qe();)uu(xc)}function uu(e){var t=pc(e.alternate,e,Oc);e.memoizedProps=e.pendingProps,null===t?lu(e):xc=t,gc.current=null}function lu(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=Bi(n,t,Oc)))return void(xc=n)}else{if(null!==(n=Wi(n,t)))return n.flags&=32767,void(xc=n);if(null===e)return Sc=6,void(xc=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(xc=t);xc=t=e}while(null!==t);0===Sc&&(Sc=5)}function du(e,t,n){var r=gt,a=bc.transition;try{bc.transition=null,gt=1,function(e,t,n,r){do{hu()}while(null!==zc);if(0!==(6&yc))throw Error(s(327));n=e.finishedWork;var a=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(s(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var a=31-rt(n),s=1<<a;t[a]=0,r[a]=-1,e[a]=-1,n&=~s}}(e,o),e===vc&&(xc=vc=null,wc=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||Lc||(Lc=!0,vu(Je,(function(){return hu(),null}))),o=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||o){o=bc.transition,bc.transition=null;var i=gt;gt=1;var c=yc;yc|=4,gc.current=null,function(e,t){if(Kr=Wt,or(e=sr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var a=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{n.nodeType,o.nodeType}catch(w){n=null;break e}var i=0,c=-1,u=-1,l=0,d=0,h=e,p=null;t:for(;;){for(var f;h!==n||0!==a&&3!==h.nodeType||(c=i+a),h!==o||0!==r&&3!==h.nodeType||(u=i+r),3===h.nodeType&&(i+=h.nodeValue.length),null!==(f=h.firstChild);)p=h,h=f;for(;;){if(h===e)break t;if(p===n&&++l===a&&(c=i),p===o&&++d===r&&(u=i),null!==(f=h.nextSibling))break;p=(h=p).parentNode}h=f}n=-1===c||-1===u?null:{start:c,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(Xr={focusedElem:e,selectionRange:n},Wt=!1,Hi=t;null!==Hi;)if(e=(t=Hi).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Hi=e;else for(;null!==Hi;){t=Hi;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:break;case 1:if(null!==m){var g=m.memoizedProps,b=m.memoizedState,y=t.stateNode,v=y.getSnapshotBeforeUpdate(t.elementType===t.type?g:us(t.type,g),b);y.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var x=t.stateNode.containerInfo;1===x.nodeType?x.textContent="":9===x.nodeType&&x.documentElement&&x.removeChild(x.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(s(163))}}catch(w){fu(t,t.return,w)}if(null!==(e=t.sibling)){e.return=t.return,Hi=e;break}Hi=t.return}m=Xi,Xi=!1}(e,n),ic(n,e),ir(Xr),Wt=!!Kr,Xr=Kr=null,e.current=n,uc(n,e,a),Ke(),yc=c,gt=i,bc.transition=o}else e.current=n;if(Lc&&(Lc=!1,zc=e,Pc=a),0===(o=e.pendingLanes)&&(Dc=null),function(e){if(nt&&"function"===typeof nt.onCommitFiberRoot)try{nt.onCommitFiberRoot(tt,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),Kc(e,Xe()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)a=t[n],r(a.value,{componentStack:a.stack,digest:a.digest});if(_c)throw _c=!1,e=Mc,Mc=null,e;0!==(1&Pc)&&0!==e.tag&&hu(),0!==(1&(o=e.pendingLanes))?e===Wc?Bc++:(Bc=0,Wc=e):Bc=0,Ma()}(e,t,n,r)}finally{bc.transition=a,gt=r}return null}function hu(){if(null!==zc){var e=bt(Pc),t=bc.transition,n=gt;try{if(bc.transition=null,gt=16>e?16:e,null===zc)var r=!1;else{if(e=zc,zc=null,Pc=0,0!==(6&yc))throw Error(s(331));var a=yc;for(yc|=4,Hi=e.current;null!==Hi;){var o=Hi,i=o.child;if(0!==(16&Hi.flags)){var c=o.deletions;if(null!==c){for(var u=0;u<c.length;u++){var l=c[u];for(Hi=l;null!==Hi;){var d=Hi;switch(d.tag){case 0:case 11:case 15:Yi(8,d,o)}var h=d.child;if(null!==h)h.return=d,Hi=h;else for(;null!==Hi;){var p=(d=Hi).sibling,f=d.return;if(Ji(d),d===l){Hi=null;break}if(null!==p){p.return=f,Hi=p;break}Hi=f}}}var m=o.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var b=g.sibling;g.sibling=null,g=b}while(null!==g)}}Hi=o}}if(0!==(2064&o.subtreeFlags)&&null!==i)i.return=o,Hi=i;else e:for(;null!==Hi;){if(0!==(2048&(o=Hi).flags))switch(o.tag){case 0:case 11:case 15:Yi(9,o,o.return)}var y=o.sibling;if(null!==y){y.return=o.return,Hi=y;break e}Hi=o.return}}var v=e.current;for(Hi=v;null!==Hi;){var x=(i=Hi).child;if(0!==(2064&i.subtreeFlags)&&null!==x)x.return=i,Hi=x;else e:for(i=v;null!==Hi;){if(0!==(2048&(c=Hi).flags))try{switch(c.tag){case 0:case 11:case 15:Qi(9,c)}}catch(O){fu(c,c.return,O)}if(c===i){Hi=null;break e}var w=c.sibling;if(null!==w){w.return=c.return,Hi=w;break e}Hi=c.return}}if(yc=a,Ma(),nt&&"function"===typeof nt.onPostCommitFiberRoot)try{nt.onPostCommitFiberRoot(tt,e)}catch(O){}r=!0}return r}finally{gt=n,bc.transition=t}}return!1}function pu(e,t,n){e=Ts(e,t=ii(0,t=ri(n,t),1),1),t=Gc(),null!==e&&(ft(e,1,t),Kc(e,t))}function fu(e,t,n){if(3===e.tag)pu(e,e,n);else for(;null!==t;){if(3===t.tag){pu(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===Dc||!Dc.has(r))){t=Ts(t,e=ci(t,e=ri(n,e),1),1),e=Gc(),null!==t&&(ft(t,1,e),Kc(t,e));break}}t=t.return}}function mu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=Gc(),e.pingedLanes|=e.suspendedLanes&n,vc===e&&(wc&n)===n&&(4===Sc||3===Sc&&(130023424&wc)===wc&&500>Xe()-Ac?nu(e,0):jc|=n),Kc(e,t)}function gu(e,t){0===t&&(0===(1&e.mode)?t=1:(t=it,0===(130023424&(it<<=1))&&(it=4194304)));var n=Gc();null!==(e=Os(e,t))&&(ft(e,t,n),Kc(e,n))}function bu(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),gu(e,n)}function yu(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(n=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(s(314))}null!==r&&r.delete(t),gu(e,n)}function vu(e,t){return Ge(e,t)}function xu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function wu(e,t,n,r){return new xu(e,t,n,r)}function Ou(e){return!(!(e=e.prototype)||!e.isReactComponent)}function ku(e,t){var n=e.alternate;return null===n?((n=wu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Su(e,t,n,r,a,o){var i=2;if(r=e,"function"===typeof e)Ou(e)&&(i=1);else if("string"===typeof e)i=5;else e:switch(e){case k:return Iu(n.children,a,o,t);case S:i=8,a|=8;break;case I:return(e=wu(12,n,t,2|a)).elementType=I,e.lanes=o,e;case E:return(e=wu(13,n,t,a)).elementType=E,e.lanes=o,e;case C:return(e=wu(19,n,t,a)).elementType=C,e.lanes=o,e;case F:return Nu(n,a,o,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case N:i=10;break e;case T:i=9;break e;case j:i=11;break e;case A:i=14;break e;case R:i=16,r=null;break e}throw Error(s(130,null==e?e:typeof e,""))}return(t=wu(i,n,t,a)).elementType=e,t.type=r,t.lanes=o,t}function Iu(e,t,n,r){return(e=wu(7,e,r,t)).lanes=n,e}function Nu(e,t,n,r){return(e=wu(22,e,r,t)).elementType=F,e.lanes=n,e.stateNode={isHidden:!1},e}function Tu(e,t,n){return(e=wu(6,e,null,t)).lanes=n,e}function ju(e,t,n){return(t=wu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Eu(e,t,n,r,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=pt(0),this.expirationTimes=pt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=pt(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Cu(e,t,n,r,a,s,o,i,c){return e=new Eu(e,t,n,i,c),1===t?(t=1,!0===s&&(t|=8)):t=0,s=wu(3,null,null,t),e.current=s,s.stateNode=e,s.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ss(s),e}function Au(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:O,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Ru(e){if(!e)return xa;e:{if(Be(e=e._reactInternals)!==e||1!==e.tag)throw Error(s(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ia(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(s(171))}if(1===e.tag){var n=e.type;if(Ia(n))return ja(e,n,t)}return t}function Fu(e,t,n,r,a,s,o,i,c){return(e=Cu(n,r,!0,e,0,s,0,i,c)).context=Ru(null),n=e.current,(s=Ns(r=Gc(),a=Hc(n))).callback=void 0!==t&&null!==t?t:null,Ts(n,s,a),e.current.lanes=a,ft(e,a,r),Kc(e,r),e}function _u(e,t,n,r){var a=t.current,s=Gc(),o=Hc(a);return n=Ru(n),null===t.context?t.context=n:t.pendingContext=n,(t=Ns(s,o)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=Ts(a,t,o))&&(qc(e,a,o,s),js(e,a,o)),o}function Mu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Du(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Lu(e,t){Du(e,t),(e=e.alternate)&&Du(e,t)}pc=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Oa.current)pi=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return pi=!1,function(e,t,n){switch(t.tag){case 3:ki(t),os();break;case 5:Js(t);break;case 1:Ia(t.type)&&Ea(t);break;case 4:Qs(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,a=t.memoizedProps.value;va(ls,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(va(eo,1&eo.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Ci(e,t,n):(va(eo,1&eo.current),null!==(e=Li(e,t,n))?e.sibling:null);va(eo,1&eo.current);break;case 19:if(r=0!==(n&t.childLanes),0!==(128&e.flags)){if(r)return Mi(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),va(eo,eo.current),r)break;return null;case 22:case 23:return t.lanes=0,yi(e,t,n)}return Li(e,t,n)}(e,t,n);pi=0!==(131072&e.flags)}else pi=!1,Za&&0!==(1048576&t.flags)&&qa(t,Pa,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Di(e,t),e=t.pendingProps;var a=Sa(t,wa.current);bs(t,n),a=bo(null,t,r,e,a,n);var o=yo();return t.flags|=1,"object"===typeof a&&null!==a&&"function"===typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ia(r)?(o=!0,Ea(t)):o=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Ss(t),a.updater=_s,t.stateNode=a,a._reactInternals=t,zs(t,r,e,n),t=Oi(null,t,r,!0,o,n)):(t.tag=0,Za&&o&&Ka(t),fi(null,t,a,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Di(e,t),e=t.pendingProps,r=(a=r._init)(r._payload),t.type=r,a=t.tag=function(e){if("function"===typeof e)return Ou(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===j)return 11;if(e===A)return 14}return 2}(r),e=us(r,e),a){case 0:t=xi(null,t,r,e,n);break e;case 1:t=wi(null,t,r,e,n);break e;case 11:t=mi(null,t,r,e,n);break e;case 14:t=gi(null,t,r,us(r.type,e),n);break e}throw Error(s(306,r,""))}return t;case 0:return r=t.type,a=t.pendingProps,xi(e,t,r,a=t.elementType===r?a:us(r,a),n);case 1:return r=t.type,a=t.pendingProps,wi(e,t,r,a=t.elementType===r?a:us(r,a),n);case 3:e:{if(ki(t),null===e)throw Error(s(387));r=t.pendingProps,a=(o=t.memoizedState).element,Is(e,t),Cs(t,r,null,n);var i=t.memoizedState;if(r=i.element,o.isDehydrated){if(o={element:r,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=Si(e,t,r,n,a=ri(Error(s(423)),t));break e}if(r!==a){t=Si(e,t,r,n,a=ri(Error(s(424)),t));break e}for(Qa=na(t.stateNode.containerInfo.firstChild),Ya=t,Za=!0,Ja=null,n=Gs(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(os(),r===a){t=Li(e,t,n);break e}fi(e,t,r,n)}t=t.child}return t;case 5:return Js(t),null===e&&ns(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,i=a.children,Yr(r,a)?i=null:null!==o&&Yr(r,o)&&(t.flags|=32),vi(e,t),fi(e,t,i,n),t.child;case 6:return null===e&&ns(t),null;case 13:return Ci(e,t,n);case 4:return Qs(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Vs(t,null,r,n):fi(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,mi(e,t,r,a=t.elementType===r?a:us(r,a),n);case 7:return fi(e,t,t.pendingProps,n),t.child;case 8:case 12:return fi(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,a=t.pendingProps,o=t.memoizedProps,i=a.value,va(ls,r._currentValue),r._currentValue=i,null!==o)if(tr(o.value,i)){if(o.children===a.children&&!Oa.current){t=Li(e,t,n);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var c=o.dependencies;if(null!==c){i=o.child;for(var u=c.firstContext;null!==u;){if(u.context===r){if(1===o.tag){(u=Ns(-1,n&-n)).tag=2;var l=o.updateQueue;if(null!==l){var d=(l=l.shared).pending;null===d?u.next=u:(u.next=d.next,d.next=u),l.pending=u}}o.lanes|=n,null!==(u=o.alternate)&&(u.lanes|=n),gs(o.return,n,t),c.lanes|=n;break}u=u.next}}else if(10===o.tag)i=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(i=o.return))throw Error(s(341));i.lanes|=n,null!==(c=i.alternate)&&(c.lanes|=n),gs(i,n,t),i=o.sibling}else i=o.child;if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===t){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}fi(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=t.pendingProps.children,bs(t,n),r=r(a=ys(a)),t.flags|=1,fi(e,t,r,n),t.child;case 14:return a=us(r=t.type,t.pendingProps),gi(e,t,r,a=us(r.type,a),n);case 15:return bi(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:us(r,a),Di(e,t),t.tag=1,Ia(r)?(e=!0,Ea(t)):e=!1,bs(t,n),Ds(t,r,a),zs(t,r,a,n),Oi(null,t,r,!0,e,n);case 19:return Mi(e,t,n);case 22:return yi(e,t,n)}throw Error(s(156,t.tag))};var zu="function"===typeof reportError?reportError:function(e){console.error(e)};function Pu(e){this._internalRoot=e}function Bu(e){this._internalRoot=e}function Wu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Uu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Vu(){}function Gu(e,t,n,r,a){var s=n._reactRootContainer;if(s){var o=s;if("function"===typeof a){var i=a;a=function(){var e=Mu(o);i.call(e)}}_u(t,o,e,a)}else o=function(e,t,n,r,a){if(a){if("function"===typeof r){var s=r;r=function(){var e=Mu(o);s.call(e)}}var o=Fu(t,r,e,0,null,!1,0,"",Vu);return e._reactRootContainer=o,e[ia]=o.current,Mr(8===e.nodeType?e.parentNode:e),eu(),o}for(;a=e.lastChild;)e.removeChild(a);if("function"===typeof r){var i=r;r=function(){var e=Mu(c);i.call(e)}}var c=Cu(e,0,!1,null,0,!1,0,"",Vu);return e._reactRootContainer=c,e[ia]=c.current,Mr(8===e.nodeType?e.parentNode:e),eu((function(){_u(t,c,n,r)})),c}(n,t,e,a,r);return Mu(o)}Bu.prototype.render=Pu.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(s(409));_u(e,t,null,null)},Bu.prototype.unmount=Pu.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;eu((function(){_u(null,e,null,null)})),t[ia]=null}},Bu.prototype.unstable_scheduleHydration=function(e){if(e){var t=wt();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Ct.length&&0!==t&&t<Ct[n].priority;n++);Ct.splice(n,0,e),0===n&&_t(e)}},yt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ct(t.pendingLanes);0!==n&&(mt(t,1|n),Kc(t,Xe()),0===(6&yc)&&(Rc=Xe()+500,Ma()))}break;case 13:eu((function(){var t=Os(e,1);if(null!==t){var n=Gc();qc(t,e,1,n)}})),Lu(e,1)}},vt=function(e){if(13===e.tag){var t=Os(e,134217728);if(null!==t)qc(t,e,134217728,Gc());Lu(e,134217728)}},xt=function(e){if(13===e.tag){var t=Hc(e),n=Os(e,t);if(null!==n)qc(n,e,t,Gc());Lu(e,t)}},wt=function(){return gt},Ot=function(e,t){var n=gt;try{return gt=e,t()}finally{gt=n}},xe=function(e,t,n){switch(t){case"input":if(Z(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=fa(r);if(!a)throw Error(s(90));q(r),Z(r,a)}}}break;case"textarea":ae(e,n);break;case"select":null!=(t=n.value)&&te(e,!!n.multiple,t,!1)}},Ne=$c,Te=eu;var Hu={usingClientEntryPoint:!1,Events:[ha,pa,fa,Se,Ie,$c]},qu={findFiberByHostInstance:da,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},Ku={bundleType:qu.bundleType,version:qu.version,rendererPackageName:qu.rendererPackageName,rendererConfig:qu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:x.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ve(e))?null:e.stateNode},findFiberByHostInstance:qu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var Xu=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Xu.isDisabled&&Xu.supportsFiber)try{tt=Xu.inject(Ku),nt=Xu}catch(Yu){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Hu,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Wu(t))throw Error(s(200));return Au(e,t,null,n)},t.createRoot=function(e,t){if(!Wu(e))throw Error(s(299));var n=!1,r="",a=zu;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=Cu(e,1,!1,null,0,n,0,r,a),e[ia]=t.current,Mr(8===e.nodeType?e.parentNode:e),new Pu(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(s(188));throw e=Object.keys(e).join(","),Error(s(268,e))}return e=null===(e=Ve(t))?null:e.stateNode},t.flushSync=function(e){return eu(e)},t.hydrate=function(e,t,n){if(!Uu(t))throw Error(s(200));return Gu(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Wu(e))throw Error(s(405));var r=null!=n&&n.hydratedSources||null,a=!1,o="",i=zu;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(a=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),t=Fu(t,null,e,1,null!=n?n:null,a,0,o,i),e[ia]=t.current,Mr(e),r)for(e=0;e<r.length;e++)a=(a=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,a]:t.mutableSourceEagerHydrationData.push(n,a);return new Bu(t)},t.render=function(e,t,n){if(!Uu(t))throw Error(s(200));return Gu(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Uu(e))throw Error(s(40));return!!e._reactRootContainer&&(eu((function(){Gu(null,null,e,!1,(function(){e._reactRootContainer=null,e[ia]=null}))})),!0)},t.unstable_batchedUpdates=$c,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Uu(n))throw Error(s(200));if(null==e||void 0===e._reactInternals)throw Error(s(38));return Gu(e,t,n,!1,r)},t.version="18.2.0-next-9e3b772b8-20220608"},function(e,t,n){"use strict";e.exports=n(240)},function(e,t,n){"use strict";(function(e){function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,a=e[r];if(!(0<s(a,t)))break e;e[r]=t,e[n]=a,n=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length,o=a>>>1;r<o;){var i=2*(r+1)-1,c=e[i],u=i+1,l=e[u];if(0>s(c,n))u<a&&0>s(l,c)?(e[r]=l,e[u]=n,r=u):(e[r]=c,e[i]=n,r=i);else{if(!(u<a&&0>s(l,n)))break e;e[r]=l,e[u]=n,r=u}}}return t}function s(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,c=i.now();t.unstable_now=function(){return i.now()-c}}var u=[],l=[],d=1,h=null,p=3,f=!1,m=!1,g=!1,b="function"===typeof setTimeout?setTimeout:null,y="function"===typeof clearTimeout?clearTimeout:null,v="undefined"!==typeof e?e:null;function x(e){for(var t=r(l);null!==t;){if(null===t.callback)a(l);else{if(!(t.startTime<=e))break;a(l),t.sortIndex=t.expirationTime,n(u,t)}t=r(l)}}function w(e){if(g=!1,x(e),!m)if(null!==r(u))m=!0,F(O);else{var t=r(l);null!==t&&_(w,t.startTime-e)}}function O(e,n){m=!1,g&&(g=!1,y(N),N=-1),f=!0;var s=p;try{for(x(n),h=r(u);null!==h&&(!(h.expirationTime>n)||e&&!E());){var o=h.callback;if("function"===typeof o){h.callback=null,p=h.priorityLevel;var i=o(h.expirationTime<=n);n=t.unstable_now(),"function"===typeof i?h.callback=i:h===r(u)&&a(u),x(n)}else a(u);h=r(u)}if(null!==h)var c=!0;else{var d=r(l);null!==d&&_(w,d.startTime-n),c=!1}return c}finally{h=null,p=s,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var k,S=!1,I=null,N=-1,T=5,j=-1;function E(){return!(t.unstable_now()-j<T)}function C(){if(null!==I){var e=t.unstable_now();j=e;var n=!0;try{n=I(!0,e)}finally{n?k():(S=!1,I=null)}}else S=!1}if("function"===typeof v)k=function(){v(C)};else if("undefined"!==typeof MessageChannel){var A=new MessageChannel,R=A.port2;A.port1.onmessage=C,k=function(){R.postMessage(null)}}else k=function(){b(C,0)};function F(e){I=e,S||(S=!0,k())}function _(e,n){N=b((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||f||(m=!0,F(O))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):T=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return r(u)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,a,s){var o=t.unstable_now();switch("object"===typeof s&&null!==s?s="number"===typeof(s=s.delay)&&0<s?o+s:o:s=o,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:d++,callback:a,priorityLevel:e,startTime:s,expirationTime:i=s+i,sortIndex:-1},s>o?(e.sortIndex=s,n(l,e),null===r(u)&&e===r(l)&&(g?(y(N),N=-1):g=!0,_(w,s-o))):(e.sortIndex=i,n(u,e),m||f||(m=!0,F(O))),e},t.unstable_shouldYield=E,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}}).call(this,n(188).setImmediate)},function(e,t,n){(function(e,t){!function(e,n){"use strict";if(!e.setImmediate){var r,a=1,s={},o=!1,i=e.document,c=Object.getPrototypeOf&&Object.getPrototypeOf(e);c=c&&c.setTimeout?c:e,"[object process]"==={}.toString.call(e.process)?r=function(e){t.nextTick((function(){l(e)}))}:function(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=n,t}}()?function(){var t="setImmediate$"+Math.random()+"$",n=function(n){n.source===e&&"string"===typeof n.data&&0===n.data.indexOf(t)&&l(+n.data.slice(t.length))};e.addEventListener?e.addEventListener("message",n,!1):e.attachEvent("onmessage",n),r=function(n){e.postMessage(t+n,"*")}}():e.MessageChannel?function(){var e=new MessageChannel;e.port1.onmessage=function(e){l(e.data)},r=function(t){e.port2.postMessage(t)}}():i&&"onreadystatechange"in i.createElement("script")?function(){var e=i.documentElement;r=function(t){var n=i.createElement("script");n.onreadystatechange=function(){l(t),n.onreadystatechange=null,e.removeChild(n),n=null},e.appendChild(n)}}():r=function(e){setTimeout(l,0,e)},c.setImmediate=function(e){"function"!==typeof e&&(e=new Function(""+e));for(var t=new Array(arguments.length-1),n=0;n<t.length;n++)t[n]=arguments[n+1];var o={callback:e,args:t};return s[a]=o,r(a),a++},c.clearImmediate=u}function u(e){delete s[e]}function l(e){if(o)setTimeout(l,0,e);else{var t=s[e];if(t){o=!0;try{!function(e){var t=e.callback,n=e.args;switch(n.length){case 0:t();break;case 1:t(n[0]);break;case 2:t(n[0],n[1]);break;case 3:t(n[0],n[1],n[2]);break;default:t.apply(void 0,n)}}(t)}finally{u(e),o=!1}}}}}("undefined"===typeof self?"undefined"===typeof e?this:e:self)}).call(this,n(140),n(141))},function(e,t,n){"use strict";t.byteLength=function(e){var t=u(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){var t,n,r=u(e),o=r[0],i=r[1],c=new s(function(e,t,n){return 3*(t+n)/4-n}(0,o,i)),l=0,d=i>0?o-4:o;for(n=0;n<d;n+=4)t=a[e.charCodeAt(n)]<<18|a[e.charCodeAt(n+1)]<<12|a[e.charCodeAt(n+2)]<<6|a[e.charCodeAt(n+3)],c[l++]=t>>16&255,c[l++]=t>>8&255,c[l++]=255&t;2===i&&(t=a[e.charCodeAt(n)]<<2|a[e.charCodeAt(n+1)]>>4,c[l++]=255&t);1===i&&(t=a[e.charCodeAt(n)]<<10|a[e.charCodeAt(n+1)]<<4|a[e.charCodeAt(n+2)]>>2,c[l++]=t>>8&255,c[l++]=255&t);return c},t.fromByteArray=function(e){for(var t,n=e.length,a=n%3,s=[],o=0,i=n-a;o<i;o+=16383)s.push(l(e,o,o+16383>i?i:o+16383));1===a?(t=e[n-1],s.push(r[t>>2]+r[t<<4&63]+"==")):2===a&&(t=(e[n-2]<<8)+e[n-1],s.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"="));return s.join("")};for(var r=[],a=[],s="undefined"!==typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,c=o.length;i<c;++i)r[i]=o[i],a[o.charCodeAt(i)]=i;function u(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function l(e,t,n){for(var a,s,o=[],i=t;i<n;i+=3)a=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(255&e[i+2]),o.push(r[(s=a)>>18&63]+r[s>>12&63]+r[s>>6&63]+r[63&s]);return o.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},function(e,t){t.read=function(e,t,n,r,a){var s,o,i=8*a-r-1,c=(1<<i)-1,u=c>>1,l=-7,d=n?a-1:0,h=n?-1:1,p=e[t+d];for(d+=h,s=p&(1<<-l)-1,p>>=-l,l+=i;l>0;s=256*s+e[t+d],d+=h,l-=8);for(o=s&(1<<-l)-1,s>>=-l,l+=r;l>0;o=256*o+e[t+d],d+=h,l-=8);if(0===s)s=1-u;else{if(s===c)return o?NaN:1/0*(p?-1:1);o+=Math.pow(2,r),s-=u}return(p?-1:1)*o*Math.pow(2,s-r)},t.write=function(e,t,n,r,a,s){var o,i,c,u=8*s-a-1,l=(1<<u)-1,d=l>>1,h=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:s-1,f=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(i=isNaN(t)?1:0,o=l):(o=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-o))<1&&(o--,c*=2),(t+=o+d>=1?h/c:h*Math.pow(2,1-d))*c>=2&&(o++,c/=2),o+d>=l?(i=0,o=l):o+d>=1?(i=(t*c-1)*Math.pow(2,a),o+=d):(i=t*Math.pow(2,d-1)*Math.pow(2,a),o=0));a>=8;e[n+p]=255&i,p+=f,i/=256,a-=8);for(o=o<<a|i,u+=a;u>0;e[n+p]=255&o,p+=f,o/=256,u-=8);e[n+p-f]|=128*m}},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t,n){"use strict";(function(e){var t=n(18);const r=()=>n(246);let a;class s{constructor(){this.util=n(247),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return null!=Object(t.b)().global.fetch?Object(t.b)().global.fetch(e,n):(null==a&&(a=r()),a(e,n))}now(){const t=e.hrtime();return 1e3*t[0]+t[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(t));return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}Object(t.b)().get("IS_NODE")&&!Object(t.b)().get("IS_BROWSER")&&Object(t.b)().setPlatform("node",new s)}).call(this,n(141))},,,function(e,t,n){(function(e){var r;!function(e,a,s){function o(e){var t=this,n=function(){var e=4022871197;return function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function c(e,t){var n=new o(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(61)&&n(105)?void 0===(r=function(){return c}.call(t,n,t,a))||(a.exports=r):this.alea=c}(0,e,n(61))}).call(this,n(104)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function c(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(61)&&n(105)?void 0===(r=function(){return c}.call(t,n,t,a))||(a.exports=r):this.xor128=c}(0,e,n(61))}).call(this,n(104)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function c(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(61)&&n(105)?void 0===(r=function(){return c}.call(t,n,t,a))||(a.exports=r):this.xorwow=c}(0,e,n(61))}).call(this,n(104)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(61)&&n(105)?void 0===(r=function(){return c}.call(t,n,t,a))||(a.exports=r):this.xorshift7=c}(0,e,n(61))}).call(this,n(104)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,o,i=[],c=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,c=Math.max(c,t.length)),a=0,s=-32;s<c;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(o=o+1640531527|0,a=0==(n=i[127&s]^=r+o)?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;e.w=o,e.X=i,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(61)&&n(105)?void 0===(r=function(){return c}.call(t,n,t,a))||(a.exports=r):this.xor4096=c}(0,e,n(61))}).call(this,n(104)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function c(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(61)&&n(105)?void 0===(r=function(){return c}.call(t,n,t,a))||(a.exports=r):this.tychei=c}(0,e,n(61))}).call(this,n(104)(e))},function(e,t,n){var r;!function(a,s,o){var i,c=o.pow(256,6),u=o.pow(2,52),l=2*u;function d(e,t,n){var r=[],d=f(function e(t,n){var r,a=[],s=typeof t;if(n&&"object"==s)for(r in t)try{a.push(e(t[r],n-1))}catch(o){}return a.length?a:"string"==s?t:t+"\0"}((t=1==t?{entropy:!0}:t||{}).entropy?[e,m(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(256):(e=new Uint8Array(256),(a.crypto||a.msCrypto).getRandomValues(e)),m(e)}catch(r){var t=a.navigator,n=t&&t.plugins;return[+new Date,a,n,a.screen,m(s)]}}():e,3),r),g=new h(r),b=function(){for(var e=g.g(6),t=c,n=0;e<u;)e=256*(e+n),t*=256,n=g.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|g.g(4)},b.quick=function(){return g.g(4)/4294967296},b.double=b,f(m(g.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&p(r,g),e.state=function(){return p(g,{})}),n?(o.random=e,t):e})(b,d,"global"in t?t.global:this==o,t.state)}function h(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<256;)o[a]=a++;for(a=0;a<256;a++)o[a]=o[s=255&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=255&a+1],n=256*n+o[255&(o[a]=o[s=255&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(256)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){for(var n,r=e+"",a=0;a<r.length;)t[255&a]=255&(n^=19*t[255&a])+r.charCodeAt(a++);return m(t)}function m(e){return String.fromCharCode.apply(0,e)}if(f(o.random(),s),e.exports){e.exports=d;try{i=n(255)}catch(g){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}("undefined"!==typeof self?self:this,[],Math)},,,,,,function(e,t,n){"use strict";var r={};n.r(r),n.d(r,"simpleAbsImpl",(function(){return Ml})),n.d(r,"addImpl",(function(){return Nl})),n.d(r,"bincountImpl",(function(){return yd})),n.d(r,"bincountReduceImpl",(function(){return vd})),n.d(r,"bitwiseAndImpl",(function(){return wd})),n.d(r,"castImpl",(function(){return wl})),n.d(r,"ceilImpl",(function(){return Id})),n.d(r,"concatImpl",(function(){return Ad})),n.d(r,"equalImpl",(function(){return mh})),n.d(r,"expImpl",(function(){return Nh})),n.d(r,"expm1Impl",(function(){return Ah})),n.d(r,"floorImpl",(function(){return Kh})),n.d(r,"floorDivImpl",(function(){return Qh})),n.d(r,"gatherNdImpl",(function(){return tp})),n.d(r,"gatherV2Impl",(function(){return rp})),n.d(r,"greaterImpl",(function(){return sp})),n.d(r,"greaterEqualImpl",(function(){return cp})),n.d(r,"lessImpl",(function(){return yp})),n.d(r,"lessEqualImpl",(function(){return wp})),n.d(r,"linSpaceImpl",(function(){return Sp})),n.d(r,"logImpl",(function(){return Np})),n.d(r,"maxImpl",(function(){return Wp})),n.d(r,"maximumImpl",(function(){return Gp})),n.d(r,"minimumImpl",(function(){return ef})),n.d(r,"multiplyImpl",(function(){return ih})),n.d(r,"negImpl",(function(){return df})),n.d(r,"notEqualImpl",(function(){return vf})),n.d(r,"prodImpl",(function(){return Rf})),n.d(r,"raggedGatherImpl",(function(){return Lf})),n.d(r,"raggedRangeImpl",(function(){return Pf})),n.d(r,"raggedTensorToTensorImpl",(function(){return Hf})),n.d(r,"rangeImpl",(function(){return Kf})),n.d(r,"rsqrtImpl",(function(){return sm})),n.d(r,"scatterImpl",(function(){return cm})),n.d(r,"sigmoidImpl",(function(){return hl})),n.d(r,"sliceImpl",(function(){return fd})),n.d(r,"sparseFillEmptyRowsImpl",(function(){return jm})),n.d(r,"sparseReshapeImpl",(function(){return Cm})),n.d(r,"sparseSegmentReductionImpl",(function(){return Rm})),n.d(r,"sqrtImpl",(function(){return Lm})),n.d(r,"squaredDifferenceImpl",(function(){return Wm})),n.d(r,"staticRegexReplaceImpl",(function(){return Gm})),n.d(r,"stridedSliceImpl",(function(){return Ym})),n.d(r,"stringNGramsImpl",(function(){return Jm})),n.d(r,"stringSplitImpl",(function(){return tg})),n.d(r,"stringToHashBucketFastImpl",(function(){return rg})),n.d(r,"subImpl",(function(){return Lh})),n.d(r,"tileImpl",(function(){return lg})),n.d(r,"topKImpl",(function(){return fg})),n.d(r,"transposeImpl",(function(){return Ul})),n.d(r,"uniqueImpl",(function(){return wg}));var a=n(0),s=n(3),o=n(11),i=n(9),c=n(75);const u={kernelName:s.a,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(i.a)(e,Object(c.a)(Object(o.a)(n,"float32"),-1))}}};var l=n(14),d=n(28),h=n(17),p=n(33),f=n(25),m=n(13);const g={kernelName:s.b,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(f.a)(Object(o.a)(n,"float32")),r=Object(p.a)(Object(m.a)(Object(h.a)(1),t));return Object(d.a)(Object(l.a)(e,r))}}}},b={kernelName:s.c,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(p.a)(Object(m.a)(Object(f.a)(Object(o.a)(n,"float32")),1));return Object(l.a)(e,t)}}}};var y=n(15),v=n(7),x=n(16);const w={kernelName:s.d,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=y.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=y.getReductionAxes(n.shape,a);return r.length>0&&(t=Object(x.a)(t,r)),Object(v.a)(t,n.shape)},b:()=>{let t=e;const n=y.getReductionAxes(r.shape,a);return n.length>0&&(t=Object(x.a)(t,n)),Object(v.a)(t,r.shape)}}}},O={kernelName:s.e,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}};var k=n(19);const S={kernelName:s.h,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(k.a)(n)}}},I={kernelName:s.i,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(k.a)(n)}}},N={kernelName:s.j,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(l.a)(e,Object(p.a)(Object(m.a)(Object(h.a)(1),Object(f.a)(Object(o.a)(n,"float32")))))}}};var T=n(12);const j={kernelName:s.k,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(p.a)(Object(T.a)(Object(h.a)(1),Object(f.a)(Object(o.a)(n,"float32"))));return Object(l.a)(e,t)}}}},E={kernelName:s.m,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(y.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=Object(T.a)(Object(f.a)(n),Object(f.a)(r));let s=Object(i.a)(e,Object(l.a)(r,t));const o=Object(y.getReductionAxes)(n.shape,a);return o.length>0&&(s=Object(x.a)(s,o)),Object(v.a)(s,n.shape)},b:()=>{const t=Object(T.a)(Object(f.a)(n),Object(f.a)(r));let s=Object(d.a)(Object(i.a)(e,Object(l.a)(n,t)));const o=Object(y.getReductionAxes)(r.shape,a);return o.length>0&&(s=Object(x.a)(s,o)),Object(v.a)(s,r.shape)}}}},C={kernelName:s.l,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(l.a)(e,Object(T.a)(Object(f.a)(Object(o.a)(n,"float32")),1))}}},A={kernelName:s.n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(l.a)(e,Object(m.a)(Object(h.a)(1),Object(f.a)(Object(o.a)(n,"float32"))))}}};var R=n(5),F=n(2),_=n(8),M=n(20),D=n(4);const L=Object(D.b)({avgPool3dGrad_:function(e,t,n,r,a,o){const i=Object(F.a)(e,"dy","avgPool3dGrad"),c=Object(F.a)(t,"input","avgPool3dGrad");let u=i,l=c,d=!1;4===c.rank&&(d=!0,u=Object(v.a)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=Object(v.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),_.c(5===u.rank,()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(u.rank,".")),_.c(5===l.rank,()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(l.rank,".")),Object(M.a)("avgPool3dGrad",a,o);const h={dy:u,input:l},p={filterSize:n,strides:r,pad:a,dimRoundingMode:o},f=R.a.runKernel(s.q,h,p);return d?Object(v.a)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),z={kernelName:s.p,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:o,dimRoundingMode:i}=n;return{x:()=>L(e,r,a,s,o,i)}}};const P=Object(D.b)({avgPoolGrad_:function(e,t,n,r,a){const o=Object(F.a)(e,"dy","avgPoolGrad"),i=Object(F.a)(t,"input","avgPoolGrad");_.c(i.rank===o.rank,()=>"Rank of input (".concat(i.rank,") does not match rank of dy (").concat(o.rank,")"));let c=i,u=o,l=!1;3===i.rank&&(l=!0,c=Object(v.a)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Object(v.a)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),_.c(4===u.rank,()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(u.rank,".")),_.c(4===c.rank,()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,"."));const d={dy:u,input:c},h={filterSize:n,strides:r,pad:a},p=R.a.runKernel(s.r,d,h);return l?Object(v.a)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),B={kernelName:s.o,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:o}=n;return{x:()=>P(e,r,a,s,o)}}};var W=n(26);const U={kernelName:s.s,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:o}=n;return s||o?!s&&o?{a:()=>Object(W.a)(e,a,!1,!1),b:()=>Object(W.a)(e,r,!0,!1)}:s&&!o?{a:()=>Object(W.a)(a,e,!1,!0),b:()=>Object(W.a)(r,e,!1,!1)}:{a:()=>Object(W.a)(a,e,!0,!0),b:()=>Object(W.a)(e,r,!0,!0)}:{a:()=>Object(W.a)(e,a,!1,!0),b:()=>Object(W.a)(r,e,!0,!1)}}};var V=n(96);const G={kernelName:s.t,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Object(V.a)(e,r,a)}}},H={kernelName:s.x,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,o=Array.from(s);for(let c=a.length-1;c>=0;c--)if(a[c]===s[c])o[c]=1;else if(1!==a[c])throw new Error("broadcastTo(): [".concat(a,"] cannot be broadcast to [").concat(s,"]."));const i=[];for(let c=0;c<o.length;c++)o[c]>1&&i.push(c);return{x:()=>Object(x.a)(e,i,!0)}}},q={kernelName:s.y,gradFunc:e=>({x:()=>e.clone()})},K={kernelName:s.z,gradFunc:e=>({x:()=>Object(k.a)(e)})};var X=n(63),Y=n(54),Q=n(58),Z=n(31);const J={kernelName:s.A,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Object(Z.a)(Object(Q.a)(Object(X.a)(r,a),Object(Y.a)(r,s)),e,Object(k.a)(e))}}},$={kernelName:s.C,inputsToSave:["x"],gradFunc:u.gradFunc};var ee=n(59);const te={kernelName:s.D,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape),{axis:a}=n,s=Object(_.I)(a,t[0].shape)[0],o=r.map(e=>e[s]);return Object(ee.a)(e,o,s).map(e=>()=>e)}};var ne=n(134),re=n(132);const ae={kernelName:s.E,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:o,pad:i,dataFormat:c}=n;return _.c(M.k(s),()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'")),{x:()=>Object(re.a)(r.shape,e,a,o,i,c),filter:()=>Object(ne.a)(r,e,a.shape,o,i,c)}}};var se=n(62);const oe={kernelName:s.G,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:o,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>Object(se.a)(e,a,s,o,i,1,c),filter:()=>Object(ne.a)(e,r,a.shape,s,o,i,c)}}};const ie=Object(D.b)({conv3DBackpropFilter_:function(e,t,n,r,a){let o=e;4===e.rank&&(o=Object(v.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Object(v.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),_.c(5===o.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(o.shape,".")),_.c(5===i.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(i.shape,".")),_.c(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,".")),_.c(o.shape[4]===n[3],()=>"Error in conv3dDerFilter: depth of input ".concat(o.shape[4],") must ")+"match input depth in filter (".concat(n[3],".")),_.c(i.shape[4]===n[4],()=>"Error in conv3dDerFilter: depth of dy (".concat(i.shape[4],") must ")+"match output depth for filter (".concat(n[4],")."));const c={x:o,dy:i},u={strides:r,pad:a,filterShape:n};return R.a.runKernel(s.I,c,u)}});var ce=n(180);const ue={kernelName:s.H,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;_.c(Object(M.k)(r),()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(r,"'"));const[o,i]=t;return{x:()=>Object(ce.a)(o.shape,e,i,a,s),filter:()=>ie(o,e,i.shape,a,s)}}};var le=n(170);const de={kernelName:s.K,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(i.a)(Object(d.a)(Object(le.a)(Object(o.a)(n,"float32"))),e)}}};var he=n(171);const pe={kernelName:s.L,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(i.a)(Object(he.a)(Object(o.a)(n,"float32")),e)}}};var fe=n(35),me=n(117),ge=n(44);const be={kernelName:s.O,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:o}=n;return{x:()=>{const t=Object(fe.f)([a],r.rank);let n=Object(me.a)(e,a,s,!o);return null!=t&&(n=Object(ge.a)(n,t)),n}}}};var ye=n(184),ve=n(183);const xe={kernelName:s.R,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:o}=n,i=null==r?[1,1]:r;_.c(M.k(i),()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'"));const[c,u]=t;return _.c(4===c.rank,()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,".")),_.c(4===u.rank,()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(u.rank,".")),_.c(c.shape[3]===u.shape[2],()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(u.shape[2],".")),_.c(M.i(a,i),()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(a," and dilations ")+"'".concat(i,"'.")),M.a("depthwiseConv2d",s,o),{x:()=>Object(ve.a)(c.shape,e,u,a,s,i,o),filter:()=>Object(ye.a)(c,e,u.shape,a,s,i,o)}}},we={kernelName:s.V,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,o={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>R.a.runKernel(s.X,o,n),filter:()=>R.a.runKernel(s.W,i,n)}}},Oe={kernelName:s.ab,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>R.a.runKernel(s.bb,r)}}};var ke=n(36);const Se={kernelName:s.db,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Object(i.a)(Object(ke.a)(Object(d.a)(Object(f.a)(n))),2/Math.sqrt(Math.PI));return{x:()=>Object(i.a)(e,r)}}},Ie={kernelName:s.eb,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(i.a)(e,n)}}},Ne={kernelName:s.fb,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Object(v.a)(e,n.shape)}}},Te={kernelName:s.gb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(i.a)(e,Object(ke.a)(n))}}},je={kernelName:s.kb,gradFunc:e=>({x:()=>Object(k.a)(e)})},Ee={kernelName:s.lb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(y.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=Object(l.a)(e,Object(o.a)(r,"float32")),s=Object(y.getReductionAxes)(n.shape,a);return s.length>0?Object(v.a)(Object(x.a)(t,s),n.shape):t},b:()=>{let t=Object(i.a)(e,Object(o.a)(n,"float32"));const s=Object(y.getReductionAxes)(r.shape,a);s.length>0&&(t=Object(v.a)(Object(x.a)(t,s),r.shape));const c=Object(f.a)(r);return Object(d.a)(Object(l.a)(t,Object(o.a)(c,"float32")))}}}};var Ce=n(167),Ae=n(67);const Re={kernelName:s.nb,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,o,c]=t,u=null==c?Object(h.a)(1):c,l=Object(y.getReductionAxes)(s.shape,a.shape),d=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)d.push(a.shape[e]);d.push(1)}const p=Object(m.a)(a,s),f=Object(i.a)(e,u),g=Object(Ce.a)(Object(T.a)(o,Object(h.a)(r))),b=Object(i.a)(Object(i.a)(Object(i.a)(g,g),g),Object(h.a)(-.5));return{x:()=>1===s.rank?Object(v.a)(Object(i.a)(Object(i.a)(e,Object(Ae.a)(Object(v.a)(g,[1,1,1,s.shape[0]]),d)),u),a.shape):Object(v.a)(Object(i.a)(Object(i.a)(e,g),u),a.shape),mean:()=>{let e=Object(i.a)(Object(i.a)(g,Object(h.a)(-1)),f);return 1===s.rank&&(e=Object(x.a)(e,l)),Object(v.a)(e,s.shape)},variance:()=>{let e=Object(i.a)(Object(i.a)(b,p),f);return 1===s.rank&&(e=Object(x.a)(e,l)),Object(v.a)(e,s.shape)},scale:()=>{const t=Object(i.a)(p,g);let n=Object(i.a)(e,t);return 1===s.rank&&(n=Object(x.a)(n,l)),Object(v.a)(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Object(x.a)(t,l)),Object(v.a)(t,s.shape)}}}};var Fe=n(49),_e=n(130);const Me={kernelName:s.rb,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s,batchDims:o}=n,i=Object(_.I)(s,r.shape)[0],c=(e,t,n)=>()=>{const r=e.shape,a=t.size,o=r.slice(0,i),c=o.length,u=r.slice(s,r.length).slice(1),l=u.length,d=De(0,c),h=De(c+1,c+1+l),p=Le([o,[a],u]),f=Object(v.a)(n,p),m=Object(v.a)(t,[a]),g=Le([[c],d,h]),b=Object(ge.a)(f,g);let y=Object(_e.a)(b,m,e.shape[i]);const x=Object(fe.h)(g);return y=Object(ge.a)(y,x),y};if(1===o){const t=r.shape[0],n=r.split(t,0);return{x:()=>Object(Fe.a)(n.map((t,n)=>c(t,a.slice(n,1),e.slice(n,1))())).reshape(r.shape),indices:()=>a}}return{x:c(r,a,e),indices:()=>a}}};function De(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Le(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const ze={kernelName:s.tb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Object(k.a)(n),b:()=>Object(k.a)(r)}}},Pe={kernelName:s.vb,gradFunc:e=>({x:()=>Object(o.a)(e,"float32")})},Be={kernelName:s.xb,gradFunc:e=>({x:()=>Object(k.a)(e)})},We={kernelName:s.yb,gradFunc:e=>({x:()=>Object(k.a)(e)})},Ue={kernelName:s.zb,gradFunc:e=>({x:()=>Object(k.a)(e)})};var Ve=n(38);const Ge={kernelName:s.Cb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=Object(Ve.a)(r,0);return{x:()=>Object(Z.a)(s,e,Object(i.a)(e,a))}}},He={kernelName:s.Hb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(l.a)(e,Object(T.a)(n,1))}}},qe={kernelName:s.Gb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(l.a)(e,Object(o.a)(n,"float32"))}}},Ke={kernelName:s.Ib,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=Object(ke.a)(r);return Object(m.a)(e,Object(i.a)(Object(x.a)(e,a,!0),t))}}}};const Xe=Object(D.b)({localResponseNormalizationBackprop_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5;const c={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:o,beta:i};return R.a.runKernel(s.Bb,c,u)}}),Ye={kernelName:s.Ab,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:o,alpha:i,beta:c}=n;return{x:()=>Xe(r,a,e,s,o,i,c)}}};var Qe=n(91);function Ze(e,t,n,r){return t.rank<n.rank&&(t=Object(v.a)(t,fe.e(t.shape,r))),e.rank<n.rank&&(e=Object(v.a)(e,fe.e(e.shape,r))),{x:()=>Object(i.a)(e,Object(o.a)(Object(Qe.a)(n,t),e.dtype))}}const Je={kernelName:s.Mb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],o=Ze(e,t[1],s,_.I(a,s.shape));return{x:()=>o.x()}}};var $e=n(80);const et={kernelName:s.Sb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Object(i.a)(e,Object(o.a)(Object(X.a)(n,r),"float32")),b:()=>Object(i.a)(e,Object(o.a)(Object($e.a)(n,r),"float32"))}}};const tt=Object(D.b)({maxPool3dGrad_:function(e,t,n,r,a,o,i){const c=Object(F.a)(e,"dy","maxPool3dGrad"),u=Object(F.a)(t,"input","maxPool3dGrad"),l=Object(F.a)(n,"output","maxPool3dGrad");let d=c,h=u,p=l,f=!1;4===u.rank&&(f=!0,d=Object(v.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),h=Object(v.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=Object(v.a)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),_.c(5===d.rank,()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(d.rank,".")),_.c(5===h.rank,()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(h.rank,".")),_.c(5===p.rank,()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(p.rank,".")),Object(M.a)("maxPool3dGrad",o,i);const m={dy:d,input:h,output:p},g={filterSize:r,strides:a,pad:o,dimRoundingMode:i},b=R.a.runKernel(s.Pb,m,g);return f?Object(v.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),nt={kernelName:s.Ob,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=n;return{x:()=>tt(e,r,a,s,o,i,c)}}};const rt=Object(D.b)({maxPoolGrad_:function(e,t,n,r,a,o,i){const c=Object(F.a)(e,"dy","maxPoolGrad"),u=Object(F.a)(t,"input","maxPoolGrad"),l=Object(F.a)(n,"output","maxPoolGrad");_.c(u.rank===c.rank,()=>"Rank of input (".concat(u.rank,") does not match rank of dy ")+"(".concat(c.rank,")")),_.c(4===c.rank,()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,".")),_.c(4===u.rank,()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(u.rank,".")),M.a("maxPoolGrad",o,i);const d={dy:c,input:u,output:l},h={filterSize:r,strides:a,pad:o,dimRoundingMode:i};return R.a.runKernel(s.Qb,d,h)}}),at={kernelName:s.Nb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:o,pad:i}=n;return{x:()=>rt(e,r,a,s,o,i)}}};var st=n(50);const ot={kernelName:s.Tb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=_.I(a,r.shape),o=Object(fe.d)(r.shape,s)[1],c=_.O(o);return{x:()=>{const t=r.shape.slice();s.forEach(e=>{t[e]=1});const n=Object(v.a)(e,t);return Object(l.a)(Object(i.a)(n,Object(st.a)(r.shape,"float32")),c)}}}},it={kernelName:s.Ub,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,o]=t,i=Ze(e,o,s,_.I(a,s.shape));return{x:()=>i.x()}}},ct={kernelName:s.Vb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Object(i.a)(e,Object(o.a)(Object(Y.a)(n,r),"float32")),b:()=>Object(i.a)(e,Object(o.a)(Object(Ve.a)(n,r),"float32"))}}};var ut=n(27);const lt={kernelName:s.Wb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>Object(ut.a)(e,s,r.shape)}}};var dt=n(119);const ht={kernelName:s.Xb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(y.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=Object(y.getReductionAxes)(n.shape,a);return t.length>0?Object(v.a)(Object(x.a)(e,t),n.shape):e},b:()=>{const t=Object(i.a)(e,Object(d.a)(Object(dt.a)(Object(l.a)(n,r)))),s=Object(y.getReductionAxes)(r.shape,a);return s.length>0?Object(v.a)(Object(x.a)(t,s),r.shape):t}}}},pt={kernelName:s.Zb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(y.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=Object(i.a)(e,Object(o.a)(r,"float32")),s=Object(y.getReductionAxes)(n.shape,a);return s.length>0?Object(v.a)(Object(x.a)(t,s),n.shape):t},b:()=>{const t=Object(i.a)(e,Object(o.a)(n,"float32")),s=Object(y.getReductionAxes)(r.shape,a);return s.length>0?Object(v.a)(Object(x.a)(t,s),r.shape):t}}}},ft={kernelName:s.ac,gradFunc:e=>({x:()=>Object(d.a)(e)})};var mt=n(73);const gt={kernelName:s.fc,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Object(mt.a)(n.shape,"float32")}}},bt={kernelName:s.gc,gradFunc:e=>({x:()=>Object(k.a)(e)})};var yt=n(76);const vt={kernelName:s.hc,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Object(yt.a)(e,r).map(e=>()=>e)}},xt={kernelName:s.ic,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>Object(ut.a)(e,s,r.shape)}}};var wt=n(69),Ot=n(48);const kt={kernelName:s.jc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,c=r,u=y.assertAndGetBroadcastShape(s.shape,c.shape);return{a:()=>{const t=Object(o.a)(c,"float32");let n=Object(i.a)(e,Object(i.a)(t,Object(Ot.a)(s,Object(m.a)(t,Object(h.a)(1)))));const r=y.getReductionAxes(s.shape,u);return r.length>0&&(n=Object(x.a)(n,r)),Object(v.a)(n,s.shape)},b:()=>{const t=Object(Ve.a)(s,0),n=Object(Z.a)(t,Object(wt.a)(s),Object(k.a)(s));let r=Object(i.a)(e,Object(i.a)(a,n));const o=y.getReductionAxes(c.shape,u);return o.length>0&&(r=Object(x.a)(r,o)),Object(v.a)(r,c.shape)}}}},St={kernelName:s.kc,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(Ve.a)(n,0);return{x:()=>Object(Z.a)(a,e,Object(i.a)(e,r)),alpha:()=>{let t=Object(Z.a)(a,Object(k.a)(e),Object(i.a)(e,n));const s=Object(y.getReductionAxes)(r.shape,e.shape);return s.length>0&&(t=Object(x.a)(t,s)),Object(v.a)(t,r.shape)}}}};var It=n(139),Nt=n(100);function Tt(e,t,n){const r=e.shape.length,a=r-n.length,s=It.Ed.getAxesPermutation(n,r);let o=e;null!=s&&(o=Object(ge.a)(e,s));const c=o.shape.slice(),u=c.splice(r-n.length,n.length).reduce((e,t)=>e*t,1);c.push(u);let l=function(e,t,n){const r=e.shape.slice();r[n]=1;const a=Object(v.a)(t,r),s=Object(Nt.a)(e,n,!0,!1),o=Object(Nt.a)(e,n,!0,!0),c=Object(i.a)(s,o);return Object(i.a)(a,c)}(o.reshape(c),t,a);if(l=l.reshape(o.shape),null!=s){const e=It.Ed.getUndoAxesPermutation(s);l=Object(ge.a)(l,e)}return l}const jt={kernelName:s.lc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;let s=[];return s=void 0===a||null===a?r.shape.map((e,t)=>t):"number"===typeof a?[a]:a,{x:()=>Tt(r,e,s)}}},Et={kernelName:s.rc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=y.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{const t=Object(l.a)(e,Object(o.a)(r,"float32")),s=y.getReductionAxes(n.shape,a);return s.length>0?Object(v.a)(Object(x.a)(t,s),n.shape):t},b:()=>{let t=Object(i.a)(e,Object(o.a)(n,"float32"));const s=y.getReductionAxes(r.shape,a);s.length>0&&(t=Object(v.a)(Object(x.a)(t,s),r.shape));const c=Object(f.a)(r);return Object(d.a)(Object(l.a)(t,Object(o.a)(c,"float32")))}}}},Ct={kernelName:s.sc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(l.a)(e,Object(d.a)(Object(f.a)(n)))}}},At={kernelName:s.uc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Object(i.a)(Object(Y.a)(n,6),Object(c.a)(n));return{x:()=>Object(i.a)(e,Object(o.a)(r,"float32"))}}},Rt={kernelName:s.tc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(i.a)(e,Object(o.a)(Object(c.a)(n),"float32"))}}},Ft={kernelName:s.vc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(v.a)(e,n.shape)}}},_t={kernelName:s.wc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>R.a.runKernel(s.xc,a,n)}}},Mt={kernelName:s.yc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>R.a.runKernel(s.zc,a,n)}}};var Dt=n(43);const Lt={kernelName:s.Ac,gradFunc:(e,t,n)=>{const{dims:r}=n,a=Object(_.I)(r,e.shape);return{x:()=>Object(Dt.a)(e,a)}}},zt={kernelName:s.Cc,gradFunc:e=>({x:()=>Object(k.a)(e)})},Pt={kernelName:s.Dc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(Object(l.a)(e,Object(i.a)(Object(Ot.a)(n,1.5),2)))}}};var Bt=n(95);const Wt={kernelName:s.Gc,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Object(o.a)(Object(k.a)(n),"float32"),t:()=>Object(i.a)(e,Object(o.a)(n,e.dtype)),e:()=>Object(i.a)(e,Object(o.a)(Object(Bt.a)(n),e.dtype))}}};var Ut=n(138);const Vt={kernelName:s.Hc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(Ve.a)(n,Object(h.a)(0)),r=Object(h.a)(Ut.b),a=Object(h.a)(Ut.a),s=Object(i.a)(e,a),c=Object(i.a)(Object(i.a)(e,r),Object(ke.a)(Object(o.a)(n,"float32")));return Object(Z.a)(t,s,c)}}}},Gt={kernelName:s.Ic,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(i.a)(e,Object(i.a)(n,Object(m.a)(Object(h.a)(1),n)))}}},Ht={kernelName:s.Jc,gradFunc:e=>({x:()=>Object(k.a)(e)})};var qt=n(116);const Kt={kernelName:s.Kc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(i.a)(Object(qt.a)(Object(o.a)(n,"float32")),e)}}};var Xt=n(151);const Yt={kernelName:s.Lc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(i.a)(Object(Xt.a)(Object(o.a)(n,"float32")),e)}}};var Qt=n(55),Zt=n(106);const Jt={kernelName:s.Mc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,o=r.shape,[i,c]=Object(Zt.parseSliceParams)(r,a,s),u=[];for(let l=0;l<e.rank;l++)u.push([i[l],o[l]-i[l]-c[l]]);return{x:()=>Object(Qt.a)(e,u)}}},$t={kernelName:s.Nc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=Object(i.a)(e,r);return{logits:()=>Object(m.a)(s,Object(i.a)(Object(x.a)(s,[a],!0),r))}}};var en=n(65);const tn={kernelName:s.Oc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(i.a)(e,Object(en.a)(n))}}};var nn=n(89);const rn={kernelName:s.Pc,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Object(nn.a)(e,r,a)}}};var an=n(30);const sn={kernelName:s.Vc,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Object(an.a)(e,r)}}},on={kernelName:s.Wc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(l.a)(e,Object(i.a)(Object(p.a)(Object(o.a)(n,"float32")),2))}}},cn={kernelName:s.Xc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(i.a)(e,Object(i.a)(Object(o.a)(n,"float32"),2))}}},un={kernelName:s.Yc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(h.a)(2);return{a:()=>Object(i.a)(e,Object(i.a)(a,Object(m.a)(n,r))),b:()=>Object(i.a)(e,Object(i.a)(a,Object(m.a)(r,n)))}}},ln={kernelName:s.ad,gradFunc:e=>({x:()=>Object(k.a)(e)})},dn={kernelName:s.fd,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=y.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=y.getReductionAxes(n.shape,a);return r.length>0&&(t=Object(x.a)(t,r)),Object(v.a)(t,n.shape)},b:()=>{let t=e;const n=y.getReductionAxes(r.shape,a);return n.length>0&&(t=Object(x.a)(t,n)),Object(v.a)(Object(d.a)(t),r.shape)}}}},hn={kernelName:s.gd,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;Object(_.I)(s,r.shape).forEach(e=>{a[e]=1});const o=Object(v.a)(e,a),c=Object(i.a)(o,Object(st.a)(r.shape,"float32"));return{x:()=>c}}},pn={kernelName:s.hd,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(l.a)(e,Object(f.a)(Object(qt.a)(n)))}}},fn={kernelName:s.id,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(i.a)(Object(m.a)(Object(h.a)(1),Object(f.a)(n)),e)}}},mn={kernelName:s.kd,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=Object(k.a)(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=Object(T.a)(t,Object(ut.a)(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=Object(T.a)(t,Object(ut.a)(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let o=0;o<a[2];++o)t=Object(T.a)(t,Object(ut.a)(e,[n*r.shape[0],s*r.shape[1],o*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(r.rank," tensors yet."));for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let o=0;o<a[2];++o)for(let i=0;i<a[3];++i)t=Object(T.a)(t,Object(ut.a)(e,[n*r.shape[0],s*r.shape[1],o*r.shape[2],i*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},gn={kernelName:s.nd,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=fe.h(a);return{x:()=>Object(ge.a)(e,s)}}},bn={kernelName:s.pd,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>Object(Fe.a)(e,a)}}};var yn=n(51),vn=n(93),xn=n(87);const wn={kernelName:s.qd,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Object(xn.a)(t,Object(k.a)(t)),r=Object(vn.a)(e,n);let a=Object(X.a)(t,Object(h.a)(0,"int32"));const s=r.rank-a.rank;for(let i=0;i<s;++i)a=Object(yn.a)(a,i+1);a=Object(Q.a)(a,Object(st.a)(r.shape,"bool"));const o=Object(k.a)(r);return Object(Z.a)(a,r,o)}(e,n)}}};const On={kernelName:s.rd,gradFunc:e=>({x:()=>Object(k.a)(e)})};var kn=n(56);const Sn=[u,g,b,w,O,S,I,N,j,E,C,A,z,B,U,G,H,q,K,J,$,te,oe,ae,ue,de,pe,be,xe,we,Et,Oe,Se,Ie,Ne,Te,Ee,je,Re,Me,ze,Pe,Be,We,Ue,Ge,He,qe,Ke,Ye,Je,Je,et,nt,at,ot,it,ct,lt,ht,pt,ft,gt,bt,vt,xt,xt,kt,St,jt,Ct,At,Rt,Ft,_t,Mt,Lt,zt,Pt,Wt,Vt,Gt,Ht,Kt,Yt,Jt,$t,tn,rn,rn,sn,sn,on,un,cn,ln,dn,hn,pn,fn,mn,gn,bn,wn,On];for(const cN of Sn)Object(kn.d)(cN);var In=n(39),Nn=n(6);Object(Nn.d)().prototype.abs=function(){return this.throwIfDisposed(),Object(In.a)(this)};var Tn=n(189);Object(Nn.d)().prototype.acos=function(){return this.throwIfDisposed(),Object(Tn.a)(this)};var jn=n(190);Object(Nn.d)().prototype.acosh=function(){return this.throwIfDisposed(),Object(jn.a)(this)},Object(Nn.d)().prototype.add=function(e){return this.throwIfDisposed(),Object(T.a)(this,e)};var En=n(144);Object(Nn.d)().prototype.all=function(e,t){return this.throwIfDisposed(),Object(En.a)(this,e,t)};var Cn=n(145);Object(Nn.d)().prototype.any=function(e,t){return this.throwIfDisposed(),Object(Cn.a)(this,e,t)};var An=n(146);Object(Nn.d)().prototype.argMax=function(e){return this.throwIfDisposed(),Object(An.a)(this,e)};var Rn=n(147);Object(Nn.d)().prototype.argMin=function(e){return this.throwIfDisposed(),Object(Rn.a)(this,e)},Object(Nn.d)().prototype.asScalar=function(){return this.throwIfDisposed(),Object(_.c)(1===this.size,()=>"The array must have only 1 element."),Object(v.a)(this,[])},Object(Nn.d)().prototype.asType=function(e){return this.throwIfDisposed(),Object(o.a)(this,e)},Object(Nn.d)().prototype.as1D=function(){return this.throwIfDisposed(),Object(v.a)(this,[this.size])},Object(Nn.d)().prototype.as2D=function(e,t){return this.throwIfDisposed(),Object(v.a)(this,[e,t])},Object(Nn.d)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Object(v.a)(this,[e,t,n])},Object(Nn.d)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Object(v.a)(this,[e,t,n,r])},Object(Nn.d)().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Object(v.a)(this,[e,t,n,r,a])};var Fn=n(191);Object(Nn.d)().prototype.asin=function(){return this.throwIfDisposed(),Object(Fn.a)(this)};var _n=n(192);Object(Nn.d)().prototype.asinh=function(){return this.throwIfDisposed(),Object(_n.a)(this)};var Mn=n(193);Object(Nn.d)().prototype.atan=function(){return this.throwIfDisposed(),Object(Mn.a)(this)};var Dn=n(148);Object(Nn.d)().prototype.atan2=function(e){return this.throwIfDisposed(),Object(Dn.a)(this,e)};var Ln=n(194);Object(Nn.d)().prototype.atanh=function(){return this.throwIfDisposed(),Object(Ln.a)(this)};var zn=n(115);Object(Nn.d)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Object(zn.a)(this,e,t,n,r)},Object(Nn.d)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Object(nn.a)(this,e,t)};var Pn=n(77);Object(Nn.d)().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),Object(Pn.a)(this,e,t,n,r,a)};var Bn=n(98);Object(Nn.d)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Object(Bn.a)(this,e)},Object(Nn.d)().prototype.cast=function(e){return this.throwIfDisposed(),Object(o.a)(this,e)};var Wn=n(195);Object(Nn.d)().prototype.ceil=function(){return this.throwIfDisposed(),Object(Wn.a)(this)};var Un=n(196);Object(Nn.d)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Object(Un.a)(this,e,t)},Object(Nn.d)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Nn.a&&(e=[e]),Object(an.a)([this,...e],t)};var Vn=n(149);Object(Nn.d)().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(Vn.a)(this,e,t,n,r,a,s)};var Gn=n(150);Object(Nn.d)().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Object(Gn.a)(this,e,t,n,r,a)},Object(Nn.d)().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(se.a)(this,e,t,n,r,a,s)},Object(Nn.d)().prototype.cos=function(){return this.throwIfDisposed(),Object(qt.a)(this)},Object(Nn.d)().prototype.cosh=function(){return this.throwIfDisposed(),Object(Xt.a)(this)},Object(Nn.d)().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Object(Nt.a)(this,e,t,n)},Object(Nn.d)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Object(me.a)(this,e,t,n)};var Hn=n(152);Object(Nn.d)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Object(Hn.a)(this,e,t)};var qn=n(90);Object(Nn.d)().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(qn.a)(this,e,t,n,r,a,s)};var Kn=n(153);Object(Nn.d)().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Object(Kn.a)(this,e,t,n,r,a)};var Xn=n(154);Object(Nn.d)().prototype.divNoNan=function(e){return this.throwIfDisposed(),Object(Xn.a)(this,e)},Object(Nn.d)().prototype.div=function(e){return this.throwIfDisposed(),Object(l.a)(this,e)};var Yn=n(155);Object(Nn.d)().prototype.dot=function(e){return this.throwIfDisposed(),Object(Yn.a)(this,e)};var Qn=n(118);Object(Nn.d)().prototype.elu=function(){return this.throwIfDisposed(),Object(Qn.a)(this)},Object(Nn.d)().prototype.equal=function(e){return this.throwIfDisposed(),Object(Qe.a)(this,e)};var Zn=n(197);Object(Nn.d)().prototype.erf=function(){return this.throwIfDisposed(),Object(Zn.a)(this)};var Jn=n(156);Object(Nn.d)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Object(Jn.a)(this,e,t)},Object(Nn.d)().prototype.exp=function(){return this.throwIfDisposed(),Object(ke.a)(this)},Object(Nn.d)().prototype.expandDims=function(e){return this.throwIfDisposed(),Object(yn.a)(this,e)};var $n=n(198);Object(Nn.d)().prototype.expm1=function(){return this.throwIfDisposed(),Object($n.a)(this)};var er=n(127);Object(Nn.d)().prototype.fft=function(){return this.throwIfDisposed(),Object(er.a)(this)},Object(Nn.d)().prototype.flatten=function(){return this.throwIfDisposed(),Object(v.a)(this,[this.size])},Object(Nn.d)().prototype.floor=function(){return this.throwIfDisposed(),Object(dt.a)(this)};var tr=n(109);Object(Nn.d)().prototype.floorDiv=function(e){return this.throwIfDisposed(),Object(tr.a)(this,e)},Object(Nn.d)().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Object(vn.a)(this,e,t,n)},Object(Nn.d)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Object(X.a)(this,e)},Object(Nn.d)().prototype.greater=function(e){return this.throwIfDisposed(),Object(Ve.a)(this,e)};var nr=n(102);Object(Nn.d)().prototype.ifft=function(){return this.throwIfDisposed(),Object(nr.a)(this)};var rr=n(172);Object(Nn.d)().prototype.irfft=function(){return this.throwIfDisposed(),Object(rr.a)(this)};var ar=n(199);Object(Nn.d)().prototype.isFinite=function(){return this.throwIfDisposed(),Object(ar.a)(this)};var sr=n(200);Object(Nn.d)().prototype.isInf=function(){return this.throwIfDisposed(),Object(sr.a)(this)};var or=n(201);Object(Nn.d)().prototype.isNaN=function(){return this.throwIfDisposed(),Object(or.a)(this)};var ir=n(120);Object(Nn.d)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Object(ir.a)(this,e)},Object(Nn.d)().prototype.lessEqual=function(e){return this.throwIfDisposed(),Object(Y.a)(this,e)},Object(Nn.d)().prototype.less=function(e){return this.throwIfDisposed(),Object($e.a)(this,e)};var cr=n(157);Object(Nn.d)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Object(cr.a)(this,e,t,n,r)};var ur=n(202);Object(Nn.d)().prototype.logSigmoid=function(){return this.throwIfDisposed(),Object(ur.a)(this)};var lr=n(203);Object(Nn.d)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Object(lr.a)(this,e)};var dr=n(121);Object(Nn.d)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Object(dr.a)(this,e,t)},Object(Nn.d)().prototype.log=function(){return this.throwIfDisposed(),Object(wt.a)(this)};var hr=n(158);Object(Nn.d)().prototype.log1p=function(){return this.throwIfDisposed(),Object(hr.a)(this)},Object(Nn.d)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Object(Q.a)(this,e)},Object(Nn.d)().prototype.logicalNot=function(){return this.throwIfDisposed(),Object(Bt.a)(this)};var pr=n(122);Object(Nn.d)().prototype.logicalOr=function(e){return this.throwIfDisposed(),Object(pr.a)(this,e)};var fr=n(160);Object(Nn.d)().prototype.logicalXor=function(e){return this.throwIfDisposed(),Object(fr.a)(this,e)},Object(Nn.d)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Object(W.a)(this,e,t,n)};var mr=n(123);Object(Nn.d)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Object(mr.a)(this,e,t,n,r)};var gr=n(66);Object(Nn.d)().prototype.max=function(e,t){return this.throwIfDisposed(),Object(gr.a)(this,e,t)},Object(Nn.d)().prototype.maximum=function(e){return this.throwIfDisposed(),Object(xn.a)(this,e)};var br=n(81);Object(Nn.d)().prototype.mean=function(e,t){return this.throwIfDisposed(),Object(br.a)(this,e,t)};var yr=n(101);Object(Nn.d)().prototype.min=function(e,t){return this.throwIfDisposed(),Object(yr.a)(this,e,t)};var vr=n(82);Object(Nn.d)().prototype.minimum=function(e){return this.throwIfDisposed(),Object(vr.a)(this,e)};var xr=n(161);Object(Nn.d)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Object(xr.a)(this,e,t)};var wr=n(162);Object(Nn.d)().prototype.mod=function(e){return this.throwIfDisposed(),Object(wr.a)(this,e)},Object(Nn.d)().prototype.mul=function(e){return this.throwIfDisposed(),Object(i.a)(this,e)},Object(Nn.d)().prototype.neg=function(){return this.throwIfDisposed(),Object(d.a)(this)};var Or=n(92);Object(Nn.d)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Object(Or.a)(this,e,t,n)};var kr=n(124);Object(Nn.d)().prototype.notEqual=function(e){return this.throwIfDisposed(),Object(kr.a)(this,e)};var Sr=n(163);Object(Nn.d)().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),Object(Sr.a)(this,e,t,n)};var Ir=n(204);Object(Nn.d)().prototype.onesLike=function(){return this.throwIfDisposed(),Object(Ir.a)(this)},Object(Nn.d)().prototype.pad=function(e,t){return this.throwIfDisposed(),Object(Qt.a)(this,e,t)};var Nr=n(164);Object(Nn.d)().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(Nr.a)(this,e,t,n,r,a,s)},Object(Nn.d)().prototype.pow=function(e){return this.throwIfDisposed(),Object(Ot.a)(this,e)};var Tr=n(125);Object(Nn.d)().prototype.prelu=function(e){return this.throwIfDisposed(),Object(Tr.a)(this,e)};var jr=n(165);Object(Nn.d)().prototype.prod=function(e,t){return this.throwIfDisposed(),Object(jr.a)(this,e,t)};var Er=n(205);Object(Nn.d)().prototype.reciprocal=function(){return this.throwIfDisposed(),Object(Er.a)(this)};var Cr=n(74);Object(Nn.d)().prototype.relu=function(){return this.throwIfDisposed(),Object(Cr.a)(this)};var Ar=n(126);Object(Nn.d)().prototype.relu6=function(){return this.throwIfDisposed(),Object(Ar.a)(this)},Object(Nn.d)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Object(v.a)(this,e.shape)},Object(Nn.d)().prototype.reshape=function(e){return this.throwIfDisposed(),Object(v.a)(this,e)};var Rr=n(182);Object(Nn.d)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Object(Rr.a)(this,e,t,n)};var Fr=n(181);Object(Nn.d)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Object(Fr.a)(this,e,t,n)},Object(Nn.d)().prototype.reverse=function(e){return this.throwIfDisposed(),Object(Dt.a)(this,e)};var _r=n(128);Object(Nn.d)().prototype.rfft=function(){return this.throwIfDisposed(),Object(_r.a)(this)};var Mr=n(166);Object(Nn.d)().prototype.round=function(){return this.throwIfDisposed(),Object(Mr.a)(this)},Object(Nn.d)().prototype.rsqrt=function(){return this.throwIfDisposed(),Object(Ce.a)(this)};var Dr=n(168);Object(Nn.d)().prototype.selu=function(){return this.throwIfDisposed(),Object(Dr.a)(this)};var Lr=n(169);Object(Nn.d)().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(Lr.a)(this,e,t,n,r,a,s)},Object(Nn.d)().prototype.sigmoid=function(){return this.throwIfDisposed(),Object(en.a)(this)};var zr=n(206);Object(Nn.d)().prototype.sign=function(){return this.throwIfDisposed(),Object(zr.a)(this)},Object(Nn.d)().prototype.sin=function(){return this.throwIfDisposed(),Object(le.a)(this)},Object(Nn.d)().prototype.sinh=function(){return this.throwIfDisposed(),Object(he.a)(this)},Object(Nn.d)().prototype.slice=function(e,t){return this.throwIfDisposed(),Object(ut.a)(this,e,t)};var Pr=n(207);Object(Nn.d)().prototype.softmax=function(e){return this.throwIfDisposed(),Object(Pr.a)(this,e)};var Br=n(159);Object(Nn.d)().prototype.softplus=function(){return this.throwIfDisposed(),Object(Br.a)(this)},Object(Nn.d)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Object(V.a)(this,e,t)},Object(Nn.d)().prototype.split=function(e,t){return this.throwIfDisposed(),Object(ee.a)(this,e,t)},Object(Nn.d)().prototype.sqrt=function(){return this.throwIfDisposed(),Object(p.a)(this)},Object(Nn.d)().prototype.square=function(){return this.throwIfDisposed(),Object(f.a)(this)};var Wr=n(129);Object(Nn.d)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Object(Wr.a)(this,e)};var Ur=n(97);Object(Nn.d)().prototype.squeeze=function(e){return this.throwIfDisposed(),Object(Ur.a)(this,e)},Object(Nn.d)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Nn.a?[this,e]:[this,...e];return Object(Fe.a)(n,t)},Object(Nn.d)().prototype.step=function(e){return this.throwIfDisposed(),Object(c.a)(this,e)};var Vr=n(208);Object(Nn.d)().prototype.stridedSlice=function(e,t,n,r,a,s,o,i){return this.throwIfDisposed(),Object(Vr.a)(this,e,t,n,r,a,s,o,i)},Object(Nn.d)().prototype.sub=function(e){return this.throwIfDisposed(),Object(m.a)(this,e)},Object(Nn.d)().prototype.sum=function(e,t){return this.throwIfDisposed(),Object(x.a)(this,e,t)};var Gr=n(209);Object(Nn.d)().prototype.tan=function(){return this.throwIfDisposed(),Object(Gr.a)(this)};var Hr=n(137);Object(Nn.d)().prototype.tanh=function(){return this.throwIfDisposed(),Object(Hr.a)(this)},Object(Nn.d)().prototype.tile=function(e){return this.throwIfDisposed(),Object(Ae.a)(this,e)},Object(Nn.d)().prototype.toBool=function(){return this.throwIfDisposed(),Object(o.a)(this,"bool")},Object(Nn.d)().prototype.toFloat=function(){return this.throwIfDisposed(),Object(o.a)(this,"float32")},Object(Nn.d)().prototype.toInt=function(){return this.throwIfDisposed(),Object(o.a)(this,"int32")};var qr=n(174);Object(Nn.d)().prototype.topk=function(e,t){return this.throwIfDisposed(),Object(qr.a)(this,e,t)},Object(Nn.d)().prototype.transpose=function(e){return this.throwIfDisposed(),Object(ge.a)(this,e)};var Kr=n(175);Object(Nn.d)().prototype.unique=function(e){return this.throwIfDisposed(),Object(Kr.a)(this,e)},Object(Nn.d)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Object(_e.a)(this,e,t)},Object(Nn.d)().prototype.unstack=function(e){return this.throwIfDisposed(),Object(yt.a)(this,e)},Object(Nn.d)().prototype.where=function(e,t){return this.throwIfDisposed(),Object(Z.a)(e,this,t)},Object(Nn.d)().prototype.zerosLike=function(){return this.throwIfDisposed(),Object(k.a)(this)};class Xr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Xr.prototype)}}class Yr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Yr.prototype)}}class Qr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qr.prototype)}}class Zr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Zr.prototype)}}class Jr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Jr.prototype)}}Error;class $r{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error("The maxEntries of LRU caches must be at least 0, but got ".concat(e,"."));if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function ea(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function ta(e,t){if(!e)throw new Jr(t)}function na(e,t){let n=0;for(const r of e)r===t&&n++;return n}function ra(e){return 1===e.length?e[0]:e}function aa(e){return Array.isArray(e)?e:[e]}function sa(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function oa(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let ia={};function ca(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function ua(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach(e=>ua(e));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?ua(t):e[n]=t.value)}}}function la(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in ia)s=ia[a];else if(s=t[a],null==s)throw new Qr("Unknown ".concat(r,": ").concat(e,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(r," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(r," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return s}{const s=e;if(null==s.className||null==s.config)throw new Qr("".concat(r,": Improper config format: ")+"".concat(JSON.stringify(s),".\n")+"'className' and 'config' must set.");const o=s.className;let i,c;if(o in n?[i,c]=n[o]:o in ia?[i,c]=ia.className:o in t&&([i,c]=t[o]),null==i)throw new Qr("Unknown ".concat(r,": ").concat(o,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(r," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(r," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const e={};for(const n of Object.keys(ia))e[n]=ia[n];for(const a of Object.keys(n))e[a]=n[a];s.config.customObjects=e;const t=Object.assign({},ia);for(const a of Object.keys(n))ia[a]=n[a];ua(s.config);const r=c(i,s.config,n,a);return ia=Object.assign({},t),r}{const e=Object.assign({},ia);for(const r of Object.keys(n))ia[r]=n[r];const t=new i(s.config);return ia=Object.assign({},e),t}}}function da(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function ha(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function pa(e){if(null==e)throw new Qr("Invalid value in obj: ".concat(JSON.stringify(e)));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function fa(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Qr("".concat(n," is not a valid ").concat(t,".  Valid values are ").concat(e," or null/undefined."))}function ma(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return ta(n>=0),ta(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(e=>typeof e===t)}function ga(e,t){Array.isArray(e)?(a.Mf.assert(e.length>0,()=>"".concat(t," is unexpectedly an empty array.")),e.forEach((e,n)=>ga(e,"element ".concat(n+1," of ").concat(t)))):a.Mf.assert(Number.isInteger(e)&&e>0,()=>"Expected ".concat(t," to be a positive integer, but got ")+"".concat(function e(t){return null===t?"null":Array.isArray(t)?"["+t.map(t=>e(t)).join(",")+"]":"string"===typeof t?'"'.concat(t,'"'):"".concat(t)}(e),"."))}function ba(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let ya=0;function va(){return ya++}const xa={};function wa(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in xa||(xa[e]=0),xa[e]+=1,e+xa[e].toString()}const Oa=["channelsFirst","channelsLast"],ka=["nearest","bilinear"],Sa=["valid","same","causal"],Ia=["max","avg"],Na=["sum","mul","concat","ave"],Ta=new Map;function ja(e){fa(Oa,"DataFormat",e)}function Ea(e){fa(Sa,"PaddingMode",e)}function Ca(e){fa(Ia,"PoolMode",e)}const Aa=[];function Ra(e,t){Aa.push(e);try{const e=t();return Aa.pop(),e}catch(n){throw Aa.pop(),n}}function Fa(e){if(!Da(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Aa.length?"":Aa.join("/")+"/")+e}function _a(e){if(!Da(e))throw new Error("Not a valid tensor name: '"+e+"'");Ta.has(e)||Ta.set(e,0);const t=Ta.get(e);if(Ta.set(e,Ta.get(e)+1),t>0){const n="".concat(e,"_").concat(t);return Ta.set(n,1),n}return e}const Ma=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Da(e){return!!e.match(Ma)}function La(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function za(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function Pa(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Ba(e,t){if(t<e)throw new Qr("end (".concat(t,") < begin (").concat(e,") is forbidden."));const n=[];for(let r=e;r<t;++r)n.push(r);return n}let Wa;function Ua(){return null==Wa&&(Wa=Object(a.Dd)().epsilon()),Wa}function Va(e,t){return a.Md(e,t)}function Ga(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),a.df(e,n)}function Ha(e){const t=[La(e.shape)];return a.df(e,t)}function qa(e,t,n){return Object(a.Ff)(()=>{switch(e.rank){case 1:return a.mf(e,t,n);case 2:return a.nf(e,[t,0],[n,e.shape[1]]);case 3:return a.of(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return a.pf(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return a.lf(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return a.lf(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Qr("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(e.rank))}})}function Ka(e,t,n){return Object(a.Ff)(()=>{switch(e.rank){case 1:return a.mf(e,t,n);case 2:return a.nf(e,[0,t],[e.shape[0],n]);case 3:return a.of(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return a.pf(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Qr("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}})}function Xa(e,t,n,r){return Object(a.Ff)(()=>{switch(e.rank){case 1:return a.mf(e,t,n);case 2:switch(r){case 1:return qa(e,t,n);case 2:return Ka(e,t,n);default:throw new Qr("The axis is not within the rank of the tensor "+"".concat(r))}case 3:switch(r){case 1:return qa(e,t,n);case 2:return a.of(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Ka(e,t,n);default:throw new Qr("The axis is not within the rank of the tensor "+"".concat(r))}case 4:switch(r){case 1:return qa(e,t,n);case 2:return a.pf(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return a.pf(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Ka(e,t,n);default:throw new Qr("The axis is not within the rank of the tensor "+"".concat(r))}default:throw new Qr("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}})}function Ya(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),a.Pd(e,n)}function Qa(e,t){switch(e.rank){case 1:return a.Qd([e,t]);case 2:return a.Rd([e,t],0);case 3:return a.Sd([e,t],0);case 4:return a.Td([e,t],0);default:throw new Qr("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(e.rank))}}function Za(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Qr("The length of input n (".concat(t.length,") does not match ")+"the number of dimensions in input x (".concat(e.rank,")"));return a.Gf(e,t)}function Ja(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;return a.Xe(e,t,n,r,s)}function $a(e,t,n,r){if(e.rank<2||t.rank<2)throw new Zr("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(e.shape," and y shape = ").concat(t.shape));if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Zr("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(e.shape," and ")+" y shape = ".concat(t.shape))}if(2===e.rank&&2===t.rank){const s=!1,o=!1;return a.oe.matMul({a:e,b:t,transposeA:s,transposeB:o,bias:r?ns(e.rank,r,"channelsLast"):null,activation:n})}{const s=e.shape.slice(),o=s.pop();e=a.df(e,[-1,o]);const i=t.shape.slice(),c=i.pop(),u=i.pop(),l=[...i,c],d=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=a.df(a.If(t,d),[u,-1]);const h=[...s,...l],p=!1,f=!1;return a.df(a.oe.matMul({a:e,b:t,transposeA:p,transposeB:f,bias:r?ns(e.rank,r,"channelsLast"):null,activation:n}),h)}}function es(e,t,n){return Object(a.Ff)(()=>(t=Array.isArray(t)?Object(a.Cf)(t,"int32"):a.Md(t,"int32"),a.pe(e,t,n)))}function ts(e){return a.Ne(e,e)}function ns(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Qr("Unexpected bias dimensions: ".concat(t.rank)+"; expected it to be 1 or ".concat(e));if(5===e){if("channelsFirst"===n)return 1===r.length?a.df(t,[1,r[0],1,1,1]):a.df(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?a.df(t,[1,1,1,1,r[0]]):a.df(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?a.df(t,[1,r[0],1,1]):a.df(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?a.df(t,[1,1,1,r[0]]):a.df(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?a.df(t,[1,r[0],1]):a.df(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?a.df(t,[1,1,r[0]]):a.df(t,[1].concat(r))}else if(e<3)return t;throw new Qr("Unsupported input rank by biasAdd: ".concat(t.rank))}function rs(e,t,n){return Object(a.Ff)(()=>(null==n&&(n="channelsLast"),ja(n),a.xd(e,ns(e.rank,t,n))))}function as(e,t,n,r){return Object(a.Ff)(()=>a.ee(e,t,n,r))}function ss(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return n?e():t()}const os=["fanIn","fanOut","fanAvg"],is=["normal","uniform","truncatedNormal"];class cs extends a.if.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class us extends cs{apply(e,t){return Object(a.Rf)(e,t)}}us.className="Zeros",a.if.registerClass(us);class ls extends cs{apply(e,t){return Object(a.Se)(e,t)}}ls.className="Ones",a.if.registerClass(ls);class ds extends cs{constructor(e){if(super(),"object"!==typeof e)throw new Qr("Expected argument of type ConstantConfig but got ".concat(e));if(void 0===e.value)throw new Qr("config must have value set but got ".concat(e));this.value=e.value}apply(e,t){return Object(a.Ff)(()=>Object(a.Ne)(Object(a.ff)(this.value),Object(a.Se)(e,t)))}getConfig(){return{value:this.value}}}ds.className="Constant",a.if.registerClass(ds);class hs extends cs{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Object(a.Ye)(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}hs.className="RandomUniform",a.if.registerClass(hs);class ps extends cs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Zr("randomNormal does not support dType ".concat(t,"."));return Ja(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ps.className="RandomNormal",a.if.registerClass(ps);class fs extends cs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Zr("truncatedNormal does not support dType ".concat(t,"."));return Object(a.Jf)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}fs.className="TruncatedNormal",a.if.registerClass(fs);class ms extends cs{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Object(a.Ff)(()=>{if(2!==e.length||e[0]!==e[1])throw new Qr("Identity matrix initializer can only be used for 2D square matrices.");return Object(a.Ne)(this.gain,Object(a.le)(e[0]))})}getConfig(){return{gain:this.gain}}}ms.className="Identity",a.if.registerClass(ms);class gs extends cs{constructor(e){if(super(),e.scale<0)throw new Qr("scale must be a positive float. Got: ".concat(e.scale));var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,fa(os,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){fa(is,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(ja(r),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===r){const r=La(e,2);t=e[1]*r,n=e[0]*r}else if("channelsLast"===r){const r=La(e,0,e.length-2);t=e[e.length-2]*r,n=e[e.length-1]*r}}else{const r=La(e);t=Math.sqrt(r),n=Math.sqrt(r)}return[t,n]}(e),r=n[0],s=n[1];let o=this.scale;if("fanIn"===this.mode?o/=Math.max(1,r):"fanOut"===this.mode?o/=Math.max(1,s):o/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(o);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Zr("".concat(this.getClassName()," does not support dType ").concat(t,"."));return Object(a.Jf)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*o);return Object(a.Ye)(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}gs.className="VarianceScaling",a.if.registerClass(gs);class bs extends gs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gs.className}}bs.className="GlorotUniform",a.if.registerClass(bs);class ys extends gs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gs.className}}ys.className="GlorotNormal",a.if.registerClass(ys);class vs extends gs{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gs.className}}vs.className="HeNormal",a.if.registerClass(vs);class xs extends gs{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gs.className}}xs.className="HeUniform",a.if.registerClass(xs);class ws extends gs{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gs.className}}ws.className="LeCunNormal",a.if.registerClass(ws);class Os extends gs{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gs.className}}Os.className="LeCunUniform",a.if.registerClass(Os);class ks extends cs{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return Object(a.Ff)(()=>{if(e.length<2)throw new Zr("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError("Unsupported data type ".concat(t,"."));t=t;const n=a.Mf.sizeFromShape(e.slice(0,-1)),r=e[e.length-1],s=n*r;s>this.ELEMENTS_WARN_SLOW&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than ".concat(this.ELEMENTS_WARN_SLOW," (").concat(s,") elements: ")+"Slowness may result.");const o=Ja([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),i=a.xe.qr(o,!1);let c=i[0];const u=i[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return c=Object(a.Ne)(c,u.sign()),n<r&&(c=c.transpose()),Object(a.Ne)(Object(a.ff)(this.gain),c.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}ks.className="Orthogonal",a.if.registerClass(ks);const Ss={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Is(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return la(e,a.if.SerializationMap.getMap().classNameMap,t,"initializer")}function Ns(e){return ca(e)}function Ts(e){if("string"===typeof e){const t=e in Ss?Ss[e]:e;if("GlorotNormal"===t)return new ys;if("GlorotUniform"===t)return new bs;if("HeNormal"===t)return new vs;if("HeUniform"===t)return new xs;if("LeCunNormal"===t)return new ws;if("LeCunUniform"===t)return new Os;{const e={};return e.className=t,e.config={},Is(e)}}return e instanceof cs?e:Is(e)}function js(e){return Array.isArray(e)&&Array.isArray(e[0])}function Es(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Cs(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Qr("Expected Tensor length to be 1; got ".concat(e.length));t=e[0]}else t=e;return t}function As(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new Qr("Expected exactly 1 Shape; got ".concat(e.length))}return e}function Rs(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce((e,t)=>e*t);return t}class Fs{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Variable",r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=va(),n=null==n?"Variable":n,this.originalName=Fa(n),this.name=_a(this.originalName),this.trainable_=r,this.constraint=s,this.val=a.Nf(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function _s(e){return e.map(e=>e.read())}function Ms(e){e.forEach(e=>{e[0].write(e[1])})}class Ds{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Ls{constructor(e,t,n,r,a,s,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=o,this.id=va(),null!=s&&(this.originalName=Fa(s),this.name=_a(this.originalName)),this.rank=t.length}}let zs=0;class Ps{constructor(e,t){this.callArgs=t,this.id=zs++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Bs=0;class Ws extends a.if.Serializable{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Bs++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=sa(e)+"_"+wa(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Yr("The layer has never been called "+"and thus has no defined ".concat(t,"."));if(this.inboundNodes.length<=e)throw new Qr("Asked to get ".concat(t," at node ").concat(e,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[e]}getInputAt(e){return ra(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ra(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Xr("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new Xr("Layer ".concat(this.name)+" is not connected, no input to return.");return ra(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Xr("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new Xr("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return ra(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=aa(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=aa(this.inputSpec);if(t.length!==n.length)throw new Qr("Layer ".concat(this.name," expects ").concat(n.length," inputs, ")+"but it received ".concat(t.length," input tensors. ")+"Input received: ".concat(e));for(let r=0;r<t.length;r++){const e=t[r],a=n[r];if(null==a)continue;const s=e.rank;if(null!=a.ndim&&s!==a.ndim)throw new Qr("Input ".concat(r," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(a.ndim,", found ndim=").concat(s));if(null!=a.maxNDim&&s>a.maxNDim)throw new Qr("Input ".concat(r," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(a.maxNDim,", found ndim=").concat(s));if(null!=a.minNDim&&s<a.minNDim)throw new Qr("Input ".concat(r," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(a.minNDim,", found ndim=").concat(s,"."));if(null!=a.dtype&&e.dtype!==a.dtype)throw new Qr("Input ".concat(r," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(a.dtype,", found dtype=").concat(e.dtype,"."));if(a.axes){const t=e.shape;for(const e in a.axes){const n=Number(e),s=a.axes[e],o=n>=0?t[n]:t[t.length+n];if(null!=s&&-1===[s,null].indexOf(o))throw new Qr("Input ".concat(r," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(n," of input shape to ")+"have value ".concat(s," but got shape ").concat(t,"."))}}if(null!=a.shape)for(let t=0;t<a.shape.length;++t){const n=a.shape[t],s=e.shape[t];if(null!=n&&null!=s&&n!==s)throw new Qr("Input ".concat(r," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(a.shape,", ")+"found shape=".concat(e.shape,"."))}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=aa(e),r=function(e){let t=!0;for(const n of aa(e))if(!(n instanceof Ls)){t=!1;break}return t}(e),a=function(e){let t=!0;for(const n of aa(e))if(n instanceof Ls){t=!1;break}return t}(e);if(r===a)throw new Qr("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ra(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of aa(e))t.push(n.shape);this.build(ra(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const a=aa(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=ra(s),null!=this.activityRegularizer)throw new Zr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=aa(e);const t=[];for(const n of e)t.push(n.shape);return ra(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new Ls(s,n,this,aa(e),t,this.name,r)):new Ls(s,r,this,aa(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Zr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(e),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let t=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}),t&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(e),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Xr("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Xr("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new Yr("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return Rs(this.weights)}build(e){this.built=!0}getWeights(){return _s(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){Object(a.Ff)(()=>{const t=this.weights;if(t.length!==e.length)throw new Qr('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(e.length,", ")+"but the layer was expecting ".concat(t.length," weights. ")+"Provided weights: ".concat(e,"..."));if(0===t.length)return;const n=[],r=_s(t);for(let s=0;s<r.length;++s){const o=r[s],i=t[s],c=e[s];if(!a.Mf.arraysEqual(o.shape,c.shape))throw new Qr("Layer weight shape ".concat(o.shape," ")+"not compatible with provided weight shape ".concat(c.shape));n.push([i,c])}Ms(n)})}addWeight(e,t,n,r,a,s,o,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Qr("Duplicate weight name ".concat(e," for layer ").concat(this.name));this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=i?i():Ts("zeros"));const c=r.apply(t,n),u=new Fs(c,n,e,s,o);return c.dispose(),null!=a&&this.addLoss(()=>a.apply(u.read())),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=aa(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");t.forEach(e=>{if(null!=e)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")})}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n),a=aa(t),s=aa(r);if(a.length!==s.length)throw new Error("".concat(this.name," outputs ").concat(a.length," tensors ")+"but ".concat(a.length," masks for those tensors"));for(let o=0;o<a.length;o++)a[o].kerasMask=s[o]}addInboundNode(e,t,n,r,a,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=aa(e);t=aa(t),n=aa(n),r=aa(r),a=Es(a),s=Es(s);const c=[],u=[],l=[];for(const d of i)c.push(d.sourceLayer),u.push(d.nodeIndex),l.push(d.tensorIndex);new Ps({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:l,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},o);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}class Us extends Ws{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:wa("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Qr("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Qr("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Qr("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Ls(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Ps({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Qr("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function Vs(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Qr("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new Us({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}Us.className="InputLayer",a.if.registerClass(Us);class Gs{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Gs)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Qr("Duplicate key: name=".concat(e.name,", id=").concat(e.id));return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Object(a.Md)(t,e.dtype)}catch(n){throw new Qr("The dtype of the feed (".concat(t.dtype,") can not be cast to the dtype ")+"of the key '".concat(e.name,"' (").concat(e.dtype,")."))}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Ls){if(null==this.id2Value[e.id])throw new Qr("Nonexistent key: ".concat(e.name));return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Qr("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Value[t]}}getMask(e){if(e instanceof Ls){if(null==this.id2Value[e.id])throw new Qr("Nonexistent key: ".concat(e.name));return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Qr("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Object(a.ce)(this.id2Mask)}}const Hs=new $r,qs=new $r;function Ks(e,t,n,r){const s=null!=n&&n.training,o=Array.isArray(e),i=o?e:[e],c=i.map(e=>e.name),u=[],l=t.names();for(const a of c)-1!==l.indexOf(a)?u.push(t.getValue(a)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const d=c.join(",")+"|"+t.names().sort().join(",");let h,p=Hs.get(d);if(null==p){const e=function(e,t){a.Mf.assert(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===e.length){const a=Ys(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:o}=Ys(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const t in o)null==r[t]&&(r[t]=new Set),o[t].forEach(e=>r[t].add(e))}}return{sorted:n,recipientCounts:Xs(r)}}(i,t);p=e.sorted,h=e.recipientCounts,Hs.put(d,p),qs.put(d,h)}h={},s||Object.assign(h,qs.get(d));const f=new Gs(t);for(let m=0;m<p.length;++m){if(null!=r){const e=Object(a.Je)().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const e=p[m],o=e.sourceLayer;if(o instanceof Us)continue;const i=[],l=[],d=[];let g=!1;for(const n of e.inputs){const e=f.getValue(n),r=f.getMask(n);i.push(e),l.push(r),null!=r&&(g=!0),s||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==c.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||d.push(e))}g&&((n=n||{}).mask=l[0]);const b=aa(o.apply(i,n));let y=null;o.supportsMasking&&(y=o.computeMask(i,l));const v=Qs(e),x=Array.isArray(v)?v:[v];for(let t=0;t<x.length;++t){f.hasKey(x[t])||f.add(x[t],b[t],Array.isArray(y)?y[0]:y);const e=c.indexOf(x[t].name);-1!==e&&(u[e]=b[t])}s||Object(a.ce)(d)}return f.disposeMasks(),o?u:u[0]}function Xs(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Ys(e,t){const n=new Set,r=[],a={};for(const i of t.names())n.add(i);const s=[],o=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=o[o.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&o.pop();else{o.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function Qs(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Zs(e,t){return Object(a.Ff)(()=>a.uf(a.yf(a.Ne(e,e),t,!0)))}Object(a.he)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,(function(e){null!=Hs&&Hs.setMaxEntries(e),null!=qs&&qs.setMaxEntries(e)}));class Js extends a.if.Serializable{getConfig(){return{}}}class $s extends Js{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(a.Ff)(()=>{const t=Zs(e,this.axis),n=a.Nd(t,0,this.maxValue);return a.Ne(e,a.de(n,a.xd(Ua(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}$s.className="MaxNorm",a.if.registerClass($s);class eo extends Js{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(a.Ff)(()=>a.de(e,a.xd(Ua(),Zs(e,this.axis))))}getConfig(){return{axis:this.axis}}}eo.className="UnitNorm",a.if.registerClass(eo);class to extends Js{apply(e){return a.cf(e)}}to.className="NonNeg",a.if.registerClass(to);class no extends Js{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(a.Ff)(()=>{const t=Zs(e,this.axis),n=a.xd(a.Ne(this.rate,a.Nd(t,this.minValue,this.maxValue)),a.Ne(1-this.rate,t));return a.Ne(e,a.de(n,a.xd(Ua(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}no.className="MinMaxNorm",a.if.registerClass(no);const ro={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ao(e){return ca(e)}function so(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return la(e,a.if.SerializationMap.getMap().classNameMap,t,"constraint")}function oo(e){if(null==e)return null;if("string"===typeof e){return so({className:e in ro?ro[e]:e,config:{}})}return e instanceof Js?e:so(e)}async function io(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!==typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];Object(a.ce)(r)}}function co(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var uo;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(uo||(uo={}));class lo{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class ho{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class po extends lo{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const r in t){const e=t[r];if("number"===typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const s=Object(a.Ff)(()=>Object(a.xd)(this.totals[r],Object(a.Ne)(e,n)));this.totals[r]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:Object(a.Ff)(()=>{const e=Object(a.Ne)(Object(a.de)(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),Object(a.ue)(t[n])}))}}class fo extends lo{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const a in this.history){const r=this.history[a];for(let s=0;s<r.length;++s)if("number"!==typeof r[s]){const o=r[s];e.push(o.data()),t.push(a),n.push(s)}}const r=await Promise.all(e);for(let a=0;a<r.length;++a){this.history[t[a]][n[a]].dispose(),this.history[t[a]][n[a]]=r[a][0]}}}class mo extends lo{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||a.Pe,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");a.Mf.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():a.Mf.now();return function(){const o=null!=n?n():a.Mf.now();return o-s<t||(s=o,r=e(...arguments)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await io(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await io(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await io(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await io(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await io(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):a.Mf.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await io(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await io(e),await this.trainEnd(e))}}function go(e,t){if(null==e&&(e={}),e instanceof lo)return[e];if(Array.isArray(e)&&e[0]instanceof lo)return e;return aa(e).map(e=>new mo(e,t))}class bo{constructor(){}static registerCallbackConstructor(e,t){a.Mf.assert(e>=0&&Number.isInteger(e),()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(e)),bo.checkForDuplicate(t),null==bo.constructors[e]&&(bo.constructors[e]=[]),bo.constructors[e].push(t)}static checkForDuplicate(e){for(const t in bo.constructors){bo.constructors[+t].forEach(t=>{if(t===e)throw new Qr("Duplicate callback constructor.")})}}static clear(){bo.constructors={}}static createCallbacks(e){const t=[];for(const n in bo.constructors){const r=+n;e>=r&&t.push(...bo.constructors[r])}return t.map(e=>new e)}}function yo(e,t,n,r,a,s,o,i,c){const u=new fo,l=[new po,...bo.createCallbacks(t)];null!=e&&l.push(...e),l.push(u);const d=new ho(l);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:o,verbose:t,doValidation:i,metrics:c}),{callbackList:d,history:u}}function vo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return la(e,a.if.SerializationMap.getMap().classNameMap,t,"layer",n)}function xo(e,t){return Object(a.Ff)(()=>{"float32"!==e.dtype&&(e=a.Md(e,"float32"));const n=a.yf(ts(e),t,!0),r=a.me(n.shape,Ua()),s=a.uf(a.He(n,r));return a.de(e,s)})}function wo(e,t){return Object(a.Ff)(()=>a.Ie(ts(a.xf(t,e)),-1))}function Oo(e,t){return Object(a.Ff)(()=>a.Ie(a.wd(a.xf(t,e)),-1))}function ko(e,t){return Object(a.Ff)(()=>{const n=a.xf(e,t),r=a.Nd(a.wd(e),Ua(),Number.MAX_VALUE),s=a.wd(a.de(n,r));return a.Ne(100,a.Ie(s,-1))})}function So(e,t){return Object(a.Ff)(()=>{const n=a.Nd(t,Ua(),Number.MAX_VALUE),r=a.ye(a.xd(1,n)),s=a.Nd(e,Ua(),Number.MAX_VALUE),o=a.ye(a.xd(1,s));return a.Ie(ts(a.xf(r,o)),-1)})}function Io(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Object(a.Ff)(()=>{if(n)t=a.rf(t);else{const e=a.yf(t,t.shape.length-1,!0);t=a.de(t,e)}return t=a.Nd(t,Ua(),1-Ua()),a.Oe(a.yf(a.Ne(a.Md(e,"float32"),a.ye(t)),t.shape.length-1))})}function No(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Object(a.Ff)(()=>{const r=a.Md(a.ne(Ha(e)),"int32"),s=(t=a.Nd(t,Ua(),1-Ua())).shape;return Io(a.df(a.Re(r,s[s.length-1]),s),t,n)})}function To(e,t){return Object(a.Ff)(()=>{let n;return n=a.Nd(t,Ua(),1-Ua()),n=a.ye(a.de(n,a.xf(1,n))),a.Ie(function(e,t){if(!a.Mf.arraysEqual(e.shape,t.shape))throw new Qr("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(e.shape)," and ").concat(JSON.stringify(t.shape)));return Object(a.Ff)(()=>{const n=a.cf(t),r=a.Oe(a.wd(t));return a.xd(a.xf(n,a.Ne(t,e)),a.ze(a.je(r)))})}(e,n),-1)})}function jo(e,t){return Object(a.Ff)(()=>{const n=a.Nd(e,Ua(),1),r=a.Nd(t,Ua(),1);return a.yf(a.Ne(e,a.ye(a.de(n,r))),-1)})}function Eo(e,t){return Object(a.Ff)(()=>{const n=xo(e,-1),r=xo(t,-1),s=a.Ne(n,r);return a.Oe(a.yf(s,-1))})}bo.constructors={};const Co={meanSquaredError:wo,meanAbsoluteError:Oo,meanAbsolutePercentageError:ko,meanSquaredLogarithmicError:So,squaredHinge:function(e,t){return Object(a.Ff)(()=>{const n=a.He(0,a.xf(1,a.Ne(e,t)));return a.Ie(ts(n),-1)})},hinge:function(e,t){return Object(a.Ff)(()=>{const n=a.He(0,a.xf(1,a.Ne(e,t)));return a.Ie(n,-1)})},categoricalHinge:function(e,t){return Object(a.Ff)(()=>{const n=a.yf(a.Ne(e,t),-1),r=a.Ee(a.Ne(a.xf(1,e),t),-1);return a.He(0,a.xd(1,a.xf(r,n)))})},logcosh:function(e,t){return Object(a.Ff)(()=>{const n=Math.log(2),r=a.xf(t,e),s=a.xf(a.xd(r,a.sf(a.Ne(-2,r))),n);return a.Ie(s,-1)})},categoricalCrossentropy:Io,sparseCategoricalCrossentropy:No,binaryCrossentropy:To,kullbackLeiblerDivergence:jo,poisson:function(e,t){return Object(a.Ff)(()=>{const n=a.ye(a.xd(Ua(),t));return a.Ie(a.xf(t,a.Ne(e,n)),-1)})},cosineProximity:Eo};function Ao(e){if("string"===typeof e){if(e in Co)return Co[e];let t="Unknown loss ".concat(e);throw e.toLowerCase().includes("softmaxcrossentropy")&&(t="Unknown loss ".concat(e,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new Qr(t)}return e}function Ro(e,t){return Object(a.Ff)(()=>{const n=a.Ne(.5,a.Te(t)),r=Va(a.qe(t,n),e.dtype);return a.Ie(a.ie(e,r),-1)})}function Fo(e,t){return Object(a.Ff)(()=>Va(a.ie(a.Ad(e,-1),a.Ad(t,-1)),"float32"))}function _o(e,t){return Object(a.Ff)(()=>a.Md(a.yf(a.Ce(a.ie(e,1),a.ie(t,1))),"float32"))}function Mo(e,t){return Object(a.Ff)(()=>{const n=_o(e,t),r=function(e,t){return Object(a.Ff)(()=>a.Md(a.yf(a.Ce(a.ie(e,0),a.ie(t,1))),"float32"))}(e,t),s=a.xd(n,r);return a.Md(a.Qf(a.qe(s,0),a.de(n,s),0),"float32")})}function Do(e,t){return To(e,t)}function Lo(e,t){return e.rank===t.rank&&(e=a.vf(e,[e.rank-1])),(t=a.Ad(t,-1)).dtype!==e.dtype&&(t=a.Md(t,e.dtype)),a.Md(a.ie(e,t),"float32")}const zo=Io,Po=No,Bo={binaryAccuracy:Ro,categoricalAccuracy:Fo,precision:Mo,categoricalCrossentropy:zo,sparseCategoricalCrossentropy:Po,mse:wo,MSE:wo,mae:Oo,MAE:Oo,mape:ko,MAPE:ko,cosine:Eo};function Wo(e){if("string"===typeof e&&e in Bo)return Bo[e];if("string"!==typeof e&&null!=e)return e;throw new Qr("Unknown metric ".concat(e))}function Uo(e){if(ta(null!==e,"Unknown LossOrMetricFn ".concat(e)),"string"===typeof e)return e;{let t;for(const n of Object.keys(Co))if(Co[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Bo))if(Bo[n]===e){t=n;break}return void 0!==t?t:e.name}}function Vo(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Go(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn('User-defined metadata of model "'.concat(t,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(1048576,"."))}}function Go(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!Go(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Go(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Ho(e){let t;return t=null!=e.collectedTrainableWeights?Rs(e.collectedTrainableWeights):Rs(e.trainableWeights),t}function qo(e){let t=!0;const n=[],r=[];for(const a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(const a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){t=!1;break}r.push(...a)}if(t)for(const a of e.layers){let e=!1;for(const n of a.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}function Ko(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,r="";for(let a=0;a<e.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=e[a],r=r.slice(0,t[a]),r+=" ".repeat(t[a]-r.length);n(r)}function Xo(e,t,n){let r,a;try{a=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(i){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(i){r="multiple"}const s=e.name,o=e.getClassName();Ko(["".concat(s," (").concat(o,")"),a,r,e.countParams().toString()],t,n)}function Yo(e,t,n,r){let a,s;try{s=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(l){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(l){a="multiple"}const o=[];for(const d of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(d)))for(let e=0;e<d.inboundLayers.length;++e){const t=d.inboundLayers[e].name,n=d.nodeIndices[e],r=d.tensorIndices[e];o.push("".concat(t,"[").concat(n,"][").concat(r,"]"))}const i=e.name,c=e.getClassName(),u=0===o.length?"":o[0];Ko(["".concat(i," (").concat(c,")"),s,a,e.countParams().toString(),u],t,r);for(let d=1;d<o.length;++d)Ko(["","","","",o[d]],t,r)}function Qo(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function Zo(e,t){if(null===e)return null;if("string"===typeof e)return oa(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];Qo(t,a,r)?n.push(r):n.push(Zo(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"===typeof r)t[n]=r;else{const e=oa(n);t[e]=Zo(r,e)}}return t}}class Jo extends Ws{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=wa(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],ha(this.inputs).length!==this.inputs.length)throw new Qr("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map(e=>e.name)));ha(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map(e=>e.name))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const e=b.sourceLayer,t=b.nodeIndex,n=b.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const b of this.inputs){const e=b.sourceLayer,t=b.nodeIndex,n=b.tensorIndex;ta(0===t,"input layer has >1 nodes"),ta(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const t=this.inputLayers[b];if(!(t instanceof Us))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(e.inputs,". ")+"Input ".concat(b," (0-based) originates ")+"from layer type ".concat(t.getClassName(),"."));this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);const t={},n={},r={},a={},s={},o=[],i=(e,t,n,r,a,c)=>{null!=r&&null!=a&&null!=c||(r=e.sourceLayer,a=e.nodeIndex,c=e.tensorIndex);const u=r.inboundNodes[a];if(-1!==n.indexOf(u))throw new Yr("The tensor ".concat(e.name,' at layer "').concat(r.name,'" ')+"is part of a cycle.");if(-1!==t.indexOf(u))return;this.containerNodes.add(Jo.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);const l=u.inboundLayers.length;for(let s=0;s<l;s++){const e=u.inputTensors[s],r=u.inboundLayers[s],a=u.nodeIndices[s],o=u.tensorIndices[s];i(e,t,n,r,a,o)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);o.push(u)},c=[],u=[];for(const b of this.outputs)i(b,c,u);const l=o.slice().reverse();for(const b of l){n[b.id]=b,b.id in t||(t[b.id]=0);let e=t[b.id];const s=null==r[b.outboundLayer.id]?0:r[b.outboundLayer.id];e=Math.max(e,s),r[b.outboundLayer.id]=e,a[b.outboundLayer.id]=b.outboundLayer,t[b.id]=e;for(let r=0;r<b.inboundLayers.length;r++){const a=b.inboundLayers[r],s=b.nodeIndices[r],o=a.inboundNodes[s],i=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(e+1,i),n[o.id]=o}}const d={};for(const b in t){const e=t[b];e in d||(d[e]=[]),d[e].push(n[b])}const h={};for(const b in r){const e=r[b];e in h||(h[e]=[]),h[e].push(a[b])}let p=Object.keys(h).map(e=>parseInt(e,10)).sort(da);this.layers=[];for(const b of p){const e=h[b];e.sort((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0});for(const t of e)t instanceof Jo&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=h,p=Object.keys(d).map(e=>parseInt(e,10)).sort(da);const f=this.inputs.slice(),m=[];for(const b of p)for(const e of d[b]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Yr("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(t.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(m));for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=d;const g=this.layers.map(e=>e.name);for(const b of g){const e=g.filter(e=>e===b).length;if(1!==e)throw new Yr('The name "'.concat(b,'" is used ').concat(e," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Ps({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Qr("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let r=0;const a=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);a&&this.parseWeights(e);for(const o of this.layers)for(const[e,t]of o.weights.entries()){const s=a?"".concat(t.name.split("/").slice(0,-1).join("/")+"/").concat(e):t.originalName;if(null!=n[s])throw new Qr("Duplicate weight name: ".concat(s));n[s]=t,r++}const s=[];for(const o in e){let r=o;if(null==n[o]){const e=o.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])s.push([n[r],e[o]]);else if(t)throw new Qr("Provided weight data has no target variable: ".concat(o));delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Qr("".concat(e.length," of ").concat(r," weights are not set: ")+"".concat(e))}Ms(s)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],a=n.map(e=>e.startsWith("_")?e.slice(1):e).filter(e=>!r.includes(e)).join("/");a!==t&&(e[a]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers ".concat("4.17.0"),t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=function e(t,n){if(null===t||void 0===t)return null;if("string"===typeof t)return sa(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const r=[],a=t.length;for(let s=0;s<a;++s){const a=t[s];Qo(n,s,a)?r.push(a):r.push(e(a,n))}return r}{const n={};for(const r of Object.keys(t)){const a=t[r],s=sa(r);n[s]="name"!==r&&"className"!==r||"string"!==typeof a?e(a,r):a}return n}}(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Object(a.Ff)(()=>{e=aa(e);const n=new Gs;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Ks(this.outputs,n,t)})}computeMask(e,t){return Object(a.Ff)(()=>{let n;return e=aa(e),n=null==t?ea(null,e.length):aa(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){const t=Es(e);if(t.length!==this.inputLayers.length)throw new Qr("Invalid inputShape argument ".concat(e,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let o=0;o<t.length;o++){const e=this.inputLayers[o],r=t[o];n[e.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(da);if(r.length>1)for(const o of r){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(e.id))continue;const r=[];for(let o=0;o<t.inboundLayers.length;o++){const e=t.inboundLayers[o],a=t.nodeIndices[o],s=t.tensorIndices[o],i=n["".concat(e.name,"_").concat(a,"_").concat(s)];r.push(i)}const a=Es(e.computeOutputShape(ra(r))),s=e.inboundNodes.indexOf(t);for(let t=0;t<a.length;t++){n["".concat(e.name,"_").concat(s,"_").concat(t)]=a[t]}}}const a=[],s=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],t=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],r="".concat(e.name,"_").concat(t,"_").concat(n);s.push(r)}for(let o=0;o<s.length;o++){const e=s[o];ta(e in n),a.push(n[e])}return ra(a)}runInternalGraph(e,t){null==t&&(t=ea(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const r=this.inputs[i],a=e[i],s=t[i];n[r.id]=[a,s]}const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(da);for(const i of r){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,a=t.outputTensors,s=new Array;for(const t of r)t.id in n&&s.push(n[t.id]);if(s.length===r.length){let r,o,i,c,u={};if(null!=t.callArgs&&(u=t.callArgs),1===s.length){const[t,n]=s[0];null==u.mask&&(u.mask=n),i=aa(e.call(t,u)),c=aa(e.computeMask(t,n)),r=[t],o=[n]}else r=s.map(e=>e[0]),o=s.map(e=>e[1]),null==u.mask&&(u.mask=o),i=aa(e.call(r,u)),c=aa(e.computeMask(r,o));if(e.activityRegularizer)throw new Zr("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=i[e],s=c[e];n[t.id]=[r,s]}}}}const a=[],s=[],o=[];for(const i of this.outputs){ta(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[e,t]=n[i.id];o.push(e.shape),a.push(e),s.push(t)}return[a,s,o]}buildNodeConversionMap(e){const t={};let n;for(const r of this.layers){n=r instanceof Jo?1:0;for(let e=0;e<r.inboundNodes.length;e++){const a=Jo.nodeKey(r,e);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new Qr("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new Qr("No such layer: ".concat(e))}findLayer(e){if(this.layers.length<=e)throw new Qr("Was asked to retrieve layer at index ".concat(e,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[e]}calculateLosses(){return Object(a.Ff)(()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Jo.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const o of this.layers){const e=o.getClassName(),r=o.getConfig(),a=[];for(let n=0;n<o.inboundNodes.length;n++){const e=o.inboundNodes[n],r=Jo.nodeKey(o,n);let i={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),i=e.callArgs}catch(s){console.warn("Layer ".concat(o.name," was passed ")+"non-serializable keyword arguments: "+"".concat(e.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),i={}}if(e.inboundLayers.length>0){const n=[];for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],s=e.nodeIndices[r],o=e.tensorIndices[r];let c=t[Jo.nodeKey(a,s)];null==c&&(c=0),n.push([a.name,c,o,i])}a.push(n)}}}const i={};i.name=o.name,i.className=e,i.config=r,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let o=0;o<this.inputLayers.length;o++){const e=this.inputLayers[o],n=this.inputLayersNodeIndices[o],a=Jo.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let s=t[a];null!==s&&void 0!==s||(s=0);const i=this.inputLayersTensorIndices[o];r.push([e.name,s,i])}e.inputLayers=r;const a=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],n=this.outputLayersNodeIndices[o],r=Jo.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let s=t[r];null!==s&&void 0!==s||(s=0);const i=this.outputLayersTensorIndices[o];a.push([e.name,s,i])}return e.outputLayers=a,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={},a={};function s(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let a;for(const o of t){const i=o[0],c=o[1],u=o[2];if(a=null==o[3]?{}:o[3],!(i in r))return void s(e,t);const l=r[i];if(l.inboundNodes.length<=c)return void s(e,t);const d=l.inboundNodes[c];n.push(d.outputTensors[u])}n.length>0&&e.apply(ra(n),a)}function i(e){const a=e.name,o=vo(e,null!=t.customObjects?t.customObjects:{});o.setFastWeightInitDuringBuild(n),r[a]=o;e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new Qr("Corrupted configuration, expected array for nodeData: ".concat(e));s(o,e)})}const c=t.name,u=t.layers;for(const f of u)i(f);for(;!pa(a);)for(const e of u){const t=r[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const l=[],d=[],h=t.inputLayers;for(const f of h){const e=f[0],t=f[1],n=f[2];ta(e in r);const a=r[e].inboundNodes[t].outputTensors;l.push(a[n])}const p=t.outputLayers;for(const f of p){const e=f[0],t=f[1],n=f[2];ta(e in r);const a=r[e].inboundNodes[t].outputTensors;d.push(a[n])}return new e({inputs:l,outputs:d,name:c})}get stateful(){if(this._stateful)throw new Qr("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Object(a.Ff)(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function $o(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===r)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error("Provided ".concat(n," is an array of ").concat(e.length," ")+"element(s), but the model has ".concat(r," outputs. ")+"Make sure a set of weights is provided for each model output.");return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach(t=>{t in e?n.push(e[t]):n.push(null)}),n}throw new Error("The model has multiple (".concat(r,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(r," elements or an object with ").concat(t," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(e)))}function ei(e,t){return $o(e,t,"classWeight")}async function ti(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Object(a.Ff)(()=>{if(1===e.shape.length)return Object(a.Od)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return Object(a.Ad)(e,t)}if(1===e.shape[1])return Object(a.df)(e,[e.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(e.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(e.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")}),r=Array.from(await t.data());Object(a.ce)(t);const s=[];return r.forEach(e=>{if(null==n[e])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(e," exists in the data but not in ")+"classWeight");s.push(n[e])}),Object(a.Cf)(s,"float32")}return null}function ni(e,t){return Object(a.Ne)(e,t)}function ri(e,t){let n,r;const s=t;n=s.xs,r=s.ys,a.Mf.assert(null!=n&&null!=r,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(t));const o=ai("input",e.inputNames,n),i=ai("output",e.outputNames,r),c=o[0].shape[0];a.Mf.assert(o.length===e.inputs.length,()=>"LayersModel has ".concat(e.inputs.length," inputs, but the dataset ")+"provides ".concat(o.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(e.inputNames),")")),a.Mf.assert(i.length===e.outputs.length,()=>"LayersModel has ".concat(e.outputs.length," outputs, but the dataset ")+"provides ".concat(i.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(e.outputNames),")"));for(let u=0;u<o.length;u++)a.Mf.assert(o[u].shape[0]===c,()=>"Batch size mismatch: input "+"".concat(e.inputNames[u]," has ").concat(o[u].shape[0],"; ")+"expected  ".concat(c," based on input ").concat(e.inputNames[0],"."));for(let u=0;u<i.length;u++)a.Mf.assert(i[u].shape[0]===c,()=>"Batch size mismatch: output "+"".concat(e.outputNames[u]," has ").concat(i[u].shape[0],"; ")+"expected  ".concat(c," based on input ").concat(e.inputNames[0],"."));return{xs:o,ys:i}}function ai(e,t,n){if(n instanceof a.kd)return[n];if(Array.isArray(n))return a.Mf.assert(n.length===t.length,()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(t.length," to match the ").concat(e," keys ").concat(t,".")),n;{const r=[];for(const a of t){if(null==n[a])throw new Qr("The feature data generated by the dataset lacks the required "+"".concat(e," key '").concat(a,"'."));r.push(n[a])}return r}}async function si(e,t,n){const r=null!=n.batchesPerEpoch;if(a.Mf.assert(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),a.Mf.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),a.Mf.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs)),a.Mf.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch)),a.Mf.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let o,i;if(s)if(oi(n.validationData))a.Mf.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches));else{const e=function(e){if(3===e.length)throw new Zr("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);o=e.xs,i=e.ys}const c=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=s?u.slice().concat(u.map(e=>"val_"+e)):u.slice();const d=go(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=yo(d,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,s,l);p.setModel(e),e.history=f,await p.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const l={};await p.onEpochBegin(m);let d=0,h=0;for(r||(g=await t.iterator());!r||d<n.batchesPerEpoch;){const t=await g.next();if(r&&t.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(d," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=ri(e,t.value),o={};o.batch=h,o.size=r[0].shape[0],await p.onBatchBegin(h,o);const i=[];if(null!=n.classWeight){const t=ei(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await ti(s[e],null,t[e]))}const l=r.concat(s).concat(i),f=c(l);a.ce(l);for(let e=0;e<u.length;++e){const t=u[e],n=f[e];o[t]=n,a.ue(n)}await p.onBatchEnd(h,o),co(o),h++,d++}if(r?d>=n.batchesPerEpoch:t.done){if(s){let t;t=oi(n.validationData)?aa(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):aa(e.evaluate(o,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l["val_".concat(e.metricsNames[n])]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(m,l),m++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function oi(e){return"function"===typeof e.iterator}function ii(e){a.Mf.assert(e>0&&Number.isInteger(e),()=>"batchSize is required to be a positive integer, but got ".concat(e))}function ci(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>qa(e,t,n-t)):qa(e,t,n-t)}function ui(e,t){return a.Ff(()=>null==e?null:Array.isArray(e)?e.map(e=>ui(e,t)):es(e,"int32"===t.dtype?t:a.Md(t,"int32")))}function li(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function di(e){const t=[];e instanceof a.kd&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Ga(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function hi(e,t){if(null==e)return;const n=[];if(t instanceof a.kd)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(const a in t){const e=t[a];n.push(e.id)}const r=[];if(e instanceof a.kd)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&r.push(e)});else if(null!=e)for(const a in e){const t=e[a];-1===n.indexOf(t.id)&&r.push(t)}r.forEach(e=>{e.isDisposed||e.dispose()})}function pi(e){return Array.isArray(e)}function fi(e){return!function(e){return e instanceof a.kd}(e)&&!pi(e)}function mi(e,t,n){let r,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(pi(e)&&e.length>0)t=!0;else if(fi(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Qr("Error when checking model ".concat(s," expected no data, ")+"but got ".concat(e))}return[]}if(null==e)return t.map(e=>null);if(fi(e)){e=e,r=[];for(const n of t){if(null==e[n])throw new Qr('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(t));r.push(e[n])}}else if(pi(e)){if((e=e).length!==t.length)throw new Qr("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(t.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(e));r=e}else{if(e=e,t.length>1)throw new Qr("The model ".concat(s," expects ").concat(t.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(e.shape));r=[e]}if(r=di(r),null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=r[o];if(e.shape.length!==n[o].length)throw new Qr("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s). but got array with ")+"shape ".concat(e.shape));for(let t=0;t<n[o].length;++t){if(0===t&&!a)continue;const r=e.shape[t],i=n[o][t];if(null!=i&&i>=0&&r!==i)throw new Qr("".concat(s," expected a batch of elements where each ")+"example has shape [".concat(n[o].slice(1,n[o].length),"] ")+"(i.e.,tensor shape [*,".concat(n[o].slice(1,n[o].length),"])")+" but the ".concat(s," received an input with ").concat(e.shape[0])+" examples, each with shape [".concat(e.shape.slice(1,e.shape.length),"]")+" (tensor shape [".concat(e.shape,"])"))}}return r}function gi(e,t,n){let r,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new Qr("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(t.length," Tensor(s),")+" but instead got ".concat(e.length," Tensors(s)."));r=e}else{if(t.length>1)throw new Qr("The model expects ".concat(t.length," ").concat(s," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(e.shape),"."));r=[e]}if(null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=r[o];if(e.shape.length!==n[o].length)throw new Qr("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(e.shape)));for(let r=0;r<n[o].length;++r){if(0===r&&!a)continue;const i=e.shape[r],c=n[o][r];if(null!=c&&c!==i)throw new Qr("Error when checking ".concat(s,": expected ")+"".concat(t[o]," to have shape ").concat(JSON.stringify(n[o])," but ")+"got array with shape ".concat(JSON.stringify(e.shape),"."))}}}class bi extends Jo{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new Qr("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const a=qo(e),s=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(a?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!a){s.push("Receives inputs"),o=[];for(const t in e.nodesByDepth)o.push(...e.nodesByDepth[t])}r("_".repeat(t)),Ko(s,n,r),r("=".repeat(t));const i=e.layers;for(let l=0;l<i.length;++l)a?Xo(i[l],n,r):Yo(i[l],n,o,r),r((l===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const c=Ho(e),u=Rs(e.nonTrainableWeights);r("Total params: ".concat(c+u)),r("Trainable params: ".concat(c)),r("Non-trainable params: ".concat(u)),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>a.Hf.adagrad(.01),Adadelta:()=>a.Hf.adadelta(1,.95,Ua()),Adam:()=>a.Hf.adam(.001,.9,.999,Ua()),Adamax:()=>a.Hf.adamax(.002,.9,.999,Ua(),0),RMSProp:()=>a.Hf.rmsprop(.001,.9,0,Ua()),SGD:()=>a.Hf.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Qr("Unknown Optimizer ".concat(e))}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof a.hc))throw new Qr("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Qr("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(e.loss,"."));const n=e.loss;t=n.map(e=>Ao(e))}else{const n=Ao(e.loss);this.outputs.forEach(e=>{t.push(n)})}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Qr('Unknown entry in loss dictionary: "'.concat(t,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==e.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),t.push(Ao(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const e=this.internalOutputShapes[a],t=this.outputNames[a];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[a])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ra("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(e));n=e}if(Array.isArray(n))return t.map(e=>n);{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ra("metric",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,a;for(const o of t){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===To?-1!==["accuracy","acc"].indexOf(o)?r=Ro:-1!==["crossentropy","ce"].indexOf(o)&&(r=Do):this.lossFunctions[e]===No?-1!==["accuracy","acc"].indexOf(o)?r=Lo:-1!==["crossentropy","ce"].indexOf(o)&&(r=Po):-1!==["accuracy","acc"].indexOf(o)?r=Fo:-1!==["crossentropy","ce"].indexOf(o)&&(r=zo),-1!==["accuracy","acc"].indexOf(o)?s="acc":-1!==["crossentropy","ce"].indexOf(o)&&(s="ce"),a=r,n=""+s}else{const e=Wo(o);a=e,n=""+Uo(o)}let t;Ra(n,()=>{t=a}),s(e,n,t)}})(r[e])}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=null==n.batchSize?32:n.batchSize;ii(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const o=this.testFunction;return ra(this.testLoop(o,s,r,n.verbose,n.steps))}finally{hi(a[0],e),hi(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let o=[];if(n.verbose>0)throw new Zr("Verbose mode is not implemented yet.");a.Mf.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches)));const i="function"===typeof t.next?t:await t.iterator();let c=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(o=a.Ff(()=>{if(t.value){const{xs:n,ys:r}=ri(e,t.value),i=n.concat(r),l=a.Ff(()=>s(i));if(a.ce(i),0===u)for(let e=0;e<l.length;++e)o.push(Object(a.ff)(0));const d=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=o[e];o[e]=a.Ff(()=>a.xd(o[e],a.Ne(d,t))),u>0&&a.ce(n)}a.ce(l),c+=d,++u}return o}),t.done){r&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let l=0;l<o.length;++l){const e=o[l];o[l]=a.de(o[l],c),a.ce(e)}return ra(o)}(this,e,t)}checkNumSamples(e,t,n){let r,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(r=null,null!=t)throw new Qr("If ".concat(a," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(t))}else{if(null==e)throw new Qr("Either the input data should have a defined shape, or "+"".concat(a," shoud be specified."));r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Qr("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),o=new Gs;if(e instanceof a.kd&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Qr("The number of inputs provided (".concat(e.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let t=0;t<this.inputs.length;++t)o.add(this.inputs[t],e[t])}else for(const a of this.inputs){const t=e[a.name];if(null==t)throw new Qr("No value is provided for the model's input ".concat(a.name));o.add(a,t)}const i=Ks(s,o);return n?i:i[0]}retrieveSymbolicTensors(e){const t=ea(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map(e=>e.name);for(let r=0;r<e.length;++r){const o=s.indexOf(e[r]);if(-1!==o&&(t[r]=a[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach((t,r)=>{null==t&&n.push(e[r])}),new Qr("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return a.Ff(()=>{const r=this.checkNumSamples(e);if(n)throw new Zr("Verbose predictLoop() is not implemented yet.");const s=li(r,t),o=this.outputs.map(e=>[]);for(let t=0;t<s.length;++t){a.Ff(()=>{const n=s[t][0],r=s[t][1],a=ci(e,n,r),o=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)o.push({key:this.inputs[e],value:a[e]});else o.push({key:this.inputs[0],value:a});const i=new Gs(o);return Ks(this.outputs,i)}).forEach((e,t)=>o[t].push(e))}return ra(o.map(e=>a.Pd(e,0)))})}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=di(e);gi(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return ii(r),this.predictLoop(n,r)}finally{hi(n,e)}}predictOnBatch(e){gi(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new Yr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let a=0;a<this.feedOutputShapes.length;++a){const e=this.feedOutputShapes[a];this.feedLossFns[a]===No?r.push(e.slice(0,e.length-1).concat([1])):r.push(e)}if(function(e,t,n){const r=ha(e.map(e=>e.shape[0]));r.sort();const s=ha(t.map(e=>e.shape[0]));if(s.sort(),r.length>1)throw new Qr("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map(e=>e.shape))));if(s.length>1)throw new Qr("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map(e=>e.shape))));if(r.length>0&&s.length>0&&!a.Mf.arraysEqual(r,s))throw new Qr("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(r[0]," input sample(s) and ").concat(s[0]," target ")+"sample(s).")}(e=mi(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=mi(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const r=[wo,To,Io];for(let a=0;a<e.length;++a){const s=e[a],o=t[a],i=n[a];if(null!=o){if(o===Io&&1===s.shape[s.shape.length-1])throw new Qr("You are passing a target array of shape ".concat(s.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==r.indexOf(o)){const e=s.shape.slice(1),t=i.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new Qr("A target Tensor with shape ".concat(s.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new Qr("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(e[0].shape[0]," sample(s)."));return[e,t]}async standardizeUserData(e,t,n,r){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0;const[o,i]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=r){const e=ei(r,this.outputNames);c=[];for(let t=0;t<e.length;++t)c.push(await ti(i[t],null,e[t]))}return[o,i,c]}testLoop(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4?arguments[4]:void 0;return a.Ff(()=>{const o=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new Zr("Verbose mode is not implemented yet.");if(null!=s)throw new Zr("steps mode in testLoop() is not implemented yet");{const r=li(o,n),s=Object(a.Cf)(Ba(0,o));for(let n=0;n<r.length;++n){const o=r[n][0],c=r[n][1],u=qa(s,o,c-o),l=ui(t,u),d=e(l);if(0===n)for(let e=0;e<d.length;++e)i.push(Object(a.ff)(0));for(let e=0;e<d.length;++e){const t=d[e];i[e]=a.xd(i[e],a.Ne(c-o,t))}}for(let e=0;e<i.length;++e)i[e]=a.de(i[e],o)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;if(na(e,r)>1){const t=na(e.slice(0,n),r);a+="_".concat(t)}t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),o=[],i=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Gs(e),c=Ks(this.outputs,i,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(r[n],c[n]);null!=s[n]&&(e=ni(e,s[n]));const o=a.Ie(e);t.push(o),u=0===n?e:a.xd(u,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],s=this.metricsTensors[n][1];e=a.Ie(t(r[s],c[s]))}a.ue(e),o.push(e)}return u=a.Ie(u),this.calculateLosses().forEach(e=>{u=a.xd(u,e)}),u},!0,i)].concat(o)}}makeTestFunction(){this.testFunction=e=>a.Ff(()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let e=0;e<this.inputs.length;++e)o.push({key:this.inputs[e],value:r[e]});const i=new Gs(o),c=Ks(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],o=a.Ie(r(s[e],c[e]));n=0===e?o:a.xd(n,o),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],o=a.Ie(n(s[r],c[r]));t.push(o)}return t})}async fit(e,t){let n,r,s,o,i,c,u,l,d,h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const p=null==h.batchSize?32:h.batchSize;ii(p);const f=!1,m=await this.standardizeUserData(e,t,h.sampleWeight,h.classWeight,f,p);n=m[0],r=m[1],d=m[2];let g,b=!1;if(null!=h.validationData&&h.validationData.length>0){if(b=!0,2!==h.validationData.length)throw 3===h.validationData.length?new Zr("validationData including sample weights is not supported yet."):new Qr("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(h.validationData," is invalid."));i=h.validationData[0],c=h.validationData[1];const e=!0,t=await this.standardizeUserData(i,c,null,null,e,p);u=t[0],l=t[1],g=u.concat(l)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){b=!0;const e=Math.floor(n[0].shape[0]*(1-h.validationSplit)),t=n[0].shape[0];u=ci(n,e,t),s=n,n=ci(n,0,e),l=ci(r,e,t),o=r,r=ci(r,0,e),g=u.concat(l)}else null!=h.validationSteps&&(b=!0);const y=n.concat(r).concat(d);this.checkTrainableWeightsConsistency();const v=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let w,O;b?(this.makeTestFunction(),w=this.testFunction,O=x.slice().concat(x.map(e=>"val_"+e))):(w=null,g=[],O=x.slice());const k=go(h.callbacks,h.yieldEvery);return await this.fitLoop(v,y,x,p,h.epochs,h.verbose,k,w,g,h.shuffle,O,h.initialEpoch,null,null)}finally{this.isTraining=!1,hi(n,e),hi(r,t),hi(s,e),hi(o,t),hi(u,i),hi(l,c),null!=d&&a.ce(d)}}async fitLoop(e,t,n,r,s,o,i,c,u,l,d,h,p,f){null==r&&(r=32),null==s&&(s=1),null==l&&(l=!0),null==h&&(h=0);let m=!1;if(null!=c&&null!=u&&(m=!0),null!=f&&(m=!0,null==p))throw new Qr("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,r,p,"steps_per_epoch");let b;null!=g&&(b=Ba(0,g)),null==o&&(o=1);const{callbackList:y,history:v}=yo(i,o,s,h,g,p,r,m,d);y.setModel(this),this.history=v,await y.onTrainBegin(),this.stopTraining_=!1;for(let x=h;x<s;++x){await y.onEpochBegin(x);const s={};if(null!=p)throw new Zr("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new Zr("batch shuffling is not implemneted yet");l&&a.Mf.shuffle(b);const o=Object(a.Cf)(b),i=li(g,r);for(let l=0;l<i.length;++l){const d={};if(await y.onBatchBegin(l,d),a.Ff(()=>{const h=i[l][0],p=i[l][1],f=qa(o,h,p-h);d.batch=l,d.size=p-h;const g=ui(t,f),b=e(g);for(let e=0;e<n.length;++e){const t=n[e],r=b[e];d[t]=r,a.ue(r)}if(l===i.length-1&&m){const e=this.testLoop(c,u,r);for(let t=0;t<n.length;++t){const r=n[t],o=e[t];a.ue(o),s["val_"+r]=o}}}),await y.onBatchEnd(l,d),co(d),this.stopTraining_)break}o.dispose()}if(await y.onEpochEnd(x,s),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return si(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],o=this.makeTrainFunction()(r.concat(s)),i=[];for(const a of o){const e=await a.data();i.push(e[0])}return a.ce(o),hi(n[0],e),hi(n[1],t),ra(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||t.push({name:r[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=a.Je().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-a.Je().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=sa(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>sa(e))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!==typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=sa(n[r])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[sa(Uo(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>sa(Uo(e)));{const e={};for(const t in this.metrics)e[t]=sa(Uo(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=vo(Zo(e.optimizer_config));let n,r;if("string"===typeof e.loss)n=oa(e.loss);else if(Array.isArray(e.loss))n=e.loss.map(e=>oa(e));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=oa(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map(e=>oa(e));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=oa(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"===typeof e){const t=a.te.getSaveHandlers(e);if(0===t.length)throw new Qr("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Qr("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Qr("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await a.te.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat("4.17.0"),convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await a.te.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=a.te.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Vo(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Vo(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}bi.className="Model",a.if.registerClass(bi);class yi extends bi{}yi.className="Functional",a.if.registerClass(yi);class vi extends bi{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:wa("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new Qr("Negative dimension size caused by adding layer "+"".concat(e.name," with input shape [")+"".concat(e.inboundNodes[0].inputTensors[0].shape,"]"))}add(e){const t=e instanceof vi||e instanceof bi;let n;if(t){if(n=e,1!==n.outputs.length)throw new Qr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Qr("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Qr("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=Vs({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Qr("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(e.name," ")+"which has ".concat(e.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==e.inboundNodes[0].outputTensors.length)throw new Qr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=function e(t,n,r){if((null==n||null!=r&&r>0)&&(n=t.sourceLayer,r=t.nodeIndex),0===n.inboundNodes.length)return[t];{const t=n.inboundNodes[r];if(0===t.inboundLayers.length)return t.inputTensors;{const n=[];for(let r=0;r<t.inboundLayers.length;r++){const a=e(t.inputTensors[r],t.inboundLayers[r],t.nodeIndices[r]);for(const e of a)-1===n.indexOf(e)&&n.push(e)}return n}}}(this.outputs[0])}this.inboundNodes=[],new Ps({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ea(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(As(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new bi({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Yr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Yr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Yr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Yr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Qr("Legacy serialization format not supported yet.");n=t}else a.Mf.assert(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),n=t.layers,delete t.layers,s=t;const o=new e(s);if(!(o instanceof vi))throw new Zr("Sequential.fromConfig called on non-Sequential input: ".concat(o));for(const a of n){const e=vo(a,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),o.add(e)}return o}set stopTraining(e){if(null==this.model)throw new Qr("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Qr("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}vi.className="Sequential",a.if.registerClass(vi);class xi extends a.if.Serializable{getConfig(){return{}}}class wi extends xi{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new Zr("Support for alpha values other than 1 (".concat(t,") is not implemented ")+"yet.");return a.fe(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}wi.className="elu",a.if.registerClass(wi);class Oi extends xi{apply(e){return a.gf(e)}}Oi.className="selu",a.if.registerClass(Oi);class ki extends xi{apply(e){return a.cf(e)}}ki.className="relu",a.if.registerClass(ki);class Si extends xi{apply(e){return Object(a.Ff)(()=>a.Le(6,a.cf(e)))}}Si.className="relu6",a.if.registerClass(Si);class Ii extends xi{apply(e){return e}}Ii.className="linear",a.if.registerClass(Ii);class Ni extends xi{apply(e){return a.kf(e)}}Ni.className="sigmoid",a.if.registerClass(Ni);class Ti extends xi{apply(e){return function(e){return Object(a.Ff)(()=>{const t=a.xd(.5,a.Ne(.2,e));return a.Nd(t,0,1)})}(e)}}Ti.className="hardSigmoid",a.if.registerClass(Ti);class ji extends xi{apply(e){return a.sf(e)}}ji.className="softplus",a.if.registerClass(ji);class Ei extends xi{apply(e){return function(e){return Object(a.Ff)(()=>a.de(e,a.xd(a.wd(e),1)))}(e)}}Ei.className="softsign",a.if.registerClass(Ei);class Ci extends xi{apply(e){return a.Af(e)}}Ci.className="tanh",a.if.registerClass(Ci);class Ai extends xi{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return a.rf(e,t)}}Ai.className="softmax",a.if.registerClass(Ai);class Ri extends xi{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return a.Ae(e,t)}}Ri.className="logSoftmax",a.if.registerClass(Ri);class Fi extends xi{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return Object(a.Ff)(()=>a.Ne(a.kf(a.Ne(e,t)),e))}}Fi.className="swish",a.if.registerClass(Fi);class _i extends xi{apply(e){return Object(a.Ff)(()=>a.Ne(e,a.Af(a.sf(e))))}}function Mi(e){return e.getClassName()}function Di(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return la(e,a.if.SerializationMap.getMap().classNameMap,t,"activation")}function Li(e){if(null==e){const e={className:"linear",config:{}};return Di(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},Di(t)}return e instanceof xi?e:Di(e)}function zi(e){if(null!=e&&"object"!==typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(e))}_i.className="mish",a.if.registerClass(_i);class Pi extends a.if.Serializable{}class Bi extends Pi{constructor(e){super(),zi(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Object(a.Ff)(()=>{let t=Object(a.Rf)([1]);return this.hasL1&&(t=Object(a.xd)(t,Object(a.yf)(a.Ne(this.l1,Object(a.wd)(e))))),this.hasL2&&(t=Object(a.xd)(t,Object(a.yf)(a.Ne(this.l2,ts(e))))),a.df(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Bi.className="L1L2",a.if.registerClass(Bi);const Wi={l1l2:"L1L2"};function Ui(e){return ca(e)}function Vi(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return la(e,a.if.SerializationMap.getMap().classNameMap,t,"regularizer")}function Gi(e){if(null==e)return null;if("string"===typeof e){return Vi({className:e in Wi?Wi[e]:e,config:{}})}return e instanceof Pi?e:Vi(e)}class Hi extends Ws{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Cs(e);let n=Object(a.cf)(e);return null!=this.maxValue&&(n=Object(a.Nd)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Hi.className="ReLU",a.if.registerClass(Hi);class qi extends Ws{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Cs(e);return Object(a.we)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}qi.className="LeakyReLU",a.if.registerClass(qi);class Ki extends Ws{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ts(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Gi(e.alphaRegularizer),this.alphaConstraint=oo(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new Qr("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(e.sharedAxes));this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=As(e)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new Ds({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Cs(e),Object(a.We)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ns(this.alphaInitializer),alphaRegularizer:Ui(this.alphaRegularizer),alphaConstraint:ao(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Ki.className="PReLU",a.if.registerClass(Ki);class Xi extends Ws{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Zr("Non-default alpha value (".concat(e.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Cs(e);return Object(a.fe)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Xi.className="ELU",a.if.registerClass(Xi);class Yi extends Ws{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Cs(e);return Object(a.Ne)(n,Object(a.Md)(Object(a.qe)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Yi.className="ThresholdedReLU",a.if.registerClass(Yi);class Qi extends Ws{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Ai).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return Object(a.Ff)(()=>{let n=Cs(e);const r=t.mask;if(null!=r){const e=Object(a.Ne)(Object(a.xf)(Object(a.Se)(n.shape),Object(a.Md)(r,n.dtype)),Object(a.ff)(-1e9));n=Object(a.xd)(n,e)}return this.axis instanceof Array?this.axis.length>1?Object(a.je)(Object(a.xf)(n,Object(a.Be)(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Zi(e,t,n){if("number"===typeof e)return ea(e,t);if(e.length!==t)throw new Qr("The ".concat(n," argument must be an integer or tuple of ").concat(t," integers.")+" Received: ".concat(e.length," elements."));for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new Qr("The ".concat(n," argument must be an integer or tuple of ").concat(t)+" integers. Received: ".concat(JSON.stringify(e)," including a")+" non-integer number ".concat(s))}return e;var r}function Ji(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1;if(null==e)return e;const s=t+(t-1)*(a-1);let o;return o="same"===n?e:e-s+1,Math.floor((o+r-1)/r)}function $i(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Pa([n-t,0]);else{if("same"!==r)throw new Qr("Unsupport padding mode: ".concat(r,"."));e*=t}return e}function ec(e,t){return Object(a.Ff)(()=>(ja(t),"channelsFirst"===t?a.If(e,[0,2,3,1]):e))}function tc(e,t){return Object(a.Ff)(()=>(ja(t),"channelsFirst"===t?a.If(e,[0,2,3,4,1]):e))}function nc(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return Object(a.Ff)(()=>{if(null==o&&(o="channelsLast"),ja(o),3!==e.shape.length)throw new Qr("The input of a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead."));if(3!==t.shape.length)throw new Qr("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new Qr("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(t.shape.length," instead"));if("channelsFirst"===o&&(e=a.If(e,[0,2,1])),"causal"===s)throw new Zr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let c=a.Ud(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(c=rs(c,n)),c})}function rc(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,c=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return Object(a.Ff)(()=>{if(null==o&&(o="channelsLast"),ja(o),3!==e.rank&&4!==e.rank)throw new Qr("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));if(3!==t.rank&&4!==t.rank)throw new Qr("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));let u=ec(e,o);if("causal"===s)throw new Zr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=a.oe.conv2d({x:u,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:c}),"channelsFirst"===o&&(u=a.If(u,[0,3,1,2])),u})}function ac(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;return Object(a.Ff)(()=>{if(null==o&&(o="channelsLast"),ja(o),4!==e.rank&&5!==e.rank)throw new Qr("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(e.rank,"."));if(4!==t.rank&&5!==t.rank)throw new Qr("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(e.rank,"."));let c=tc(e,o);if("causal"===s)throw new Zr("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return c=a.Xd(c,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(c=rs(c,n)),"channelsFirst"===o&&(c=a.If(c,[0,4,1,2,3])),c})}Qi.className="Softmax",a.if.registerClass(Qi);class sc extends Ws{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",sc.verifyArgs(t),this.rank=e,ga(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Zr("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=Zi(t.kernelSize,e,"kernelSize"),this.strides=Zi(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Ea(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,ja(this.dataFormat),this.activation=Li(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Ts(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=oo(t.biasConstraint),this.biasRegularizer=Gi(t.biasRegularizer),this.activityRegularizer=Gi(t.activityRegularizer),this.dilationRate=Zi(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Qr("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Qr("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Qr("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(e){if(ta("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!ma(e.kernelSize,"number",1,3))throw new Qr("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(e.kernelSize),"."))}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Mi(this.activation),useBias:this.useBias,biasInitializer:Ns(this.biasInitializer),biasRegularizer:Ui(this.biasRegularizer),activityRegularizer:Ui(this.activityRegularizer),biasConstraint:ao(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class oc extends sc{constructor(e,t){super(e,t),this.kernel=null,oc.verifyArgs(t),this.filters=t.filters,ga(this.filters,"filters"),this.kernelInitializer=Ts(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=oo(t.kernelConstraint),this.kernelRegularizer=Gi(t.kernelRegularizer)}build(e){e=As(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Qr("The channel dimension of the input should be defined. "+"Found ".concat(e[t]));const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Object(a.Ff)(()=>{let t;e=Cs(e);const n=null==this.bias?null:this.bias.read(),r=ba(this.activation.getClassName());if(null!=r&&2===this.rank)t=rc(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=nc(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=rc(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Zr("convolutions greater than 3D are not implemented yet.");t=ac(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=As(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<n.length;++a){const e=Ji(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Ns(this.kernelInitializer),kernelRegularizer:Ui(this.kernelRegularizer),kernelConstraint:ao(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new Qr("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(e.filters)))}}class ic extends oc{constructor(e){super(2,e),ic.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!ma(e.kernelSize,"number",1,2))throw new Qr("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(e.kernelSize),"."))}}ic.className="Conv2D",a.if.registerClass(ic);class cc extends oc{constructor(e){super(3,e),cc.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Qr("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(e.kernelSize),"."))}}cc.className="Conv3D",a.if.registerClass(cc);class uc extends ic{constructor(e){if(super(e),this.inputSpec=[new Ds({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Qr("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(4!==(e=As(e)).length)throw new Qr("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Qr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ds({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return a.Ff(()=>{let t=Cs(e);if(4!==t.shape.length)throw new Qr("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,r=n[0];let s,o;"channelsFirst"===this.dataFormat?(s=2,o=3):(s=1,o=2);const i=n[s],c=n[o],u=this.kernelSize[0],l=this.kernelSize[1],d=this.strides[0],h=this.strides[1],p=[r,$i(i,d,u,this.padding),$i(c,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=a.If(t,[0,2,3,1]));let f=a.Wd(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=a.If(f,[0,3,1,2])),null!=this.bias&&(f=rs(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f})}computeOutputShape(e){const t=(e=As(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return t[n]=this.filters,t[r]=$i(t[r],i,s,this.padding),t[a]=$i(t[a],c,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}uc.className="Conv2DTranspose",a.if.registerClass(uc);class lc extends cc{constructor(e){if(super(e),this.inputSpec=[new Ds({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Qr("Conv3DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(5!==(e=As(e)).length)throw new Qr("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Qr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ds({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return a.Ff(()=>{let t=Cs(e);if(5!==t.shape.length)throw new Qr("Conv3DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,r=n[0];let s,o,i;"channelsFirst"===this.dataFormat?(i=2,s=3,o=4):(i=1,s=2,o=3);const c=n[i],u=n[s],l=n[o],d=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],b=[r,$i(c,f,d,this.padding),$i(u,m,h,this.padding),$i(l,g,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=a.If(t,[0,2,3,4,1]));let y=a.Yd(t,this.kernel.read(),b,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=a.If(y,[0,4,1,2,3])),null!==this.bias&&(y=rs(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y})}computeOutputShape(e){const t=(e=As(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const o=this.kernelSize[0],i=this.kernelSize[1],c=this.kernelSize[2],u=this.strides[0],l=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=$i(t[r],u,o,this.padding),t[a]=$i(t[a],l,i,this.padding),t[s]=$i(t[s],d,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}lc.className="Conv3DTranspose",a.if.registerClass(lc);class dc extends oc{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Qr("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Qr("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Qr("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(t.padding)));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Ts(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Gi(t.depthwiseRegularizer),this.depthwiseConstraint=oo(t.depthwiseConstraint),this.pointwiseInitializer=Ts(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Gi(t.pointwiseRegularizer),this.pointwiseConstraint=oo(t.pointwiseConstraint)}build(e){if((e=As(e)).length<this.rank+2)throw new Qr("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(e)));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Qr("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(e[t])));const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let s=0;s<this.rank;++s)a.push(1);a.push(n*this.depthMultiplier,this.filters);this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,!0,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.inputSpec=[new Ds({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Object(a.Ff)(()=>{let t;if(e=Cs(e),1===this.rank)throw new Zr("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=a.If(e,[0,2,3,1])),t=a.hf(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=rs(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=a.If(t,[0,3,1,2])),t})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ns(this.depthwiseInitializer),e.pointwiseInitializer=Ns(this.pointwiseInitializer),e.depthwiseRegularizer=Ui(this.depthwiseRegularizer),e.pointwiseRegularizer=Ui(this.pointwiseRegularizer),e.depthwiseConstraint=ao(this.depthwiseConstraint),e.pointwiseConstraint=ao(this.pointwiseConstraint),e}}dc.className="SeparableConv";class hc extends dc{constructor(e){super(2,e)}}hc.className="SeparableConv2D",a.if.registerClass(hc);class pc extends oc{constructor(e){super(1,e),pc.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!ma(e.kernelSize,"number",1,1))throw new Qr("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(e.kernelSize),"."))}}pc.className="Conv1D",a.if.registerClass(pc);class fc extends Ws{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Object(a.Ff)(()=>{if(e=Cs(e),"channelsLast"===this.dataFormat){const t=Xa(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Xa(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Xa(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Xa(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}fc.className="Cropping2D",a.if.registerClass(fc);class mc extends Ws{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ja(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,fa(ka,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return a.Ff(()=>{let t=Cs(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=a.If(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?a.se.resizeNearestNeighbor(t,[e,r]):a.se.resizeBilinear(t,[e,r]);return a.If(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?a.se.resizeNearestNeighbor(t,[e,r]):a.se.resizeBilinear(t,[e,r])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}mc.className="UpSampling2D",a.if.registerClass(mc);class gc extends sc{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Ts(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=oo(e.depthwiseConstraint),this.depthwiseRegularizer=Gi(e.depthwiseRegularizer)}build(e){if((e=As(e)).length<4)throw new Qr("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(e),"."));const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Qr("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(e[t],")."));const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(a.Ff)(()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",s=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0;return Object(a.Ff)(()=>{null==s&&(s="channelsLast"),ja(s);let i=ec(e,s);if(4!==e.rank)throw new Qr("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));if(4!==t.rank)throw new Qr("depthwiseKernel is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));return i=a.ae(i,t,n,"same"===r?"same":"valid","NHWC",o),"channelsFirst"===s&&(i=a.If(i,[0,3,1,2])),i})}(e=Cs(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=rs(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=As(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Ji(t,this.kernelSize[0],this.padding,this.strides[0]),s=Ji(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ns(this.depthwiseInitializer),e.depthwiseRegularizer=Ui(this.depthwiseRegularizer),e.depthwiseConstraint=ao(this.depthwiseRegularizer),e}}function bc(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Qr("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function yc(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return a.Ff(()=>{const u=t.shape.length;if(u<3)throw new Qr("Input should be at least 3D, but is ".concat(u,"D."));const l=[1,0].concat(Ba(2,u));if(t=a.If(t,l),null!=o)throw new Zr("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&(s=a.Md(a.Md(s,"bool"),"float32"),s.rank===u-1&&(s=a.ke(s,-1)),s=a.If(s,l)),r&&(t=a.ef(t,0),null!=s&&(s=a.ef(s,0)));const d=[];let h,p=n;const f=t.shape[0],m=a.Kf(t);let g,b;null!=s&&(g=a.Kf(s));for(let t=0;t<f;++t){const n=m[t],r=a.Ff(()=>e(n,p));if(null==s)h=r[0],p=r[1];else{const e=a.Ff(()=>{const e=g[t],n=a.xf(a.Te(e),e);return{output:a.xd(a.Ne(r[0],e),a.Ne(p[0],n)),newStates:p.map((t,s)=>a.xd(a.Ne(r[1][s],e),a.Ne(t,n)))}});h=e.output,p=e.newStates}c&&d.push(h)}if(c){const e=1;b=a.wf(d,e)}return[h,b,p]})}gc.className="DepthwiseConv2D",a.if.registerClass(gc);class vc extends Ws{constructor(e){let t;if(super(e),null==e.cell)throw new Qr("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Tc({cells:e.cell}):e.cell,null==t.stateSize)throw new Qr("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ds({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Ba(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null)}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){js(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return a.Ff(()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map(e=>null);return[e].concat(t)}return e})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Zr("Constants support is not implemented in RNN yet.");js(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Ds({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!a.Mf.arraysEqual(this.stateSpec.map(e=>e.shape[e.shape.length-1]),s))throw new Qr("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=s.map(e=>new Ds({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Object(a.Ff)(()=>{if(!this.stateful)throw new Xr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Qr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>a.Rf([n,e])):this.states_=[a.Rf([n,this.cell.stateSize])];else if(null==e)a.ce(this.states_),null!=this.keptStates&&(a.ce(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>a.Rf([n,e])):this.states_[0]=a.Rf([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Qr("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));!0===t?this.keptStates.push(this.states_.slice()):a.ce(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,o=[n,s];if(!a.Mf.arraysEqual(r.shape,o))throw new Qr("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(o,", received shape=").concat(r.shape));this.states_[t]=r}}this.states_=this.states_.map(e=>a.ue(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=bc(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],o=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Ds({shape:e.shape}));o=o.concat(this.stateSpec)}null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length);if(s[0]instanceof Ls){const n=[e].concat(s),r=this.inputSpec.concat(o),a=this.inputSpec;this.inputSpec=r;const i=super.apply(n,t);return this.inputSpec=a,i}return super.apply(e,t)}call(e,t){return Object(a.Ff)(()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=Cs(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new Qr("RNN Layer has ".concat(s," state(s) but was passed ")+"".concat(a.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:r},i=yc((e,t)=>{const n=this.cell.call([e].concat(t),o);return[n[0],n.slice(1)]},e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),c=i[0],u=i[1],l=i[2];this.stateful&&this.resetStates(l,r);const d=this.returnSequences?u:c;return this.returnState?[d].concat(l):d})}getInitialState(e){return Object(a.Ff)(()=>{let t=a.Rf(e.shape);return t=a.yf(t,[1,2]),t=Ga(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?Za(t,[1,e]):t):this.cell.stateSize>1?[Za(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===vc.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=vo(t.cell,n);return new e(Object.assign(t,{cell:r}))}}vc.className="RNN",a.if.registerClass(vc);class xc extends Ws{}class wc extends xc{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ga(this.units,"units"),this.activation=Li(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ts(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ts(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ts(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Gi(e.kernelRegularizer),this.recurrentRegularizer=Gi(e.recurrentRegularizer),this.biasRegularizer=Gi(e.biasRegularizer),this.kernelConstraint=oo(e.kernelConstraint),this.recurrentConstraint=oo(e.recurrentConstraint),this.biasConstraint=oo(e.biasConstraint),this.dropout=za([1,Pa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=za([1,Pa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=As(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(a.Ff)(()=>{if(2!==(e=e).length)throw new Qr("SimpleRNNCell expects 2 input Tensors, got ".concat(e.length,"."));let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=jc({ones:()=>a.Te(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=jc({ones:()=>a.Te(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=this.recurrentDropoutMask;s=$a(null!=o?a.Ne(e,o):e,this.kernel.read()),null!=this.bias&&(s=rs(s,this.bias.read())),null!=i&&(n=a.Ne(n,i));let c=a.xd(s,$a(n,this.recurrentKernel.read()));return null!=this.activation&&(c=this.activation.apply(c)),[c,c]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Mi(this.activation),useBias:this.useBias,kernelInitializer:Ns(this.kernelInitializer),recurrentInitializer:Ns(this.recurrentInitializer),biasInitializer:Ns(this.biasInitializer),kernelRegularizer:Ui(this.kernelRegularizer),recurrentRegularizer:Ui(this.recurrentRegularizer),biasRegularizer:Ui(this.biasRegularizer),activityRegularizer:Ui(this.activityRegularizer),kernelConstraint:ao(this.kernelConstraint),recurrentConstraint:ao(this.recurrentConstraint),biasConstraint:ao(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}wc.className="SimpleRNNCell",a.if.registerClass(wc);class Oc extends vc{constructor(e){e.cell=new wc(e),super(e)}call(e,t){return Object(a.Ff)(()=>{null!=this.cell.dropoutMask&&(a.ce(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return new e(t)}}Oc.className="SimpleRNN",a.if.registerClass(Oc);class kc extends xc{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Qr("GRUCell does not support reset_after parameter set to true.");this.units=e.units,ga(this.units,"units"),this.activation=Li(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Li(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ts(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ts(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ts(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Gi(e.kernelRegularizer),this.recurrentRegularizer=Gi(e.recurrentRegularizer),this.biasRegularizer=Gi(e.biasRegularizer),this.kernelConstraint=oo(e.kernelConstraint),this.recurrentConstraint=oo(e.recurrentConstraint),this.biasConstraint=oo(e.biasConstraint),this.dropout=za([1,Pa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=za([1,Pa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=As(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(a.Ff)(()=>{if(2!==(e=e).length)throw new Qr("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=jc({ones:()=>a.Te(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=jc({ones:()=>a.Te(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;let i,c,u;0<this.dropout&&this.dropout<1&&(e=a.Ne(e,s[0]));let l=$a(e,this.kernel.read());this.useBias&&(l=rs(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=a.Ne(r,o[0]));const d=this.recurrentKernel.read(),[h,p]=a.tf(d,[2*this.units,this.units],d.rank-1),f=$a(r,h),[m,g,b]=a.tf(l,3,l.rank-1),[y,v]=a.tf(f,2,f.rank-1);i=this.recurrentActivation.apply(a.xd(m,y)),c=this.recurrentActivation.apply(a.xd(g,v));const x=$a(a.Ne(c,r),p);u=this.activation.apply(a.xd(b,x));const w=a.xd(a.Ne(i,r),a.Ne(a.xd(1,a.Oe(i)),u));return[w,w]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Mi(this.activation),recurrentActivation:Mi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ns(this.kernelInitializer),recurrentInitializer:Ns(this.recurrentInitializer),biasInitializer:Ns(this.biasInitializer),kernelRegularizer:Ui(this.kernelRegularizer),recurrentRegularizer:Ui(this.recurrentRegularizer),biasRegularizer:Ui(this.biasRegularizer),activityRegularizer:Ui(this.activityRegularizer),kernelConstraint:ao(this.kernelConstraint),recurrentConstraint:ao(this.recurrentConstraint),biasConstraint:ao(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}kc.className="GRUCell",a.if.registerClass(kc);class Sc extends vc{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new kc(e),super(e)}call(e,t){return Object(a.Ff)(()=>{null!=this.cell.dropoutMask&&(a.ce(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Sc.className="GRU",a.if.registerClass(Sc);class Ic extends xc{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ga(this.units,"units"),this.activation=Li(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Li(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ts(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ts(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ts(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Gi(e.kernelRegularizer),this.recurrentRegularizer=Gi(e.recurrentRegularizer),this.biasRegularizer=Gi(e.biasRegularizer),this.kernelConstraint=oo(e.kernelConstraint),this.recurrentConstraint=oo(e.recurrentConstraint),this.biasConstraint=oo(e.biasConstraint),this.dropout=za([1,Pa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=za([1,Pa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=As(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends cs{apply(t,r){const a=e.apply([n]),s=(new ls).apply([n]),o=e.apply([2*n]);return Qa(Qa(a,s),o)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Object(a.Ff)(()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new Qr("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=jc({ones:()=>a.Te(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=jc({ones:()=>a.Te(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=this.recurrentDropoutMask;let c,u,l,d;0<this.dropout&&this.dropout<1&&(e=a.Ne(e,o[0]));let h=$a(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=a.Ne(r,i[0])),h=a.xd(h,$a(r,this.recurrentKernel.read())),this.useBias&&(h=rs(h,this.bias.read()));const[p,f,m,g]=a.tf(h,4,h.rank-1);c=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(f),l=a.xd(a.Ne(u,s),a.Ne(c,this.activation.apply(m))),d=this.recurrentActivation.apply(g);const b=a.Ne(d,this.activation.apply(l));return[b,b,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Mi(this.activation),recurrentActivation:Mi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ns(this.kernelInitializer),recurrentInitializer:Ns(this.recurrentInitializer),biasInitializer:Ns(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ui(this.kernelRegularizer),recurrentRegularizer:Ui(this.recurrentRegularizer),biasRegularizer:Ui(this.biasRegularizer),activityRegularizer:Ui(this.activityRegularizer),kernelConstraint:ao(this.kernelConstraint),recurrentConstraint:ao(this.recurrentConstraint),biasConstraint:ao(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Ic.className="LSTMCell",a.if.registerClass(Ic);class Nc extends vc{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ic(e),super(e)}call(e,t){return Object(a.Ff)(()=>{null!=this.cell.dropoutMask&&(a.ce(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Nc.className="LSTM",a.if.registerClass(Nc);class Tc extends xc{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Object(a.Ff)(()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=r[o],s=0===o?[e[0]].concat(n):[s[0]].concat(n),s=i.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)})}build(e){let t;js(e)&&(e=e[0]),e=e,this.cells.forEach((n,r)=>{Ra("RNNCell_".concat(r),()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=[];for(const a of t.cells)r.push(vo(a,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return _s(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}Ms(t)}}function jc(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:o}=e,i=()=>null!=o?o(t(),n):as(t(),n),c=()=>ss(i,t,r);if(!s||s<=1)return a.ue(c().clone());return Array(s).fill(void 0).map(c).map(e=>a.ue(e.clone()))}Tc.className="StackedRNNCells",a.if.registerClass(Tc);var Ec=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n};class Cc extends vc{constructor(e){if(e.unroll)throw new Zr("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Zr("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ds({ndim:5})]}call(e,t){return a.Ff(()=>{if(null!=this.cell.dropoutMask&&(a.ce(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Qr("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return a.Ff(()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)],o=a.Rf(s);return Array.isArray(t)?Array(t.length).fill(o):[o]})}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];a.Ff(()=>{if(!this.stateful)throw new Xr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Qr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>a.Rf(s)):this.states_=[a.Rf(s)];else if(null==e)a.ce(this.states_),null!=this.keptStates&&(a.ce(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>a.Rf(s)):this.states_[0]=a.Rf(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Qr("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));t?this.keptStates.push(this.states_.slice()):a.ce(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!a.Mf.arraysEqual(n.shape,r))throw new Qr("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(r,", received shape=").concat(n.shape));this.states_[t]=n}}this.states_=this.states_.map(e=>a.ue(e.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:o}=this.cell,i="channelsFirst"===t,c=e[i?3:2],u=e[i?4:3],l=Ji(c,r[0],a,s[0],o[0]),d=Ji(u,r[1],a,s[1],o[1]);return[...e.slice(0,2),...i?[n,l,d]:[l,d,n]]}}Cc.className="ConvRNN2D";class Ac extends Ic{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,ga(this.filters,"filters"),this.kernelSize=Zi(n,2,"kernelSize"),this.kernelSize.forEach(e=>ga(e,"kernelSize")),this.strides=Zi(r||1,2,"strides"),this.strides.forEach(e=>ga(e,"strides")),this.padding=a||"valid",Ea(this.padding),this.dataFormat=s||"channelsLast",ja(this.dataFormat),this.dilationRate=Zi(o||1,2,"dilationRate"),this.dilationRate.forEach(e=>ga(e,"dilationRate"))}build(e){var t;e=As(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Qr("The channel dimension of the input should be defined. "+"Found ".concat(e[n]));const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends cs{apply(e,t){return Ya([n.apply([r]),a.Se([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return a.Ff(()=>{if(3!==e.length)throw new Qr("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=t.training||!1,r=e[0],s=e[1],o=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=jc({ones:()=>a.Te(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,c=(e,t,n)=>t&&t[n]?a.Ne(t[n],e):e;let u=c(r,i,0),l=c(r,i,1),d=c(r,i,2),h=c(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=jc({ones:()=>a.Te(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let f=c(s,p,0),m=c(s,p,1),g=c(s,p,2),b=c(s,p,3);const[y,v,x,w]=a.tf(this.kernel.read(),4,3),[O,k,S,I]=this.useBias?a.tf(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,O,this.padding),l=this.inputConv(l,v,k,this.padding),d=this.inputConv(d,x,S,this.padding),h=this.inputConv(h,w,I,this.padding);const[N,T,j,E]=a.tf(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,N),m=this.recurrentConv(m,T),g=this.recurrentConv(g,j),b=this.recurrentConv(b,E);const C=this.recurrentActivation.apply(a.xd(u,f)),A=this.recurrentActivation.apply(a.xd(l,m)),R=a.xd(a.Ne(A,o),a.Ne(C,this.activation.apply(a.xd(d,g)))),F=a.Ne(this.recurrentActivation.apply(a.xd(h,b)),this.activation.apply(R));return[F,F,R]})}getConfig(){const e=super.getConfig(),{units:t}=e,n=Ec(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const s=a.Vd(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?rs(s,n,this.dataFormat):s}recurrentConv(e,t){return a.Vd(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Ac.className="ConvLSTM2DCell",a.if.registerClass(Ac);class Rc extends Cc{constructor(e){const t=new Ac(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}Rc.className="ConvLSTM2D",a.if.registerClass(Rc);class Fc extends Ws{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return Object(a.Ff)(()=>{this.invokeCallHook(e,t);const n=Cs(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return ss(()=>as(n,this.rate,r,this.seed),()=>n,e)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Fc.className="Dropout",a.if.registerClass(Fc);class _c extends Fc{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}_c.className="SpatialDropout1D",a.if.registerClass(_c);class Mc extends Ws{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,ga(this.units,"units"),this.activation=Li(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Ts(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ts(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=oo(e.kernelConstraint),this.biasConstraint=oo(e.biasConstraint),this.kernelRegularizer=Gi(e.kernelRegularizer),this.biasRegularizer=Gi(e.biasRegularizer),this.activityRegularizer=Gi(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=As(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=As(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Object(a.Ff)(()=>{this.invokeCallHook(e,t);const n=Cs(e),r=ba(this.activation.getClassName());let a;return null!=r?a=$a(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=$a(n,this.kernel.read()),null!=this.bias&&(a=rs(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a})}getConfig(){const e={units:this.units,activation:Mi(this.activation),useBias:this.useBias,kernelInitializer:Ns(this.kernelInitializer),biasInitializer:Ns(this.biasInitializer),kernelRegularizer:Ui(this.kernelRegularizer),biasRegularizer:Ui(this.biasRegularizer),activityRegularizer:Ui(this.activityRegularizer),kernelConstraint:ao(this.kernelConstraint),biasConstraint:ao(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Mc.className="Dense",a.if.registerClass(Mc);class Dc extends Ws{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=As(e);for(const t of e.slice(1))if(null==t)throw new Qr('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(e.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[e[0],La(e,1)]}call(e,t){return Object(a.Ff)(()=>{this.invokeCallHook(e,t);let n=Cs(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Object(a.If)(n,e)}return function(e){if(e.rank<=1)throw new Qr("batchFlatten requires a minimum rank of 2. Got rank: ".concat(e.rank,"."));const t=[e.shape[0],La(e.shape,1)];return a.df(e,t)}(n)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Dc.className="Flatten",a.if.registerClass(Dc);class Lc extends Ws{constructor(e){super(e),this.supportsMasking=!0,this.activation=Li(e.activation)}call(e,t){return Object(a.Ff)(()=>{this.invokeCallHook(e,t);const n=Cs(e);return this.activation.apply(n)})}getConfig(){const e={activation:Mi(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Lc.className="Activation",a.if.registerClass(Lc);class zc extends Ws{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Object(a.Ff)(()=>{return e=Cs(e),t=e,n=this.n,Object(a.Ff)(()=>{if(2!==t.shape.length)throw new Qr("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(t.shape.length," tensor."));return Za(Ga(t,1),[1,n,1])});var t,n})}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}zc.className="RepeatVector",a.if.registerClass(zc);class Pc extends Ws{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let i=0;i<r.length;++i){const e=r[i];if(this.isUnknown(e)){if(null!==s)throw new Qr("Can only specifiy one unknown dimension.");s=i}else a*=e}const o=La(e);if(null!==s){if(0===a||o%a!==0)throw new Qr(n);r[s]=o/a}else if(o!==a)throw new Qr(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Object(a.Ff)(()=>{this.invokeCallHook(e,t);const n=Cs(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Object(a.df)(n,s)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Pc.className="Reshape",a.if.registerClass(Pc);class Bc extends Ws{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(e.dims," instead."));const t=Ba(1,e.dims.length+1);if(!a.Mf.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ds({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=As(e)).slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return Object(a.If)(Cs(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Bc.className="Permute",a.if.registerClass(Bc);class Wc extends Ws{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Cs(e);return Object(a.zd)(Object(a.Qe)(n,this.maskValue),-1)}call(e,t){return Object(a.Ff)(()=>{this.invokeCallHook(e,t);const n=Cs(e),r=Object(a.zd)(Object(a.Qe)(n,this.maskValue),-1,!0);return Object(a.Ne)(n,Object(a.Md)(r,n.dtype))})}}Wc.className="Masking",a.if.registerClass(Wc);class Uc extends Ws{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(aa(e.inputLength))}this.inputDim=e.inputDim,ga(this.inputDim,"inputDim"),this.outputDim=e.outputDim,ga(this.outputDim,"outputDim"),this.embeddingsInitializer=Ts(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Gi(e.embeddingsRegularizer),this.activityRegularizer=Gi(e.activityRegularizer),this.embeddingsConstraint=oo(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Object(a.Ff)(()=>this.maskZero?(e=Cs(e),Object(a.Qe)(e,Object(a.Sf)(e))):null)}computeOutputShape(e){if(e=As(e),null==this.inputLength)return[...e,this.outputDim];const t=aa(this.inputLength);if(t.length!==e.length-1)throw new Qr('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new Qr('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Object(a.Ff)(()=>{this.invokeCallHook(e,t);let n=Cs(e);"int32"!==n.dtype&&(n=Va(n,"int32"));const r=es(this.embeddings.read(),Object(a.df)(n,[n.size]));return Object(a.df)(r,As(this.computeOutputShape(n.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ns(this.embeddingsInitializer),embeddingsRegularizer:Ui(this.embeddingsRegularizer),activityRegularizer:Ui(this.activityRegularizer),embeddingsConstraint:ao(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Uc.className="Embedding",a.if.registerClass(Uc);class Vc extends Ws{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Zr}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new Qr("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[As(e)]),(e=e).length<2)throw new Qr("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(e.length," input(s)."));let t=[];for(const a of e)null!=a&&null!==a[0]&&t.push(a[0]);if(t=ha(t),t.length>1)throw new Qr("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(e),"."));let n=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const t=null==e[a]?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map(e=>e.length);-1===e.indexOf(null)&&1===ha(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Object(a.Ff)(()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){const r=Pa(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Ga(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const o of e){const e=o.rank;if(null==e){const e=o.shape,r=e[0],s=e.slice(1).concat([r]);let i=a.df(o,[r].concat(La(e.slice(1))));i=a.If(i,[1,0]),i=a.df(i,s),t.push(i),n=!0}else if(e>1){const r=Ba(1,e).concat([0]);t.push(a.If(o,r)),n=!0}else t.push(o)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=a.df(a.If(a.df(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(Ba(0,s-1));r=a.If(r,e)}return r}}return this.mergeFunction(e)})}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=ha(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return a.Ff(()=>{if(null==t)return null;if(!Array.isArray(t))throw new Qr("`mask` should be an Array");if(!Array.isArray(e))throw new Qr("`inputs` should be an Array");if(t.length!==e.length)throw new Qr("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(e.length," vs ").concat(t.length,")"));if(t.every(e=>null==e))return null;let n=(t=t.map(e=>null==e?e:a.ke(e,0)))[0];for(let e=1;e<t.length-1;++e)n=a.Ce(n,t[e]);return n})}}class Gc extends Vc{constructor(e){super(e)}mergeFunction(e){return Object(a.Ff)(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=a.xd(t,e[n]);return t})}}Gc.className="Add",a.if.registerClass(Gc);class Hc extends Vc{constructor(e){super(e)}mergeFunction(e){return Object(a.Ff)(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=a.Ne(t,e[n]);return t})}}Hc.className="Multiply",a.if.registerClass(Hc);class qc extends Vc{constructor(e){super(e)}mergeFunction(e){return Object(a.Ff)(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=a.xd(t,e[n]);return a.Ne(1/e.length,t)})}}qc.className="Average",a.if.registerClass(qc);class Kc extends Vc{constructor(e){super(e)}mergeFunction(e){return Object(a.Ff)(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=a.He(t,e[n]);return t})}}Kc.className="Maximum",a.if.registerClass(Kc);class Xc extends Vc{constructor(e){super(e)}mergeFunction(e){return Object(a.Ff)(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=a.Le(t,e[n]);return t})}}Xc.className="Minimum",a.if.registerClass(Xc);class Yc extends Vc{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Qr("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let r=0;r<e.length;++r){const t=e[r].slice();t.splice(this.axis,1);let s=!1;for(const e of n)if(a.Mf.arraysEqual(e,t)){s=!0;break}s||n.push(t)}if(n.length>1)throw new Qr("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Object(a.Ff)(()=>Ya(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Qr("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const a of t.slice(1)){if(null==n[r]||null==a[r]){n[r]=null;break}n[r]+=a[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Qr("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Qr("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Qr("Mismatch in the length of mask (".concat(t.length,") ")+"and the legnth of inputs (".concat(e.length,")"));return a.Ff(()=>{let n=!0;if(t.forEach(e=>{null==e||(n=!1)}),n)return null;const r=[];for(let o=0;o<e.length;++o)null==t[o]?r.push(a.Md(a.Te(e[o]),"bool")):t[o].rank<e[o].rank?r.push(a.ke(t[o],-1)):r.push(t[o]);const s=a.Pd(r,this.axis);return a.yd(s,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Qc(e,t){for(;e<0;)e+=t;return e}Yc.className="Concatenate",a.if.registerClass(Yc);class Zc extends Vc{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){a.Mf.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Zr("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Qr("Dimension incompatibility: "+"".concat(t[r[0]]," !== ").concat(n[r[1]]))}mergeFunction(e){if(2!==e.length)throw new Qr("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(e.length," input(s)."));let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,n)=>Qc(t,e[n].shape.length)):[Qc(this.axes,n.shape.length),Qc(this.axes,r.shape.length)],this.normalize&&(n=xo(n,t[0]),r=xo(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Zr("batchDot is not implemented for tensors of 4D or higher rank yet");if(a.Mf.assert(e.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(e.shape.length)),a.Mf.assert(e.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(t.shape.length)),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Zr("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const o=n;return a.Ff(()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=a.df(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=a.df(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=o[0]===o[1]?a.yf(a.Ne(e,t),o[0]):a.yf(a.Ne(a.If(e,[1,0]),t),o[1]);else{const n=o[0]!==e.shape.length-1,r=o[1]===t.shape.length-1;i=a.De(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=a.vf(i,t)}return 1===i.shape.length&&(i=a.ke(i,1)),i})}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Qc(this.axes,e.length),Qc(this.axes,t.length)],n}computeOutputShape(e){a.Mf.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Zr("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Zc.className="Dot",a.if.registerClass(Zc);class Jc extends Ws{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Object(a.Ff)(()=>{this.invokeCallHook(e,t);const n=Cs(e);return ss(()=>Object(a.xd)(Ja(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}}Jc.className="GaussianNoise",a.if.registerClass(Jc);class $c extends Ws{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Object(a.Ff)(()=>{this.invokeCallHook(e,t);const n=Cs(e);if(this.rate>0&&this.rate<1){return ss(()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Object(a.Ne)(n,Ja(n.shape,1,e))},()=>n,t.training||!1)}return n})}}$c.className="GaussianDropout",a.if.registerClass($c);class eu extends Ws{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Cs(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Object(a.Ff)(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return ss(()=>{const t=Cs(e),r=-1.7580993408473766;let s=Object(a.re)(Object(a.Ye)(n),this.rate);s=Va(s,"float32");const o=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-o*r*this.rate,c=Object(a.xd)(Object(a.Ne)(t,s),Object(a.Ne)(Object(a.xd)(s,-1),r));return Object(a.xd)(Object(a.Ne)(c,o),i)},()=>Cs(e),t.training||!1)}return e})}}function tu(e,t,n,r,s){let o,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)o=a.Fd(e,t,n,r,s,i);else if(3===e.rank)o=a.Gd(e,t,n,r,s,i);else{if(4!==e.rank)throw new Zr("batchNormalization is not implemented for array of rank ".concat(e.rank," ")+"yet");o=a.Hd(e,t,n,r,s,i)}return o}function nu(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Object(a.Ff)(()=>{const o=a.Me(e,r),i=o.mean,c=o.variance;return[tu(e,i,c,n,t,s),i,c]})}function ru(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Object(a.Ff)(()=>{const o=a.Me(e,r),i=o.mean,c=o.variance,u=[];for(const t of Ba(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=Object(a.df)(i,u),d=Object(a.df)(c,u),h=null==t?null:Object(a.df)(t,u),p=null==n?null:Object(a.df)(n,u);return[tu(e,l,d,p,h,s),i,c]})}eu.className="AlphaDropout",a.if.registerClass(eu);class au extends Ws{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ts(e.betaInitializer||"zeros"),this.gammaInitializer=Ts(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ts(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ts(e.movingVarianceInitializer||"ones"),this.betaConstraint=oo(e.betaConstraint),this.gammaConstraint=oo(e.gammaConstraint),this.betaRegularizer=Gi(e.betaRegularizer),this.gammaRegularizer=Gi(e.gammaRegularizer)}build(e){e=As(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Qr("Axis ".concat(t," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(e),"."));this.inputSpec=[new Ds({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Object(a.Ff)(()=>{const n=null!=t.training&&t.training,r=Cs(e),s=r.shape,o=s.length,i=Ba(0,o),c=this.axis>=0?this.axis:this.axis+o;i.splice(c,1);const u=ea(1,o);u[c]=s[c];const l=i.slice();l.sort();const d=!a.Mf.arraysEqual(l,Ba(0,o).slice(0,o-1));if(!n)return(()=>{if(d){const e=Object(a.df)(this.movingMean.read(),u),t=Object(a.df)(this.movingVariance.read(),u),n=this.center?Object(a.df)(this.beta.read(),u):null,s=this.scale?Object(a.df)(this.gamma.read(),u):null;return tu(r,e,t,n,s,this.epsilon)}return tu(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,f]=function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return a.Mf.arraysEqual(r.slice().sort(),Ba(0,e.rank-1))?nu(e,t,n,r,s):ru(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(e,t,n)=>{a.Ff(()=>{const r=1-n,s=e.read(),o=a.Ne(a.xf(s,t),r);e.write(a.xf(s,o))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),h})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ns(this.betaInitializer),gammaInitializer:Ns(this.gammaInitializer),movingMeanInitializer:Ns(this.movingMeanInitializer),movingVarianceInitializer:Ns(this.movingVarianceInitializer),betaRegularizer:Ui(this.betaRegularizer),gammaRegularizer:Ui(this.gammaRegularizer),betaConstraint:ao(this.betaConstraint),gammaConstraint:ao(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}au.className="BatchNormalization",a.if.registerClass(au);class su extends Ws{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ts(e.betaInitializer||"zeros"),this.gammaInitializer=Ts(e.gammaInitializer||"ones"),this.betaRegularizer=Gi(e.betaRegularizer),this.gammaRegularizer=Gi(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=As(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error("Invalid axis: ".concat(r));if(this.axis.length!==ha(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map(t=>e[t]);this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Cs(e),r=n.shape,s=r.length;return Object(a.Ff)(()=>{let{mean:e,variance:t}=Object(a.Me)(n,this.axis,!0);const o=ea(1,s);for(const n of this.axis)o[n]=r[n];const i=e=>null!=e&&e.shape.length!==s?a.df(e,o):e;let c=this.scale?i(this.gamma.read()):null,u=this.center?i(this.beta.read()):null;const l=[],d=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(l.push(r[n]),d.push(1)):(l.push(1),d.push(r[n]));return e=a.Gf(e,l),t=a.Gf(t,l),null!=c&&(c=a.Gf(c,d)),null!=u&&(u=a.Gf(u,d)),tu(n,e,t,u,c,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ns(this.betaInitializer),gammaInitializer:Ns(this.gammaInitializer),betaRegularizer:Ui(this.betaRegularizer),gammaRegularizer:Ui(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}su.className="LayerNormalization",a.if.registerClass(su);class ou extends Ws{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Qr("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(e.padding.length," array."));let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Qr("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(e.padding[0].length," array."));if(t=e.padding[0],2!==e.padding[1].length)throw new Qr("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(e.padding[1].length," array."));n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Ds({ndim:4})]}computeOutputShape(e){let t,n;return e=As(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Object(a.Ff)(()=>{return t=Cs(e),n=this.padding,r=this.dataFormat,Object(a.Ff)(()=>{if(4!==t.rank)throw new Qr("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(t.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Qr("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Qr("Unknown data format: ".concat(r,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],a.Ue(t,e)});var t,n,r})}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function iu(e,t,n,r,s,o){return Object(a.Ff)(()=>{let i;ja(s),Ca(o),Ea(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==o&&(o="max"),e=ec(e,s);const c="same"===r?"same":"valid";return i="max"===o?a.Fe(e,t,n,c):a.Bd(e,t,n,c),"channelsFirst"===s&&(i=a.If(i,[0,3,1,2])),i})}function cu(e,t,n,r,s,o){return Object(a.Ff)(()=>{let i;ja(s),Ca(o),Ea(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==o&&(o="max"),e=tc(e,s);const c="same"===r?"same":"valid";return i="max"===o?a.Ge(e,t,n,c):a.Cd(e,t,n,c),"channelsFirst"===s&&(i=a.If(i,[0,4,1,2,3])),i})}ou.className="ZeroPadding2D",a.if.registerClass(ou);class uu extends Ws{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new Qr("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.poolSize)));this.poolSize=e.poolSize}if(ga(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new Qr("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.strides)));this.strides=e.strides}ga(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Ea(this.padding),this.inputSpec=[new Ds({ndim:3})]}computeOutputShape(e){const t=Ji((e=As(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Object(a.Ff)(()=>{this.invokeCallHook(e,t),e=Ga(Cs(e),2);const n=this.poolingFunction(Cs(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return a.vf(n,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class lu extends uu{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return ja(a),Ea(r),iu(e,t,n,r,a,"max")}}lu.className="MaxPooling1D",a.if.registerClass(lu);class du extends uu{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return ja(a),Ea(r),iu(e,t,n,r,a,"avg")}}du.className="AveragePooling1D",a.if.registerClass(du);class hu extends Ws{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Qr("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides];ga(this.poolSize,"poolSize"),ga(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ja(this.dataFormat),Ea(this.padding),this.inputSpec=[new Ds({ndim:4})]}computeOutputShape(e){e=As(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Ji(t,this.poolSize[0],this.padding,this.strides[0]),n=Ji(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Object(a.Ff)(()=>(this.invokeCallHook(e,t),this.poolingFunction(Cs(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class pu extends hu{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return ja(a),Ea(r),iu(e,t,n,r,a,"max")}}pu.className="MaxPooling2D",a.if.registerClass(pu);class fu extends hu{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return ja(a),Ea(r),iu(e,t,n,r,a,"avg")}}fu.className="AveragePooling2D",a.if.registerClass(fu);class mu extends Ws{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Qr("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];ga(this.poolSize,"poolSize"),ga(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ja(this.dataFormat),Ea(this.padding),this.inputSpec=[new Ds({ndim:5})]}computeOutputShape(e){e=As(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Ji(t,this.poolSize[0],this.padding,this.strides[0]),n=Ji(n,this.poolSize[1],this.padding,this.strides[1]),r=Ji(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Object(a.Ff)(()=>(this.invokeCallHook(e,t),this.poolingFunction(Cs(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class gu extends mu{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return ja(a),Ea(r),cu(e,t,n,r,a,"max")}}gu.className="MaxPooling3D",a.if.registerClass(gu);class bu extends mu{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return ja(a),Ea(r),cu(e,t,n,r,a,"avg")}}bu.className="AveragePooling3D",a.if.registerClass(bu);class yu extends Ws{constructor(e){super(e),this.inputSpec=[new Ds({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Zr}}class vu extends yu{constructor(e){super(e||{})}call(e,t){return Object(a.Ff)(()=>{const t=Cs(e);return a.Ie(t,1)})}}vu.className="GlobalAveragePooling1D",a.if.registerClass(vu);class xu extends yu{constructor(e){super(e||{})}call(e,t){return Object(a.Ff)(()=>{const t=Cs(e);return a.Ee(t,1)})}}xu.className="GlobalMaxPooling1D",a.if.registerClass(xu);class wu extends Ws{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ja(this.dataFormat),this.inputSpec=[new Ds({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Zr}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ou extends wu{call(e,t){return Object(a.Ff)(()=>{const t=Cs(e);return"channelsLast"===this.dataFormat?a.Ie(t,[1,2]):a.Ie(t,[2,3])})}}Ou.className="GlobalAveragePooling2D",a.if.registerClass(Ou);class ku extends wu{call(e,t){return Object(a.Ff)(()=>{const t=Cs(e);return"channelsLast"===this.dataFormat?a.Ee(t,[1,2]):a.Ee(t,[2,3])})}}ku.className="GlobalMaxPooling2D",a.if.registerClass(ku);class Su extends Ws{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=vo(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class Iu extends Su{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=As(e)).length<3)throw new Qr("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(e)));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=As(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Object(a.Ff)(()=>yc((e,n)=>[Cs(this.layer.call(e,t)),[]],e=Cs(e),[],!1,null,null,!1,!0)[1])}}Iu.className="TimeDistributed",a.if.registerClass(Iu);class Nu extends Su{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=vo(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=vo(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,fa(Na,"BidirectionalMergeMode",a),e.weights)throw new Zr("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):ra(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=bc(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],o=[];if(null!=n){const e=n.length;if(e%2>0)throw new Qr("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map(e=>new Ds({shape:e.shape}));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),o.push(...r)}if(null!=r)throw new Zr("Support for constants in Bidirectional layers is not implemented yet.");const i=s[0]instanceof Ls;for(const c of s)if(c instanceof Ls!==i)throw new Qr("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(s),r=this.inputSpec.concat(o),a=this.inputSpec;this.inputSpec=r;const i=super.apply(n,t);return this.inputSpec=a,i}return super.apply(e,t)}call(e,t){return Object(a.Ff)(()=>{const n=t.initialState;let r,s,o,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),o=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:o}))}return this.returnState&&(Array.isArray(r)&&(o=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=a.ef(s,1)),"concat"===this.mergeMode?i=Ya([r,s]):"sum"===this.mergeMode?i=a.xd(r,s):"ave"===this.mergeMode?i=a.Ne(.5,a.xd(r,s)):"mul"===this.mergeMode?i=a.Ne(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(o):[i].concat(o):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ra(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Ra(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=vo(t.layer);if(delete t.layer,null!=t.numConstants)throw new Zr("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}Nu.className="Bidirectional",a.if.registerClass(Nu);class Tu extends Ws{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Object(a.Ff)(()=>("float32"!==(e=Cs(e)).dtype&&(e=Va(e,"float32")),Object(a.xd)(Object(a.Ne)(e,this.scale),this.offset)))}}Tu.className="Rescaling",a.if.registerClass(Tu);const{resizeBilinear:ju,cropAndResize:Eu}=a.se;class Cu extends Ws{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,s,o,i,c){return Object(a.Ff)(()=>{let u,l=!1;const d=[t/o,n/i,(r+t)/o,(s+n)/i],h=[];3===e.rank?(l=!0,u=Object(a.wf)([e])):u=e;for(let e=0;e<u.shape[0];e++)h.push(d);const p=Object(a.Bf)(h,[h.length,4]),f=Object(a.Ze)(0,h.length,1,"int32"),m=Eu(u,p,f,[r,s],"nearest");return Va(l?Cs(Object(a.Kf)(m)):m,c)})}upsize(e,t,n,r){return Object(a.Ff)(()=>Va(ju(e,[t,n]),r))}call(e,t){return Object(a.Ff)(()=>{const t=Cs(e),n=t.dtype,r=t.shape,a=r[r.length-3],s=r[r.length-2];let o=0;a!==this.height&&(o=Math.floor((a-this.height)/2));let i=0;return s!==this.width&&(i=Math.floor((s-this.width)/2),0===i&&(i=1)),o>=0&&i>=0?this.centerCrop(t,o,i,this.height,this.width,a,s,n):this.upsize(e,this.height,this.width,n)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=As(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}Cu.className="CenterCrop",a.if.registerClass(Cu);class Au extends Ws{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=As(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Object(a.Ff)(()=>{let n;if("int32"!==(e=Cs(e)).dtype&&(e=Va(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new Qr("countWeights is not used when outputMode !== count.\n              Received countWeights=".concat(t.countWeights));n=Cs(t.countWeights)}const r=Object(a.Ee)(e),s=Object(a.Ke)(e),o=Object(a.qe)(this.numTokens,r).bufferSync().get(0),i=Object(a.re)(s,0).bufferSync().get(0);if(!o||!i)throw new Qr("Input values must be between 0 < values <="+" numTokens with numTokens=".concat(this.numTokens));return function(e,t,n,r){let s=Cs(e);if("int32"!==s.dtype&&(s=Va(s,"int32")),"int"===t)return s;const o=s.shape;if(0===s.rank&&(s=Object(a.ke)(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=Object(a.ke)(s,-1)),s.rank>2)throw new Qr("When outputMode is not int, maximum output rank is 2"+" Received outputMode ".concat(t," and input shape ").concat(o)+" which would result in output rank ".concat(s.rank,"."));const i=["multiHot","oneHot"].includes(t),c=s;let u;if(u="undefined"!==typeof r&&"count"===t?Object(a.Zd)(c,r,n,i):Object(a.Zd)(c,[],n,i),"tfIdf"!==t)return u;if(r)return Object(a.Ne)(u,r);throw new Qr("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)})}}Au.className="CategoryEncoding",a.if.registerClass(Au);const Ru=new Set(["bilinear","nearest"]);class Fu extends Ws{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Ru.has(e.interpolation))throw new Qr("Invalid interpolation parameter: ".concat(e.interpolation," is not implemented"));this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=As(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Object(a.Ff)(()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return a.se.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return a.se.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error("Interpolation is ".concat(this.interpolation," but only ").concat([...Ru]," are supported"))})}}Fu.className="Resizing",a.if.registerClass(Fu);class _u{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}_u.className="RandomSeed";class Mu extends Ws{constructor(e){super(e),this.randomGenerator=new _u(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}Mu.className="BaseRandomLayer";const Du=new Set(["bilinear","nearest"]);class Lu extends Mu{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Qr("Invalid factor: ".concat(this.factor,". Must be positive number or tuple of 2 numbers"));this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Qr("factor must have values larger than -1. Got: ".concat(this.factor));if(this.widthUpper<this.widthLower)throw new Qr("factor cannot have upper bound less than lower bound.\n        Got upper bound: ".concat(this.widthUpper,".\n        Got lower bound: ").concat(this.widthLower,"\n      "));if(n){if(!Du.has(n))throw new Qr("Invalid interpolation parameter: ".concat(n," is not implemented"));this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=As(e))[2];return[this.imgHeight,-1,t]}call(e,t){return Object(a.Ff)(()=>{const t=Cs(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=Object(a.Ye)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const s=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return a.se.resizeBilinear(e,s);case"nearest":return a.se.resizeNearestNeighbor(e,s);default:throw new Error("Interpolation is ".concat(this.interpolation,"\n          but only ").concat([...Du]," are supported"))}})}}Lu.className="RandomWidth",a.if.registerClass(Lu);var zu=n(131),Pu=n(79),Bu=n(41),Wu=n(68);class Uu{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let r;return a.Mf.assert(e>0,()=>"batchSize needs to be positive, but it is\n      ".concat(e)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Vu(async()=>(await n.iterator()).columnMajorBatch(e,t,Gu),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Vu(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Vu(async()=>(await t.iterator()).filter(t=>a.Ff(()=>e(t))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Vu(async()=>(await t.iterator()).map(t=>a.Ff(()=>e(t))),this.size)}mapAsync(e){const t=this;return Vu(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Vu(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Vu(async()=>{const n=Object(Bu.e)(async()=>({value:await t.iterator(),done:!1}));return Object(Bu.d)(n.take(e))},n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Vu(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const r=this,s=Pu.alea(t||a.Mf.now().toString());return Vu(async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())},this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Vu(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Vu(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends Uu{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Gu(e){if(null===e)return null;const t=e[0];if(Object(Wu.a)(t)){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof a.kd?a.wf(e):a.Bf(e)}(e),recurse:!1}}return{value:null,recurse:!0}}Uu.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");Bu.a;Bu.a;var Hu=n(231);Hu.a;function qu(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&a.Mf.assert("complex64"!==e.dtype,()=>"".concat(t," does not support complex64 tensors in the CPU backend."))})}const Ku=a.ve.whereImpl;class Xu extends a.Ab{nextDataId(){return Xu.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new a.O(this,Object(a.ge)())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Object(a.he)().get("IS_NODE")&&a.Ed.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&a.Mf.isString(n[0])){const s=n.map(e=>a.Mf.encodeString(e));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return a.Ed.mergeRealAndImagArrays(e,t)}return a.Mf.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map(e=>a.Mf.decodeString(e));return Object(a.Ld)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(a.Ld)(e.shape,e.dtype,t)}makeOutput(e,t,n){return Object(a.ge)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=a.Mf.now();e();return{kernelMs:a.Mf.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){qu([e],"where");const t=this.readSync(e.dataId);return Ku(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Xu.nextDataId=0;function Yu(e){return(t,n,r)=>{const s=a.Mf.getArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)s[a]=e(t[a],r);return s}}function Qu(e,t,n){return Zu(e,Yu(t),n)}function Zu(e,t,n){return r=>{let{inputs:s,attrs:o,backend:i}=r;const{x:c}=s;qu(c,e);const u=i,l=u.data.get(c.dataId).values;let d;if("string"===c.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");d=a.Ed.fromUint8ToStringArray(l)}else d=l;const h=n||c.dtype,p=t(d,h,o);return u.makeTensorInfo(c.shape,h,p)}}Object(a.af)("cpu",()=>new Xu,1);const Ju=Qu(a.ab,e=>e>=0?e:Math.exp(e)-1),$u={kernelName:a.ab,backendName:"cpu",kernelFunc:Ju};function el(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const tl={kernelName:a.vb,backendName:"cpu",kernelFunc:el};function nl(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:o}=r;qu([s],"leakyRelu");const i=a.Mf.sizeFromShape(s.shape),c=n.data.get(s.dataId).values,u=a.Mf.getTypedArrayFromDType("float32",i);for(let a=0;a<c.length;a++)u[a]=c[a]<0?o*c[a]:c[a];return n.makeTensorInfo(s.shape,"float32",u)}const rl={kernelName:a.Db,backendName:"cpu",kernelFunc:nl};function al(e){return(t,n,r,s,o)=>{const i=a.Ed.assertAndGetBroadcastShape(t,n),c=i.length,u=a.Mf.computeStrides(i),l=a.Mf.sizeFromShape(i),d=a.Mf.getTypedArrayFromDType(o,l),h=t.length,p=n.length,f=a.Mf.computeStrides(t),m=a.Mf.computeStrides(n),g=a.Ed.getBroadcastDims(t,i),b=a.Ed.getBroadcastDims(n,i);if(g.length+b.length===0)for(let a=0;a<d.length;++a)d[a]=e(r[a%r.length],s[a%s.length]);else for(let y=0;y<d.length;++y){const t=a.Mf.indexToLoc(y,c,u),n=t.slice(-h);g.forEach(e=>n[e]=0);const o=a.Mf.locToIndex(n,h,f),i=t.slice(-p);b.forEach(e=>i[e]=0);const l=a.Mf.locToIndex(i,p,m);d[y]=e(r[o],s[l])}return[d,i]}}const sl=al((e,t)=>e<0?t*e:e);function ol(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;qu([r,a],"prelu");const s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,[i,c]=sl(r.shape,a.shape,s,o,"float32");return n.makeTensorInfo(c,"float32",i)}const il={kernelName:a.lc,backendName:"cpu",kernelFunc:ol},cl=Qu(a.uc,e=>Math.max(0,e)),ul={kernelName:a.uc,backendName:"cpu",kernelFunc:cl},ll=Qu(a.vc,e=>Math.min(Math.max(0,e),6)),dl={kernelName:a.vc,backendName:"cpu",kernelFunc:ll},hl=Yu(e=>1/(1+Math.exp(-e))),pl=Qu(a.Jc,e=>1/(1+Math.exp(-e))),fl={kernelName:a.Jc,backendName:"cpu",kernelFunc:pl};function ml(e,t,n,r,a){if("linear"===n)return el({inputs:{x:t},backend:e});if("relu"===n)return cl({inputs:{x:t},backend:e});if("elu"===n)return Ju({inputs:{x:t},backend:e});if("relu6"===n)return ll({inputs:{x:t},backend:e});if("prelu"===n)return ol({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return nl({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return pl({inputs:{x:t},backend:e});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}function gl(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",o)},i}const bl={kernelName:a.A,backendName:"cpu",kernelFunc:gl};function yl(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return gl({inputs:{real:yl(e,t,"float32"),imag:yl(e,t,"float32")},backend:e})}const r=a.Mf.makeZerosTypedArray(a.Mf.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function vl(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const xl={kernelName:a.rc,backendName:"cpu",kernelFunc:vl};function wl(e,t,n,r){if("int32"===r){return[t,"int32",Int32Array.from(e)]}if("bool"===r){const r=a.Mf.toTypedArray([0],n),[s,o]=al((e,t)=>e!==t?1:0)(t,[],e,r,"bool");return[o,"bool",s]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(r))}function Ol(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:o}=r;if("complex64"===o){if("complex64"===s.dtype)return el({inputs:{x:s},backend:n});const e=yl(n,s.shape,s.dtype),t=Ol({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=gl({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=vl({inputs:{input:s},backend:n}),t=Ol({inputs:{x:e},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(e),t}if(!a.Mf.hasEncodingLoss(s.dtype,o)){const e=el({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:o}}const i=n.data.get(s.dataId).values,[c,u,l]=wl(i,s.shape,s.dtype,o);return n.makeTensorInfo(c,u,l)}const kl={kernelName:a.x,backendName:"cpu",kernelFunc:Ol};function Sl(e,t,n,r){return null==n?n=>{let{inputs:s,backend:o}=n;const{a:i,b:c}=s,u=o;qu([i,c],e);const l=u.data.get(i.dataId).values,d=u.data.get(c.dataId).values,h="string"===i.dtype?a.Ed.fromUint8ToStringArray(l):l,p="string"===i.dtype?a.Ed.fromUint8ToStringArray(d):d,f=r||i.dtype,[m,g]=t(i.shape,c.shape,h,p,f);return u.makeTensorInfo(g,f,m)}:e=>{let{inputs:a,backend:s}=e;const{a:o,b:i}=a,c=s;if("complex64"===o.dtype||"complex64"===i.dtype){const e=Ol({inputs:{x:o},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,s=c.data.get(r.dataId).values,u=c.data.get(a.dataId).values,l=Ol({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),d=c.data.get(l.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=c.data.get(h.dataId).values,m=c.data.get(p.dataId).values,[g,b,y]=n(o.shape,i.shape,s,u,f,m),v=c.makeTensorInfo(y,"float32",g),x=c.makeTensorInfo(y,"float32",b),w=gl({inputs:{real:v,imag:x},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(l),c.disposeIntermediateTensorInfo(v),c.disposeIntermediateTensorInfo(x),w}{const e=c.data.get(o.dataId).values,n=c.data.get(i.dataId).values,a=r||o.dtype,[s,u]=t(o.shape,i.shape,e,n,a);return c.makeTensorInfo(u,a,s)}}}function Il(e){return(t,n,r,s,o,i)=>{const c=a.Ed.assertAndGetBroadcastShape(t,n),u=a.Mf.sizeFromShape(c),l=c.length,d=a.Mf.computeStrides(c),h=a.Mf.getTypedArrayFromDType("float32",u),p=a.Mf.getTypedArrayFromDType("float32",u),f=a.Ed.getBroadcastDims(t,c),m=a.Ed.getBroadcastDims(n,c),g=a.Ed.mergeRealAndImagArrays(r,s),b=a.Ed.mergeRealAndImagArrays(o,i),y=t.length,v=a.Mf.computeStrides(t),x=n.length,w=a.Mf.computeStrides(n);if(f.length+m.length===0)for(let a=0;a<h.length;a++){const t=a%g.length,n=a%b.length,r=e(g[2*t],g[2*t+1],b[2*n],b[2*n+1]);h[a]=r.real,p[a]=r.imag}else for(let O=0;O<h.length;O++){const t=a.Mf.indexToLoc(O,l,d),n=t.slice(-y);f.forEach(e=>n[e]=0);const r=a.Mf.locToIndex(n,y,v),s=t.slice(-x);m.forEach(e=>s[e]=0);const o=a.Mf.locToIndex(s,x,w),i=e(g[2*r],g[2*r+1],b[2*o],b[2*o+1]);h[O]=i.real,p[O]=i.imag}return[h,p,c]}}const Nl=al((e,t)=>e+t),Tl=Il((e,t,n,r)=>({real:e+n,imag:t+r})),jl=Sl(a.d,Nl,Tl),El={kernelName:a.d,backendName:"cpu",kernelFunc:jl};function Cl(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:o}=r,i=a.Mf.sizeFromShape(s.shape),c=a.Mf.inferFromImplicitShape(o,i),u=a.Mf.sizeFromShape(c);a.Mf.assert(i===u,()=>"The new shape (".concat(c,") has ").concat(u," elements and the old ")+"shape (".concat(s.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements."),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=c,t.shape=c}return{dataId:s.dataId,shape:c,dtype:s.dtype}}const Al={kernelName:a.wc,backendName:"cpu",kernelFunc:Cl};function Rl(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:o}=t,{transposeA:i,transposeB:c}=r;qu([s,o],"matMul");const u=s.shape.length,l=o.shape.length,d=i?s.shape[u-2]:s.shape[u-1],h=c?o.shape[l-1]:o.shape[l-2],p=i?s.shape[u-1]:s.shape[u-2],f=c?o.shape[l-2]:o.shape[l-1],m=s.shape.slice(0,-2),g=o.shape.slice(0,-2),b=a.Mf.sizeFromShape(m),y=a.Mf.sizeFromShape(g),v=a.Jd.assertAndGetBroadcastShape(s.shape.slice(0,-2),o.shape.slice(0,-2)).concat([p,f]);a.Mf.assert(d===h,()=>"Error in matMul: inner shapes (".concat(d,") and (")+"".concat(h,") of Tensors with shapes ").concat(s.shape," and ")+"".concat(o.shape," and transposeA=").concat(i)+" and transposeB=".concat(c," must match."));const x=c?[y,f,h]:[y,h,f],w=Cl({inputs:{x:s},backend:n,attrs:{shape:i?[b,d,p]:[b,p,d]}}),O=Cl({inputs:{x:o},backend:n,attrs:{shape:x}}),k=i?w.shape[1]:w.shape[2],S=i?w.shape[2]:w.shape[1],I=c?O.shape[1]:O.shape[2],N=Math.max(b,y),T=n.data.get(w.dataId).values,j=n.data.get(O.dataId).values,E=a.Mf.computeStrides(w.shape),C=a.Mf.computeStrides(O.shape),[A,R,F]=i?[E[0],1,E[1]]:[E[0],E[1],1],[_,M,D]=c?[1,C[1],C[0]]:[C[1],1,C[0]],L=S*I,z=Object(a.Ld)([N,S,I],w.dtype),P=z.values,B=n.blockSize;for(let a=0;a<N;a++){const e=a%b,t=a%y;for(let n=0;n<S;n+=B){const r=Math.min(n+B,S);for(let s=0;s<I;s+=B){const o=Math.min(s+B,I);for(let i=0;i<k;i+=B){const c=Math.min(i+B,k);for(let u=n;u<r;u++)for(let n=s;n<o;n++){let r=0;for(let a=i;a<c;a++){r+=T[e*A+u*R+a*F]*j[a*_+n*M+t*D]}P[a*L+(u*I+n)]+=r}}}}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(O),n.makeTensorInfo(v,z.dtype,z.values)}const Fl={kernelName:a.s,backendName:"cpu",kernelFunc:Rl};const _l={kernelName:a.vd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=r;let h,p,f;const m=[];h=Rl({inputs:{a:a,b:s},attrs:{transposeA:c,transposeB:u},backend:n}),o&&(p=jl({inputs:{a:h,b:o},backend:n}),m.push(h),h=p),l&&(f=ml(n,h,l,i,d),m.push(h),h=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return h}};function Ml(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Dl={kernelName:a.a,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;qu(t,"abs");let r=new Float32Array(a.Mf.sizeFromShape(t.shape));return r=Ml(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},Ll=Qu(a.b,e=>Math.acos(e)),zl={kernelName:a.b,backendName:"cpu",kernelFunc:Ll},Pl=Qu(a.c,e=>Math.acosh(e)),Bl={kernelName:a.c,backendName:"cpu",kernelFunc:Pl};const Wl={kernelName:a.e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;qu(t,"addN");const s=r.map(e=>n.data.get(e.dataId).values),o=Object(a.Ld)(r[0].shape,r[0].dtype),i=o.values;for(let a=0;a<r.length;a++){const e=s[a];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}};function Ul(e,t,n,r,s){const o=t.length,i=a.Mf.sizeFromShape(t),c=a.Mf.computeStrides(t),u=a.Mf.computeStrides(s),l=a.Mf.getTypedArrayFromDType(n,a.Mf.sizeFromShape(s));for(let d=0;d<i;++d){const t=a.Mf.indexToLoc(d,o,c),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];l[a.Mf.locToIndex(n,o,u)]=e[d]}return l}function Vl(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;qu(a,"transpose");const o=a.shape.length,i=new Array(o);for(let u=0;u<i.length;u++)i[u]=a.shape[s[u]];const c=Ul(r.data.get(a.dataId).values,a.shape,a.dtype,s,i);return{dataId:r.write(c,i,a.dtype),shape:i,dtype:a.dtype}}const Gl={kernelName:a.qd,backendName:"cpu",kernelFunc:Vl};const Hl={kernelName:a.f,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r;qu(s,"all");const c=a.Mf.parseAxisParam(o,s.shape);let u=c;const l=a.Ed.getAxesPermutation(u,s.shape.length);let d=s;null!=l&&(d=Vl({inputs:{x:s},backend:n,attrs:{perm:l}}),u=a.Ed.getInnerMostAxes(u.length,s.shape.length)),a.Ed.assertAxesAreInnerMostDims("all",u,d.shape.length);const[h,p]=a.Ed.computeOutAndReduceShapes(d.shape,u),f=a.Mf.sizeFromShape(p),m=a.Mf.makeZerosTypedArray(a.Mf.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let a=0;a<m.length;++a){const e=a*f;let t=g[e];for(let n=0;n<f;++n){const r=g[e+n];t=t&&r}m[a]=t}null!=l&&n.disposeIntermediateTensorInfo(d);const b=n.makeTensorInfo(h,d.dtype,m);if(i){const e=Cl({inputs:{x:b},backend:n,attrs:{shape:a.Ed.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(b),e}return b}};const ql={kernelName:a.g,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r;qu(s,"any");const c=a.Mf.parseAxisParam(o,s.shape);let u=c;const l=a.Ed.getAxesPermutation(u,s.shape.length);let d=s;null!=l&&(d=Vl({inputs:{x:s},backend:n,attrs:{perm:l}}),u=a.Ed.getInnerMostAxes(u.length,s.shape.length)),a.Ed.assertAxesAreInnerMostDims("any",u,d.shape.length);const[h,p]=a.Ed.computeOutAndReduceShapes(d.shape,u),f=a.Mf.sizeFromShape(p),m=a.Mf.makeZerosTypedArray(a.Mf.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let a=0;a<m.length;++a){const e=a*f;let t=g[e];for(let n=0;n<f;++n){const r=g[e+n];t=t||r}m[a]=t}null!=l&&n.disposeIntermediateTensorInfo(d);const b=n.makeTensorInfo(h,d.dtype,m);if(i){const e=Cl({inputs:{x:b},backend:n,attrs:{shape:a.Ed.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(b),e}return b}};const Kl={kernelName:a.h,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o}=r;qu(s,"argMax");let i=a.Mf.parseAxisParam(o,s.shape);const c=a.Ed.getAxesPermutation(i,s.shape.length);let u=s;const l=[];null!=c&&(u=Vl({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(u),i=a.Ed.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],a.Ed.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[d,h]=a.Ed.computeOutAndReduceShapes(u.shape,i),p=a.Mf.sizeFromShape(d),f=a.Mf.makeZerosTypedArray(p,"int32"),m=a.Mf.sizeFromShape(h),g=n.data.get(u.dataId).values;for(let a=0;a<f.length;++a){const e=a*m;let t=g[e],n=0;for(let r=0;r<m;++r){const a=g[e+r];a>t&&(t=a,n=r)}f[a]=n}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(d,"int32",f)}};const Xl={kernelName:a.i,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o}=r;qu(s,"argMin");let i=a.Mf.parseAxisParam(o,s.shape);const c=a.Ed.getAxesPermutation(i,s.shape.length);let u=s;const l=[];null!=c&&(u=Vl({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(u),i=a.Ed.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],a.Ed.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[d,h]=a.Ed.computeOutAndReduceShapes(u.shape,i),p=a.Mf.sizeFromShape(d),f=a.Mf.makeZerosTypedArray(p,"int32"),m=a.Mf.sizeFromShape(h),g=n.data.get(u.dataId).values;for(let a=0;a<f.length;++a){const e=a*m;let t=g[e],n=0;for(let r=0;r<m;++r){const a=g[e+r];a<t&&(t=a,n=r)}f[a]=n}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(d,"int32",f)}},Yl=Qu(a.j,e=>Math.asin(e)),Ql={kernelName:a.j,backendName:"cpu",kernelFunc:Yl},Zl=Qu(a.k,e=>Math.asinh(e)),Jl={kernelName:a.k,backendName:"cpu",kernelFunc:Zl},$l=Qu(a.l,e=>Math.atan(e)),ed={kernelName:a.l,backendName:"cpu",kernelFunc:$l},td=al((e,t)=>Math.atan2(e,t)),nd=Sl(a.m,td),rd={kernelName:a.m,backendName:"cpu",kernelFunc:nd},ad=Qu(a.n,e=>Math.atanh(e)),sd={kernelName:a.n,backendName:"cpu",kernelFunc:ad};function od(e,t,n,r,s,o){const i=s.strideHeight,c=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Object(a.Ld)(s.outShape,n),b=g.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],v=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let a=0;a<s.batchSize;++a){const t=a*y,n=a*r[0];for(let a=0;a<s.inChannels;++a)for(let g=0;g<s.outHeight;++g){const y=g*i-p,w=Math.max(0,y),O=Math.min(s.inHeight,d+y),k=t+g*v;for(let t=0;t<s.outWidth;++t){const i=t*c-f,d=Math.max(0,i),p=Math.min(s.inWidth,h+i);let g=m,y=0,v=0;for(let t=w;t<O;t+=u){const s=n+t*r[1];for(let t=d;t<p;t+=l){const n=e[s+t*r[2]+a];"max"===o&&n>g?g=n:"avg"===o&&(y+=n,v++)}if(isNaN(g))break}b[k+t*x+a]="avg"===o?y/v:g}}}return g}function id(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=Object(a.Ld)(r.outShape,"int32"),c=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=r.padInfo.top,m=r.padInfo.left,g=Object(a.Ld)(t,n,e);for(let a=0;a<r.batchSize;++a)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*c-f;let b=n;for(;b<0;)b+=l;const y=Math.min(r.inHeight,h+n);for(let c=0;c<r.outWidth;++c){const h=c*u-m;let f=h;for(;f<0;)f+=d;const v=Math.min(r.inWidth,p+h);let x=Number.NEGATIVE_INFINITY,w=-1;for(let t=b;t<y;t+=l){const i=t-n;for(let n=f;n<v;n+=d){const c=n-h,u=g.get(a,t,n,e);u>x&&(x=u,w=s?o?((a*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:i*p+c)}}i.set(w,a,t,c,e)}}return i}function cd(e,t,n,r,s,o){const i=s.strideDepth,c=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,d=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterDepth,f=s.effectiveFilterHeight,m=s.effectiveFilterWidth,g=s.padInfo.front,b=s.padInfo.top,y=s.padInfo.left,v="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Object(a.Ld)(s.outShape,n),w=x.values,O=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],S=s.outShape[3]*s.outShape[4],I=s.outShape[4];for(let a=0;a<s.batchSize;++a){const t=a*O,n=a*r[0];for(let a=0;a<s.inChannels;++a)for(let x=0;x<s.outDepth;++x){const O=x*i-g;let N=O;for(;N<0;)N+=l;const T=Math.min(s.inDepth,p+O),j=t+x*k;for(let t=0;t<s.outHeight;++t){const i=t*c-b;let p=i;for(;p<0;)p+=d;const g=Math.min(s.inHeight,f+i),x=j+t*S;for(let t=0;t<s.outWidth;++t){const i=t*u-y;let c=i;for(;c<0;)c+=h;const f=Math.min(s.inWidth,m+i),b=x+t*I;let O=v,k=0,S=0;for(let t=N;t<T;t+=l){const s=n+t*r[1];for(let t=p;t<g;t+=d){const n=s+t*r[2];for(let t=c;t<f;t+=h){const s=e[n+t*r[3]+a];if("max"===o&&s>O?O=s:"avg"===o&&(k+=s,S++),isNaN(O))break}if(isNaN(O))break}if(isNaN(O))break}w[b+a]="avg"===o?k/Math.max(S,1):O}}}}return x}const ud={kernelName:a.o,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;qu(s,"avgPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:u}=r;a.Mf.assert(a.Ed.eitherStridesOrDilationsAreOne(i,1),()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const l=a.Ed.computePool2DInfo(s.shape,o,i,1,c,u);let d;if(1===l.filterWidth&&1===l.filterHeight&&a.Mf.arraysEqual(l.inShape,l.outShape))d=el({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=a.Mf.computeStrides(s.shape),r=od(e,s.shape,s.dtype,t,l,"avg");d=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return d}};const ld={kernelName:a.p,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:u,dataFormat:l}=r;qu(s,"avgPool3d");const d=a.Ed.computePool3DInfo(s.shape,o,i,1,c,u,l),h=cd(n.data.get(s.dataId).values,s.shape,s.dtype,a.Mf.computeStrides(s.shape),d,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const dd={kernelName:a.q,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o}=t,{filterSize:i,strides:c,pad:u,dimRoundingMode:l}=r;qu([s,o],"avgPool3DGrad");const d=a.Ed.computePool3DInfo(o.shape,i,c,1,u,l),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,b=d.filterWidth,y=d.dilationDepth,v=d.dilationHeight,x=d.dilationWidth,w=d.effectiveFilterDepth,O=d.effectiveFilterHeight,k=d.effectiveFilterWidth,S=w-1-d.padInfo.front,I=k-1-d.padInfo.left,N=O-1-d.padInfo.top,T=Object(a.Ld)(o.shape,"float32"),j=1/(m*g*b),E=n.bufferSync(s);for(let a=0;a<d.batchSize;++a)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=t-S,o=n-N,i=r-I;let c=0;for(let t=0;t<w;t+=y){const n=(s+t)/h;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let t=0;t<O;t+=v){const r=(o+t)/p;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let t=0;t<k;t+=x){const s=(i+t)/f;if(s<0||s>=d.outWidth||Math.floor(s)!==s)continue;c+=E.get(a,n,r,s,e)}}}T.set(c*j,a,t,n,r,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const hd={kernelName:a.r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o}=t,i=o;qu([s,o],"avgPoolGrad");const{filterSize:c,strides:u,pad:l}=r,d=a.Ed.computePool2DInfo(i.shape,c,u,1,l),h=d.strideHeight,p=d.strideWidth,f=d.filterHeight,m=d.filterWidth,g=d.dilationHeight,b=d.dilationWidth,y=d.effectiveFilterHeight,v=d.effectiveFilterWidth,x=v-1-d.padInfo.left,w=y-1-d.padInfo.top,O=Object(a.Ld)(i.shape,"float32"),k=1/(f*m),S=n.data.get(s.dataId).values,I=Object(a.Ld)(s.shape,"float32",S);for(let a=0;a<d.batchSize;++a)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const r=t-w,s=n-x;let o=0;for(let t=0;t<y;t+=g){const n=(r+t)/h;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let t=0;t<v;t+=b){const r=(s+t)/p;if(r<0||r>=d.outWidth||Math.floor(r)!==r)continue;o+=I.get(a,n,r,e)}}O.set(o*k,a,t,n,e)}return n.makeTensorInfo(O.shape,O.dtype,O.values)}};const pd={kernelName:a.nb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:o,offset:i,mean:c,variance:u}=t;a.Mf.assert(c.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),a.Mf.assert(null==i||c.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),a.Mf.assert(null==o||c.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),qu([s,c,u,o,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const d=n.data.get(s.dataId).values,h=n.data.get(c.dataId).values,p=n.data.get(u.dataId).values,f=o?n.data.get(o.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(d.length),b=m.length,y=f.length,v=p.length,x=h.length;let w=0,O=0,k=0,S=0;for(let a=0;a<d.length;++a)g[a]=m[w++]+(d[a]-h[O++])*f[k++]/Math.sqrt(p[S++]+l),w>=b&&(w=0),O>=x&&(O=0),k>=y&&(k=0),S>=v&&(S=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};function fd(e,t,n,r,s){const o=a.qf.isSliceContinous(r,t,n),i=a.Mf.sizeFromShape(n),c=a.Mf.computeStrides(r);if(o){const n=a.qf.computeFlatOffset(t,c);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const u="string"===s?a.Ed.fromUint8ToStringArray(e):e,l=Object(a.Ld)(r,s,u),d=Object(a.Ld)(n,s);for(let a=0;a<d.size;++a){const e=d.indexToLoc(a),n=e.map((e,n)=>e+t[n]);d.set(l.get(...n),...e)}return"string"===s?a.Ed.fromStringArrayToUint8(d.values):d.values}function md(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:o,size:i}=r;qu(s,"slice");const[c,u]=a.qf.parseSliceParams(s,o,i);a.qf.assertParamsValid(s,c,u);const l=fd(n.data.get(s.dataId).values,c,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}const gd={kernelName:a.Nc,backendName:"cpu",kernelFunc:md};const bd={kernelName:a.t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:o,crops:i}=r;qu([s],"batchToSpaceND");const c=o.reduce((e,t)=>e*t),u=a.Ed.getReshaped(s.shape,o,c),l=a.Ed.getPermuted(u.length,o.length),d=a.Ed.getReshapedPermuted(s.shape,o,c),h=a.Ed.getSliceBeginCoords(i,o.length),p=a.Ed.getSliceSize(d,i,o.length),f=Cl({inputs:{x:s},backend:n,attrs:{shape:u}}),m=Vl({inputs:{x:f},backend:n,attrs:{perm:l}}),g=Cl({inputs:{x:m},backend:n,attrs:{shape:d}}),b=md({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),b}};function yd(e,t,n,r,s){const o=a.Mf.sizeFromShape(r),i=a.Mf.makeZerosTypedArray(s,n);for(let a=0;a<e.length;a++){const n=e[a];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(i[n]+=o>0?t[a]:1)}return i}function vd(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=e.shape[0],o=e.shape[1],i=Object(a.Ld)([s,n],t.dtype);for(let a=0;a<s;a++)for(let s=0;s<o;s++){const o=e.get(a,s);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(r?i.set(1,a,o):t.size>0?i.set(i.get(a,o)+t.get(a,s),a,o):i.set(i.get(a,o)+1,a,o))}return i}const xd={kernelName:a.u,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o}=r,i=yd(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,i)}},wd=al((e,t)=>e&t),Od=Sl(a.v,wd),kd={kernelName:a.v,backendName:"cpu",kernelFunc:Od};const Sd={kernelName:a.w,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,c=a.Ed.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return n.makeTensorInfo([c.length],"int32",Int32Array.from(c))}},Id=Yu(e=>Math.ceil(e)),Nd=Zu(a.y,Id),Td={kernelName:a.y,backendName:"cpu",kernelFunc:Nd},jd=Qu(a.z,(e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),Ed={kernelName:a.z,backendName:"cpu",kernelFunc:jd},Cd={kernelName:a.B,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(a.Mf.sizeFromShape(t.shape)),s=n.data.get(t.dataId),o=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,c=n.data.get(o.dataId).values,u=n.data.get(i.dataId).values;for(let a=0;a<c.length;a++){const e=c[a],t=u[a];r[a]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")}};function Ad(e,t,n,r){const s=a.Mf.getArrayFromDType(n,a.Mf.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach(e=>{const n=a.Mf.sizeFromShape(e.shape);s.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{const o="string"===n?a.Ed.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const a=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[a+t]=o[i++]}r+=e.shape[1]})}return s}function Rd(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const Fd={kernelName:a.wb,backendName:"cpu",kernelFunc:Rd};function _d(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,o=a.Mf.parseAxisParam(s,t[0].shape)[0],i=t.map(e=>e.shape);a.Ed.assertParamsConsistent(i,o);let c=a.Ed.computeOutShape(t.map(e=>e.shape),o);if(0===a.Mf.sizeFromShape(c))return n.makeTensorInfo(c,t[0].dtype,[]);const u=t.filter(e=>a.Mf.sizeFromShape(e.shape)>0);if(1===u.length)return el({inputs:{x:u[0]},backend:n});if("complex64"===u[0].dtype){const e=u.map(e=>vl({inputs:{input:e},backend:n})),t=u.map(e=>Rd({inputs:{input:e},backend:n})),r=_d({inputs:e,backend:n,attrs:{axis:o}}),a=_d({inputs:t,backend:n,attrs:{axis:o}}),s=gl({inputs:{real:r,imag:a},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),s}const l=u.map(e=>{const t=a.Mf.sizeFromShape(e.shape.slice(o));return Cl({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),d=l.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));c=a.Ed.computeOutShape(l.map(e=>e.shape),1);const h=1===l[0].shape[0],p=Ad(d,c,t[0].dtype,h),f=a.Ed.computeOutShape(u.map(e=>e.shape),o),m=n.makeTensorInfo(f,t[0].dtype,p);return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}const Md={kernelName:a.C,backendName:"cpu",kernelFunc:_d};function Dd(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:i,pad:c,dataFormat:u,dilations:l,dimRoundingMode:d}=r;qu([s,o],"conv2d");const h=a.Ed.convertConv2DDataFormat(u),p=a.Ed.computeConv2DInfo(s.shape,o.shape,i,l,c,d,!1,h),f=p.filterHeight,m=p.filterWidth,g=p.dilationHeight,b=p.dilationWidth,y=p.padInfo.left,v=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new a.ld(p.outShape,s.dtype),O=a.Mf.computeStrides(s.shape),k=a.Mf.computeStrides(o.shape),S=O[0],I=x?O[1]:O[2],N=x?O[2]:1,T=x?1:O[1],j=w.strides[0],E=x?w.strides[1]:w.strides[2],C=x?w.strides[2]:1,A=x?1:w.strides[1],R=n.data.get(s.dataId).values,F=n.data.get(o.dataId).values,_=w.values;for(let a=0;a<p.batchSize;++a){const e=a*S,t=a*j;for(let n=0;n<p.outHeight;++n){const r=t+n*E,a=n*p.strideHeight-v;for(let t=0;t<f;++t){const n=a+t*g;if(n<0||n>=p.inHeight)continue;const s=t*k[0],o=e+n*I;for(let e=0;e<p.outWidth;++e){const t=r+e*C,n=e*p.strideWidth-y;for(let e=0;e<m;++e){const r=n+e*b;if(r<0||r>=p.inWidth)continue;const a=o+r*N;let i=s+e*k[1];for(let e=0;e<p.inChannels;++e){const n=R[a+e*T];for(let e=0;e<p.outChannels;++e)_[t+e*A]+=n*F[i+e];i+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,_)}const Ld={kernelName:a.D,backendName:"cpu",kernelFunc:Dd};const zd={kernelName:a.E,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:o}=t,{strides:i,pad:c,dataFormat:u,dimRoundingMode:l,filterShape:d}=r;qu([s,o],"conv2dBackpropFilter");const h=a.Ed.convertConv2DDataFormat(u),p=a.Ed.computeConv2DInfo(s.shape,d,i,1,c,l,!1,h),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:b}=p,y="channelsLast"===p.dataFormat,v=new a.ld(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,O=n.data.get(s.dataId).values,k=n.data.get(o.dataId).values,S=new a.ld(s.shape,s.dtype,O),I=new a.ld(o.shape,o.dtype,k);for(let a=0;a<g;++a){const e=Math.max(0,Math.ceil((w-a)/f)),t=Math.min(p.outHeight,(p.inHeight+w-a)/f);for(let n=0;n<b;++n){const r=Math.max(0,Math.ceil((x-n)/m)),s=Math.min(p.outWidth,(p.inWidth+x-n)/m);for(let o=0;o<p.inChannels;++o)for(let i=0;i<p.outChannels;++i){let c=0;for(let u=0;u<p.batchSize;++u)for(let l=e;l<t;++l){const e=a+l*f-w;for(let t=r;t<s;++t){const r=n+t*m-x;c+=y?S.get(u,e,r,o)*I.get(u,l,t,i):S.get(u,o,e,r)*I.get(u,i,l,t)}}v.set(c,a,n,o,i)}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const Pd={kernelName:a.F,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:o}=t,{inputShape:i,strides:c,pad:u,dataFormat:l,dimRoundingMode:d}=r;qu([s,o],"conv2dBackpropInput");const h=a.Mf.computeStrides(o.shape),p=a.Mf.computeStrides(s.shape);let f=a.Ed.convertConv2DDataFormat(l);const m=a.Ed.computeConv2DInfo(i,o.shape,c,1,u,d,!1,f),g=new a.ld(m.inShape,"float32"),b=g.values,y=n.data.get(s.dataId).values,v=n.data.get(o.dataId).values,[x,w,O]=h,{batchSize:k,filterHeight:S,filterWidth:I,inChannels:N,inHeight:T,inWidth:j,outChannels:E,outHeight:C,outWidth:A,strideHeight:R,strideWidth:F}=m;f=m.dataFormat;const _=S-1-m.padInfo.top,M=I-1-m.padInfo.left,D="channelsLast"===f,L=g.strides[0],z=D?g.strides[1]:g.strides[2],P=D?g.strides[2]:1,B=D?1:g.strides[1],W=p[0],U=D?p[1]:p[2],V=D?p[2]:1,G=D?1:p[1];for(let a=0;a<k;++a)for(let e=0;e<N;++e)for(let t=0;t<T;++t){const n=t-_,r=Math.max(0,Math.ceil(n/R)),s=Math.min(C,(S+n)/R);for(let o=0;o<j;++o){const i=o-M,c=Math.max(0,Math.ceil(i/F)),u=Math.min(A,(I+i)/F);let l=0;for(let t=r;t<s;++t){const r=t*R-n;for(let n=c;n<u;++n){const s=W*a+U*t+V*n,o=x*(S-1-r)+w*(I-1-(n*F-i))+O*e;for(let e=0;e<E;++e){l+=y[s+G*e]*v[o+e]}}}b[L*a+z*t+P*o+B*e]=l}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const Bd={kernelName:a.G,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:i,pad:c,dilations:u}=r;qu([s,o],"conv3d");const l=a.Ed.computeConv3DInfo(s.shape,o.shape,i,u,c),{filterDepth:d,filterHeight:h,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:g,padInfo:b}=l,y=b.front,v=b.left,x=b.top,w=new a.ld(l.outShape,s.dtype),O=n.data.get(s.dataId).values,k=n.data.get(o.dataId).values,S=w.values,I=a.Mf.computeStrides(s.shape),N=a.Mf.computeStrides(o.shape);for(let a=0;a<l.batchSize;++a){const e=a*I[0],t=a*w.strides[0];for(let n=0;n<l.outDepth;++n){const r=t+n*w.strides[1],a=n*l.strideDepth-y;for(let t=0;t<d;++t){const n=a+t*f;if(n<0||n>=l.inDepth)continue;const s=t*N[0],o=e+n*I[1];for(let e=0;e<l.outHeight;++e){const t=r+e*w.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*m;if(r<0||r>=l.inHeight)continue;const a=s+e*N[1],i=o+r*I[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-v;for(let e=0;e<p;++e){const t=r+e*g;if(t<0||t>=l.inWidth)continue;const s=a+e*N[2],o=i+t*l.inChannels;let c=s;for(let e=0;e<l.inChannels;++e){const t=O[o+e];for(let e=0;e<l.outChannels;++e)S[n+e]+=t*k[c+e];c+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const Wd={kernelName:a.H,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:o}=t,{strides:i,pad:c,filterShape:u}=r;qu([s,o],"conv3dBackpropFilterV2");const l=a.Mf.computeStrides(s.shape),d=a.Mf.computeStrides(o.shape),h=a.Ed.computeConv3DInfo(s.shape,u,i,1,c),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,g=h.filterDepth,b=h.filterHeight,y=h.filterWidth,v=new a.ld(h.filterShape,"float32"),x=v.values,[w,O,k,S]=v.strides,I=n.data.get(o.dataId).values,[N,T,j,E]=d,C=n.data.get(s.dataId).values,[A,R,F,_]=l,M=h.padInfo.front,D=h.padInfo.left,L=h.padInfo.top;for(let a=0;a<g;++a){const e=Math.max(0,Math.ceil((M-a)/p)),t=Math.min(h.outDepth,(h.inDepth+M-a)/p),n=a*w;for(let r=0;r<b;++r){const s=Math.max(0,Math.ceil((L-r)/f)),o=Math.min(h.outHeight,(h.inHeight+L-r)/f),i=r*O+n;for(let n=0;n<y;++n){const c=Math.max(0,Math.ceil((D-n)/m)),u=Math.min(h.outWidth,(h.inWidth+D-n)/m),l=n*k+i;for(let i=0;i<h.inChannels;++i){const d=i*S+l;for(let l=0;l<h.outChannels;++l){let g=0;for(let d=0;d<h.batchSize;++d){const h=d*A,b=d*N;for(let d=e;d<t;++d){const e=(a+d*p-M)*R+h,t=d*T+b;for(let a=s;a<o;++a){const s=(r+a*f-L)*F+e,o=a*j+t;for(let e=c;e<u;++e){const t=e*E+o;g+=C[(n+e*m-D)*_+s+i]*I[t+l]}}}}x[d+l]=g}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const Ud={kernelName:a.I,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:o}=t,{pad:i,strides:c,inputShape:u}=r;qu([s],"conv3dBackpropInputV2");const l=a.Mf.computeStrides(s.shape),d=a.Mf.computeStrides(o.shape),h=a.Ed.computeConv3DInfo(u,o.shape,c,1,i),p=new a.ld(h.inShape,"float32"),f=p.values,[m,g,b,y]=p.strides,v=n.data.get(s.dataId).values,[x,w,O,k]=l,S=n.data.get(o.dataId).values,[I,N,T,j]=d,{batchSize:E,filterDepth:C,filterHeight:A,filterWidth:R,inChannels:F,inDepth:_,inHeight:M,inWidth:D,outChannels:L,outDepth:z,outHeight:P,outWidth:B,strideDepth:W,strideHeight:U,strideWidth:V}=h,G=C-1-h.padInfo.front,H=A-1-h.padInfo.top,q=R-1-h.padInfo.left;for(let a=0;a<E;++a)for(let e=0;e<F;++e)for(let t=0;t<_;++t){const n=t-G,r=Math.max(0,Math.ceil(n/W)),s=Math.min(z,(C+n)/W);for(let o=0;o<M;++o){const i=o-H,c=Math.max(0,Math.ceil(i/U)),u=Math.min(P,(A+i)/U);for(let l=0;l<D;++l){const d=l-q,h=Math.max(0,Math.ceil(d/V)),p=Math.min(B,(R+d)/V);let E=0;for(let t=r;t<s;++t){const r=t*W-n;for(let n=c;n<u;++n){const s=n*U-i;for(let o=h;o<p;++o){const i=x*a+w*t+O*n+k*o,c=I*(C-1-r)+N*(A-1-s)+T*(R-1-(o*V-d))+j*e;for(let e=0;e<L;++e){E+=v[i+e]*S[c+e]}}}}f[m*a+g*t+b*o+y*l+e]=E}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},Vd=Qu(a.J,e=>Math.cos(e)),Gd={kernelName:a.J,backendName:"cpu",kernelFunc:Vd},Hd=Qu(a.K,e=>Math.cosh(e)),qd={kernelName:a.K,backendName:"cpu",kernelFunc:Hd};const Kd={kernelName:a.L,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:o,boxInd:i}=t,{cropSize:c,method:u,extrapolationValue:l}=r,[d,h,p,f]=s.shape,m=o.shape[0],[g,b]=c,y=Object(a.Ld)([m,g,b,f],"float32"),v=n.data.get(o.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(s.dataId).values,O=a.Mf.computeStrides(s.shape),k=a.Mf.computeStrides(y.shape);for(let a=0;a<m;a++){const e=4*a,t=v[e],n=v[e+1],r=v[e+2],s=v[e+3],o=x[a];if(o>=d)continue;const i=g>1?(r-t)*(h-1)/(g-1):0,c=b>1?(s-n)*(p-1)/(b-1):0;for(let d=0;d<g;d++){const e=g>1?t*(h-1)+d*i:.5*(t+r)*(h-1);if(e<0||e>h-1)for(let t=0;t<b;t++)for(let e=0;e<f;e++){const n=e+t*k[2]+d*k[1]+a*k[0];y.values[n]=l}else if("bilinear"===u){const t=Math.floor(e),r=Math.ceil(e),i=e-t;for(let e=0;e<b;e++){const u=b>1?n*(p-1)+e*c:.5*(n+s)*(p-1);if(u<0||u>p-1){for(let t=0;t<f;t++){const n=t+e*k[2]+d*k[1]+a*k[0];y.values[n]=l}continue}const h=Math.floor(u),m=Math.ceil(u),g=u-h;for(let n=0;n<f;n++){let s=n+h*O[2]+t*O[1]+o*O[0];const c=w[s];s=n+m*O[2]+t*O[1]+o*O[0];const u=w[s];s=n+h*O[2]+r*O[1]+o*O[0];const l=w[s];s=n+m*O[2]+r*O[1]+o*O[0];const p=c+(u-c)*g,f=l+(w[s]-l)*g;s=n+e*k[2]+d*k[1]+a*k[0],y.values[s]=p+(f-p)*i}}}else for(let t=0;t<b;++t){const r=b>1?n*(p-1)+t*c:.5*(n+s)*(p-1);if(r<0||r>p-1){for(let e=0;e<f;e++){const n=e+t*k[2]+d*k[1]+a*k[0];y.values[n]=l}continue}const i=Math.round(r),u=Math.round(e);for(let e=0;e<f;e++){const n=e+i*O[2]+u*O[1]+o*O[0],r=e+t*k[2]+d*k[1]+a*k[0];y.values[r]=w[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Xd={kernelName:a.M,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,exclusive:i,reverse:c}=r;qu(s,"cumprod");const u=a.Ed.getAxesPermutation([o],s.shape.length);let l=s;null!=u&&(l=Vl({inputs:{x:s},backend:n,attrs:{perm:u}}));const d=a.Ed.getInnerMostAxes(1,s.shape.length)[0];if(d!==l.shape.length-1)throw new Error("backend.cumprod in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(d));const h=Object(a.Lf)(l.dtype,"int32"),p=a.Mf.makeOnesTypedArray(a.Mf.sizeFromShape(l.shape),h),f=n.data.get(l.dataId).values,m=l.shape[l.shape.length-1],g=c?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let a=0;a<f.length;a+=m)for(let e=0;e<m;e++){const t=g(a,e);if(0===e)p[t]=i?1:f[t];else{const n=g(a,e-1);p[t]=i?f[n]*p[n]:f[t]*p[n]}}const b=n.makeTensorInfo(l.shape,h,p);if(null!=u){const e=Vl({inputs:{x:b},backend:n,attrs:{perm:a.Ed.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(l),e}return b}};const Yd={kernelName:a.N,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,exclusive:i,reverse:c}=r;qu(s,"cumsum");const u=a.Ed.getAxesPermutation([o],s.shape.length);let l=s;null!=u&&(l=Vl({inputs:{x:s},backend:n,attrs:{perm:u}}));const d=a.Ed.getInnerMostAxes(1,s.shape.length)[0];if(d!==l.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(d));const h=Object(a.Lf)(l.dtype,"int32"),p=a.Mf.makeZerosTypedArray(a.Mf.sizeFromShape(l.shape),h),f=n.data.get(l.dataId).values,m=l.shape[l.shape.length-1],g=c?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let a=0;a<f.length;a+=m)for(let e=0;e<m;e++){const t=g(a,e);if(0===e)p[t]=i?0:f[t];else{const n=g(a,e-1);p[t]=i?f[n]+p[n]:f[t]+p[n]}}const b=n.makeTensorInfo(l.shape,h,p);if(null!=u){const e=Vl({inputs:{x:b},backend:n,attrs:{perm:a.Ed.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(l),e}return b}};const Qd={kernelName:a.P,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o,binaryOutput:i}=r;if(1===a.shape.length){const e=yd(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,e)}if(2===a.shape.length){const e=vd(n.bufferSync(a),n.bufferSync(s),o,i);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(a.shape.length,"."))}};const Zd={kernelName:a.Q,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:o,dataFormat:i}=r;a.Mf.assert("NHWC"===i,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(i));const c=s.shape[0],u=s.shape[1],l=s.shape[2],d=s.shape[3],h=u*o,p=l*o,f=d/(o*o),m=n.data.get(s.dataId).values,g=new Float32Array(c*h*p*f);let b=0;for(let a=0;a<c;++a)for(let e=0;e<h;++e){const t=Math.floor(e/o),n=e%o;for(let e=0;e<p;++e){const r=Math.floor(e/o),s=(n*o+e%o)*f;for(let e=0;e<f;++e){const n=e+s+d*(r+l*(t+u*a));g[b++]=m[n]}}}return n.makeTensorInfo([c,h,p,f],s.dtype,g)}};function Jd(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:i,pad:c,dilations:u,dimRoundingMode:l}=r;qu([s,o],"depthwiseConv2DNative");const d=a.Mf.computeStrides(s.shape),h=a.Mf.computeStrides(o.shape);let p=u;null==p&&(p=[1,1]),a.Mf.assert(a.Ed.eitherStridesOrDilationsAreOne(i,p),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(i," and dilations '").concat(p,"'"));const f=a.Ed.computeConv2DInfo(s.shape,o.shape,i,p,c,l,!0),{filterHeight:m,filterWidth:g,dilationHeight:b,dilationWidth:y,padInfo:v}=f,x=v.left,w=v.top,O=f.outChannels/f.inChannels,k=new a.ld(f.outShape,s.dtype),S=n.data.get(s.dataId).values,I=n.data.get(o.dataId).values,N=k.values;for(let a=0;a<f.batchSize;++a){const e=a*d[0],t=a*k.strides[0];for(let n=0;n<f.outHeight;++n){const r=t+n*k.strides[1],a=n*f.strideHeight-w;for(let t=0;t<m;++t){const n=a+t*b;if(n<0||n>=f.inHeight)continue;const s=t*h[0],o=e+n*d[1];for(let e=0;e<f.outWidth;++e){const t=r+e*k.strides[2],n=e*f.strideWidth-x;for(let e=0;e<g;++e){const r=n+e*y;if(r<0||r>=f.inWidth)continue;const a=s+e*h[1],i=o+r*f.inChannels;let c=t,u=a;for(let e=0;e<f.inChannels;++e){const t=S[i+e];for(let e=0;e<O;++e)N[c+e]+=t*I[u+e];c+=O,u+=O}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const $d={kernelName:a.R,backendName:"cpu",kernelFunc:Jd};const eh={kernelName:a.S,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:o}=t,{strides:i,dilations:c,pad:u,dimRoundingMode:l,filterShape:d}=r;qu([s,o],"depthwiseConv2dNativeBackpropFilter");const h=a.Ed.computeConv2DInfo(s.shape,d,i,c,u,l,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,b=new a.ld(h.filterShape,"float32"),y=h.padInfo.left,v=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,O=new a.ld(s.shape,s.dtype,w),k=n.data.get(o.dataId).values,S=new a.ld(o.shape,o.dtype,k);for(let a=0;a<m;++a){const e=Math.max(0,Math.ceil((v-a)/p)),t=Math.min(h.outHeight,(h.inHeight+v-a)/p);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((y-n)/f)),s=Math.min(h.outWidth,(h.inWidth+y-n)/f);for(let o=0;o<h.outChannels;++o){const i=Math.trunc(o/x),c=o%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=e;c<t;++c){const e=a+c*p-v;for(let t=r;t<s;++t){const r=n+t*f-y;u+=O.get(l,e,r,i)*S.get(l,c,t,o)}}b.set(u,a,n,i,c)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const th={kernelName:a.T,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:o}=t,{strides:i,dilations:c,pad:u,dimRoundingMode:l,inputShape:d}=r;qu([s,o],"depthwiseConv2DNativeBackpropInput");const h=a.Mf.computeStrides(s.shape),p=a.Mf.computeStrides(o.shape),f=a.Ed.computeConv2DInfo(d,o.shape,i,c,u,l,!0),m=new a.ld(f.inShape,"float32"),g=m.values,[b,y,v]=m.strides,x=n.data.get(s.dataId).values,[w,O,k]=h,S=n.data.get(o.dataId).values,[I,N,T]=p,{batchSize:j,filterHeight:E,filterWidth:C,inChannels:A,inHeight:R,inWidth:F,outChannels:_,outHeight:M,outWidth:D,strideHeight:L,strideWidth:z}=f,P=E-1-f.padInfo.top,B=C-1-f.padInfo.left,W=_/A;for(let a=0;a<j;++a)for(let e=0;e<A;++e)for(let t=0;t<R;++t){const n=t-P,r=Math.max(0,Math.ceil(n/L)),s=Math.min(M,(E+n)/L);for(let o=0;o<F;++o){const i=o-B,c=Math.max(0,Math.ceil(i/z)),u=Math.min(D,(C+i)/z);let l=0;for(let t=r;t<s;++t){const r=t*L-n;for(let n=c;n<u;++n){const s=w*a+O*t+k*n,o=I*(E-1-r)+N*(C-1-(n*z-i))+T*e;for(let t=0;t<W;++t){l+=x[s+(e*W+t)]*S[o+t]}}}g[b*a+y*t+v*o+e]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const nh={kernelName:a.U,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=a.Mf.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,i=Object(a.Ld)([s,s],r.dtype),c=i.values;for(let a=0;a<o.length;a++)c[a*s+a]=o[a];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},rh={kernelName:a.V,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,filter:o}=t,{strides:i,pad:c,dilations:u}=r,l=n,d=l.data.get(s.dataId).values,h=s.shape.length,p=l.data.get(o.dataId).values,f=o.shape.length,{batchSize:m,inHeight:g,inWidth:b,inChannels:y,outHeight:v,outWidth:x,padInfo:w,strideHeight:O,strideWidth:k,filterHeight:S,filterWidth:I,dilationHeight:N,dilationWidth:T,outShape:j}=a.Ed.computeDilation2DInfo(s.shape,o.shape,i,c,"NHWC",u),E=a.Mf.sizeFromShape(j),C=j.length,A=a.Mf.getArrayFromDType(s.dtype,E);for(let R=0;R<m;++R)for(let e=0;e<v;++e){const t=e*O-w.top;for(let n=0;n<x;++n){const r=n*k-w.left;for(let i=0;i<y;++i){let c=Number.MIN_SAFE_INTEGER;for(let e=0;e<S;++e){const n=t+e*N;if(n>=0&&n<g)for(let t=0;t<I;++t){const u=r+t*T;if(u>=0&&u<b){const r=a.Mf.locToIndex([R,n,u,i],h,a.Mf.computeStrides(s.shape)),l=a.Mf.locToIndex([e,t,i],f,a.Mf.computeStrides(o.shape)),m=d[r]+p[l];m>c&&(c=m)}}}A[a.Mf.locToIndex([R,e,n,i],C,a.Mf.computeStrides(j))]=c}}}return{dataId:l.write(a.Mf.toTypedArray(A,s.dtype),j,s.dtype),shape:j,dtype:s.dtype}}},ah={kernelName:a.W,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,filter:o,dy:i}=t,{strides:c,pad:u,dilations:l}=r,d=n,h=a.Mf.toNestedArray(s.shape,d.data.get(s.dataId).values),p=a.Mf.toNestedArray(o.shape,d.data.get(o.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:b,outHeight:y,outWidth:v,padInfo:x,strideHeight:w,strideWidth:O,filterHeight:k,filterWidth:S,dilationHeight:I,dilationWidth:N,outShape:T}=a.Ed.computeDilation2DInfo(s.shape,o.shape,c,u,"NHWC",l);a.Mf.assert(i.rank===T.length,()=>"Error in ".concat(a.W,", dy ")+"must have the same rank as output ".concat(T.length,", but got ")+"".concat(i.rank));const j=a.Mf.toNestedArray(T,d.data.get(i.dataId).values),E=a.Mf.makeZerosNestedTypedArray(o.shape,o.dtype);for(let a=0;a<f;++a)for(let e=0;e<y;++e){const t=e*w-x.top;for(let n=0;n<v;++n){const r=n*O-x.left;for(let s=0;s<b;++s){let o=Number.MIN_SAFE_INTEGER,i=0,c=0;for(let e=0;e<k;++e){const n=t+e*I;if(n>=0&&n<m)for(let t=0;t<S;++t){const u=r+t*N;if(u>=0&&u<g){const r=h[a][n][u][s]+p[e][t][s];r>o&&(o=r,i=e,c=t)}}}E[i][c][s]+=j[a][e][n][s]}}}return{dataId:d.write(a.Mf.toTypedArray(E,s.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}},sh={kernelName:a.X,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,filter:o,dy:i}=t,{strides:c,pad:u,dilations:l}=r,d=n,h=a.Mf.toNestedArray(s.shape,d.data.get(s.dataId).values),p=a.Mf.toNestedArray(o.shape,d.data.get(o.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:b,outHeight:y,outWidth:v,padInfo:x,strideHeight:w,strideWidth:O,filterHeight:k,filterWidth:S,dilationHeight:I,dilationWidth:N,outShape:T}=a.Ed.computeDilation2DInfo(s.shape,o.shape,c,u,"NHWC",l);a.Mf.assert(i.rank===T.length,()=>"Error in ".concat(a.X,", dy ")+"must have the same rank as output ".concat(T.length,", but got ")+"".concat(i.rank));const j=a.Mf.toNestedArray(T,d.data.get(i.dataId).values),E=a.Mf.makeZerosNestedTypedArray(s.shape,s.dtype);for(let a=0;a<f;++a)for(let e=0;e<y;++e){const t=e*w-x.top;for(let n=0;n<v;++n){const r=n*O-x.left;for(let s=0;s<b;++s){let o=Number.MIN_SAFE_INTEGER,i=t<0?0:t,c=r<0?0:r;for(let e=0;e<k;++e){const n=t+e*I;if(n>=0&&n<m)for(let t=0;t<S;++t){const u=r+t*N;if(u>=0&&u<g){const r=h[a][n][u][s]+p[e][t][s];r>o&&(o=r,i=n,c=u)}}}E[a][i][c][s]+=j[a][e][n][s]}}}return{dataId:d.write(a.Mf.toTypedArray(E,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};const oh={kernelName:a.Y,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{canvas:s,options:o}=r,{contextOptions:i,imageOptions:c}=o||{},u=(null===c||void 0===c?void 0:c.alpha)||1,l=(null===i||void 0===i?void 0:i.contextType)||"2d";if("2d"!==l)throw new Error("Context type ".concat(i.contextType," is not supported by the CPU backend."));const d=s.getContext(l,(null===i||void 0===i?void 0:i.contextAttributes)||{});if(null==d)throw new Error("Could not get the context with ".concat(l," type."));const[h,p]=a.shape.slice(0,2),f=2===a.shape.length?1:a.shape[2],m=n.data.get(a.dataId).values,g="float32"===a.dtype?255:1,b=new Uint8ClampedArray(p*h*4);for(let v=0;v<h*p;++v){const e=[0,0,0,255*u];for(let n=0;n<f;n++){const t=m[v*f+n];if("float32"===a.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===a.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*v;b[t+0]=Math.round(e[0]),b[t+1]=Math.round(e[1]),b[t+2]=Math.round(e[2]),b[t+3]=Math.round(e[3])}s.width=p,s.height=h;const y=new ImageData(b,p,h);return d.putImageData(y,0,0),a}},ih=al((e,t)=>e*t),ch=Il((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),uh=Sl(a.Zb,ih,ch),lh={kernelName:a.Zb,backendName:"cpu",kernelFunc:uh};function dh(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r;let c;qu(s,"sum"),c="bool"===s.dtype?Ol({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):el({inputs:{x:s},backend:n});const u=c.shape.length,l=a.Mf.parseAxisParam(o,c.shape),d=a.Ed.getAxesPermutation(l,u);let h=l,p=c;null!=d&&(p=Vl({inputs:{x:c},backend:n,attrs:{perm:d}}),h=a.Ed.getInnerMostAxes(h.length,u)),a.Ed.assertAxesAreInnerMostDims("sum",h,p.shape.length);const[f,m]=a.Ed.computeOutAndReduceShapes(p.shape,h);let g=yl(n,f,a.Ed.upcastType(p.dtype,"int32"));const b=a.Mf.sizeFromShape(m),y=n.data.get(g.dataId).values,v=n.data.get(p.dataId).values;for(let a=0;a<y.length;++a){const e=a*b;let t=0;for(let n=0;n<b;++n)t+=v[e+n];y[a]=t}if(i){const e=g;g=Cl({inputs:{x:g},backend:n,attrs:{shape:a.Ed.expandShapeToKeepDim(g.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(c),null!=d&&n.disposeIntermediateTensorInfo(p),g}const hh={kernelName:a.hd,backendName:"cpu",kernelFunc:dh};const ph={kernelName:a.Z,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,o=t,{allDims:i,summedDims:c,idDims:u}=a.Ed.decodeEinsumEquation(s,o.length);a.Ed.checkEinsumDimSizes(i.length,u,o);const{path:l,steps:d}=a.Ed.getEinsumComputePath(c,u),h=d.length;let p=null,f=i.length;const m=[];for(let g=0;g<h;++g){for(const e of d[g]){const{permutationIndices:t,expandDims:r}=a.Ed.getEinsumPermutation(f,u[e]);let s;a.Ed.isIdentityPermutation(t)?s=o[e]:(s=Vl({inputs:{x:o[e]},backend:n,attrs:{perm:t}}),m.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);a.Mf.arraysEqual(s.shape,i)||(s=Cl({inputs:{x:s},backend:n,attrs:{shape:i}}),m.push(s)),null===p?p=s:(p=uh({inputs:{a:s,b:p},backend:n}),m.push(p))}g<h-1&&(l[g]>=0&&(p=dh({inputs:{x:p},backend:n,attrs:{axis:l[g]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const a of m)a!==p&&n.disposeIntermediateTensorInfo(a);return p}};const fh={kernelName:a.bb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;qu([r,s],"eluGrad");const o=new Float32Array(a.Mf.sizeFromShape(s.shape)),i=n.data.get(s.dataId).values,c=n.data.get(r.dataId).values;for(let a=0;a<i.length;++a){const e=i[a];o[a]=e>=0?c[a]:c[a]*(e+1)}return n.makeTensorInfo(s.shape,"float32",o)}},mh=al((e,t)=>e===t?1:0),gh=Sl(a.cb,mh,null,"bool"),bh={kernelName:a.cb,backendName:"cpu",kernelFunc:gh},yh=a.Ed.ERF_P,vh=a.Ed.ERF_A1,xh=a.Ed.ERF_A2,wh=a.Ed.ERF_A3,Oh=a.Ed.ERF_A4,kh=a.Ed.ERF_A5,Sh=Qu(a.db,e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+yh*n);return t*(1-((((kh*r+Oh)*r+wh)*r+xh)*r+vh)*r*Math.exp(-n*n))}),Ih={kernelName:a.db,backendName:"cpu",kernelFunc:Sh},Nh=Yu(e=>Math.exp(e)),Th=Zu(a.eb,Nh,"float32"),jh={kernelName:a.eb,backendName:"cpu",kernelFunc:Th};function Eh(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:o}=r,i=s.shape.length,c=s.shape.slice();let u=o;return o<0&&(a.Mf.assert(-(i+1)<=o,()=>"Axis must be in the interval [".concat(-(i+1),", ").concat(i,"]")),u=i+o+1),c.splice(u,0,1),Cl({inputs:{x:s},backend:n,attrs:{shape:c}})}const Ch={kernelName:a.fb,backendName:"cpu",kernelFunc:Eh},Ah=Yu(e=>Math.expm1(e)),Rh=Zu(a.gb,Ah),Fh={kernelName:a.gb,backendName:"cpu",kernelFunc:Rh},_h=al((e,t)=>e/t),Mh=Sl(a.sc,_h),Dh={kernelName:a.sc,backendName:"cpu",kernelFunc:Mh},Lh=al((e,t)=>e-t),zh=Il((e,t,n,r)=>({real:e-n,imag:t-r})),Ph=Sl(a.gd,Lh,zh),Bh={kernelName:a.gd,backendName:"cpu",kernelFunc:Ph};function Wh(e,t,n){const r=e.shape,s=r[0],o=r[1],i=n.data.get(e.dataId),c=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[s,o],d=a.Mf.sizeFromShape(l),h=a.Mf.getTypedArrayFromDType("float32",d),p=a.Mf.getTypedArrayFromDType("float32",d);for(let b=0;b<s;b++){const e=md({inputs:{x:c},backend:n,attrs:{begin:[b,0],size:[1,o]}}),r=md({inputs:{x:u},backend:n,attrs:{begin:[b,0],size:[1,o]}}),s=gl({inputs:{real:e,imag:r},backend:n}),{real:i,imag:l}=Uh(s,t,n),d=a.Ed.mergeRealAndImagArrays(i,l);for(let t=0;t<o;t++){const e=a.Ed.getComplexWithIndex(d,t);h[b*o+t]=e.real,p[b*o+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s)}const f=n.makeTensorInfo(l,"float32",h),m=n.makeTensorInfo(l,"float32",p),g=gl({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function Uh(e,t,n){const r=a.Mf.sizeFromShape(e.shape),s=n.data.get(e.dataId),o=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0===((c=r)&c-1)){const s=function e(t,n,r,s,o){if(1===r)return{real:t,imag:n};const i=a.Ed.mergeRealAndImagArrays(t,n),c=r/2,u=a.Ed.complexWithEvenIndex(i),l=u.real,d=u.imag,h=[l.length],p=o.makeTensorInfo(h,"float32",l),f=o.makeTensorInfo(h,"float32",d),m=gl({inputs:{real:p,imag:f},backend:o}),g=a.Ed.complexWithOddIndex(i),b=g.real,y=g.imag,v=[b.length],x=o.makeTensorInfo(v,"float32",b),w=o.makeTensorInfo(v,"float32",y),O=gl({inputs:{real:x,imag:w},backend:o}),k=e(l,d,c,s,o),S=k.real,I=k.imag,N=[S.length],T=o.makeTensorInfo(N,"float32",S),j=o.makeTensorInfo(N,"float32",I),E=gl({inputs:{real:T,imag:j},backend:o}),C=e(b,y,c,s,o),A=C.real,R=C.imag,F=[A.length],_=o.makeTensorInfo(F,"float32",A),M=o.makeTensorInfo(F,"float32",R),D=gl({inputs:{real:_,imag:M},backend:o}),L=a.Ed.exponents(r,s),z=[L.real.length],P=o.makeTensorInfo(z,"float32",L.real),B=o.makeTensorInfo(z,"float32",L.imag),W=gl({inputs:{real:P,imag:B},backend:o}),U=uh({inputs:{a:W,b:D},backend:o}),V=jl({inputs:{a:E,b:U},backend:o}),G=Ph({inputs:{a:E,b:U},backend:o}),H=vl({inputs:{input:V},backend:o}),q=vl({inputs:{input:G},backend:o}),K=Rd({inputs:{input:V},backend:o}),X=Rd({inputs:{input:G},backend:o}),Y=_d({inputs:[H,q],backend:o,attrs:{axis:0}}),Q=_d({inputs:[K,X],backend:o,attrs:{axis:0}}),Z=o.data.get(Y.dataId).values,J=o.data.get(Q.dataId).values;return o.disposeIntermediateTensorInfo(p),o.disposeIntermediateTensorInfo(f),o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(O),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(j),o.disposeIntermediateTensorInfo(E),o.disposeIntermediateTensorInfo(_),o.disposeIntermediateTensorInfo(M),o.disposeIntermediateTensorInfo(D),o.disposeIntermediateTensorInfo(P),o.disposeIntermediateTensorInfo(B),o.disposeIntermediateTensorInfo(W),o.disposeIntermediateTensorInfo(U),o.disposeIntermediateTensorInfo(V),o.disposeIntermediateTensorInfo(G),o.disposeIntermediateTensorInfo(H),o.disposeIntermediateTensorInfo(K),o.disposeIntermediateTensorInfo(q),o.disposeIntermediateTensorInfo(X),o.disposeIntermediateTensorInfo(Y),o.disposeIntermediateTensorInfo(Q),{real:Z,imag:J}}(o,i,r,t,n),c=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(c,"float32",s.real),t=n.makeTensorInfo(c,"float32",s.imag),o=n.makeTensorInfo([],"float32",a.Mf.createScalarValue(r,"float32")),i=el({inputs:{x:o},backend:n}),u=Dh.kernelFunc({inputs:{a:e,b:o},backend:n}),l=Dh.kernelFunc({inputs:{a:t,b:i},backend:n}),d=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:d,imag:h}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let o=0,i=0;for(let r=0;r<t;r++){const c=a.Ed.exponent(s*r,t,n),u=a.Ed.getComplexWithIndex(e,r);o+=u.real*c.real-u.imag*c.imag,i+=u.real*c.imag+u.imag*c.real}n&&(o/=t,i/=t),a.Ed.assignToTypedArray(r,o,i,s)}return r}(a.Ed.mergeRealAndImagArrays(o,i),r,t);return a.Ed.splitRealAndImagArrays(e)}var c}const Vh={kernelName:a.hb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=a.Mf.sizeFromShape(r.shape),o=r.shape[r.shape.length-1],i=Cl({inputs:{x:r},backend:n,attrs:{shape:[s/o,o]}}),c=Wh(i,!1,n),u=Cl({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),u}};function Gh(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:o}=n,i=o||a.Mf.inferDtype(s),c=a.Mf.getArrayFromDType(i,a.Mf.sizeFromShape(r));return function(e,t,n){e.fill(t)}(c,s),t.makeTensorInfo(r,i,c)}const Hh={kernelName:a.ib,backendName:"cpu",kernelFunc:Gh};const qh={kernelName:a.jb,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:s}=t,o=r,i=a.Mf.getTypedArrayFromDType(s.dtype,a.Mf.sizeFromShape(s.shape)),[c,u,l,d]=s.shape,h=o.data.get(s.dataId).values;for(let a=0;a<c;a++){const e=a*l*u*d;for(let t=0;t<u;t++){const n=t*(l*d);for(let t=0;t<l;t++){const r=t*d;for(let a=0;a<d;a++){const s=Math.round(l-t-1),o=e+n+r+a;let c=h[o];if(s>=0&&s<l){c=h[e+n+s*d+a]}i[o]=c}}}}return{dataId:o.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Kh=Yu(e=>Math.floor(e)),Xh=Zu(a.kb,Kh),Yh={kernelName:a.kb,backendName:"cpu",kernelFunc:Xh},Qh=al((e,t)=>Math.floor(e/t)),Zh=Sl(a.lb,Qh,null,"int32"),Jh={kernelName:a.lb,backendName:"cpu",kernelFunc:Zh};const $h={kernelName:a.ob,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=Dd({inputs:{x:a,filter:s},backend:n,attrs:{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h}});if(o){const e=m;if("NCHW"===l&&1===o.shape.length&&1!==o.shape[0]){const e=Cl({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=jl({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=jl({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===l&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const e=Cl({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=ml(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=ml(n,m,p,i,f);n.disposeIntermediateTensorInfo(e)}return m}};const ep={kernelName:a.pb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=Jd({inputs:{x:a,filter:s},backend:n,attrs:{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h}});if(o){const e=m;m=jl({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=ml(n,m,p,i,f),n.disposeIntermediateTensorInfo(e)}return m}};function tp(e,t,n,r,s,o,i,c,u){const l=Object(a.Ld)([r,o],n);for(let a=0;a<r;a++){const n=[];let r=0;for(let t=0;t<s;t++){const o=e[a*s+t];r+=o*i[t],n.push(o)}if(r<0||r>=u/o)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(c));for(let e=0;e<o;e++)l.values[a*o+e]=t.get(...t.indexToLoc(r*o+e))}return l}const np={kernelName:a.qb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,o=a.Mf.sizeFromShape(r.shape),i=s.shape,c=i[i.length-1],[u,l,d,h]=a.Ed.prepareAndValidate(r,s);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const p=tp(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,l,c,d,h,r.shape,o);return n.makeTensorInfo(u,r.dtype,p.values)}};function rp(e,t,n){const r=Object(a.Ld)(n,e.dtype);for(let a=0;a<r.size;++a){const n=r.indexToLoc(a).slice(),s=n[0],o=n[2],i=t.locToIndex([s,o]);n[2]=t.values[i];const c=e.locToIndex(n);0<=c&&c<e.values.length&&(r.values[a]=e.values[c])}return r}const ap={kernelName:a.rb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:o}=t,{axis:i,batchDims:c}=r;qu([s,o],"gatherV2");const u=a.Mf.parseAxisParam(i,s.shape)[0],l=n.data.get(o.dataId).values,d=s.shape[u];for(let x=0;x<l.length;++x){const e=l[x];a.Mf.assert(e<=d-1&&e>=0,()=>"GatherV2: the index value ".concat(e," is not in [0, ").concat(d-1,"]"))}let h=c;null==c&&(h=0);const p=a.Mf.sizeFromShape(o.shape),f=a.Ed.segment_util.collectGatherOpShapeInfo(s,o,u,h),m=Cl({inputs:{x:s},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=Cl({inputs:{x:o},backend:n,attrs:{shape:[f.batchSize,p/f.batchSize]}}),b=[f.batchSize,f.outerSize,p/f.batchSize,f.sliceSize],y=n.bufferSync(g),v=rp(n.bufferSync(m),y,b);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(f.outputShape,v.dtype,v.values)}},sp=al((e,t)=>e>t?1:0),op=Sl(a.sb,sp,null,"bool"),ip={kernelName:a.sb,backendName:"cpu",kernelFunc:op},cp=al((e,t)=>e>=t?1:0),up=Sl(a.tb,cp,null,"bool"),lp={kernelName:a.tb,backendName:"cpu",kernelFunc:up};const dp={kernelName:a.ub,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=a.Mf.sizeFromShape(r.shape),o=r.shape[r.shape.length-1],i=Cl({inputs:{x:r},backend:n,attrs:{shape:[s/o,o]}}),c=Wh(i,!0,n),u=Cl({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),u}},hp=Qu(a.xb,e=>Number.isFinite(e)?1:0,"bool"),pp={kernelName:a.xb,backendName:"cpu",kernelFunc:hp},fp=Qu(a.yb,e=>Math.abs(e)===1/0?1:0,"bool"),mp={kernelName:a.yb,backendName:"cpu",kernelFunc:fp},gp=Qu(a.zb,e=>Number.isNaN(e)?1:0,"bool"),bp={kernelName:a.zb,backendName:"cpu",kernelFunc:gp},yp=al((e,t)=>e<t?1:0),vp=Sl(a.Eb,yp,null,"bool"),xp={kernelName:a.Eb,backendName:"cpu",kernelFunc:vp},wp=al((e,t)=>e<=t?1:0),Op=Sl(a.Fb,wp,null,"bool"),kp={kernelName:a.Fb,backendName:"cpu",kernelFunc:Op};function Sp(e,t,n){const r=(t-e)/(n-1),s=a.Mf.makeZerosTypedArray(n,"float32");s[0]=e;for(let a=1;a<s.length;a++)s[a]=s[a-1]+r;return s}const Ip={kernelName:a.Gb,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,o=Sp(r,a,s);return t.makeTensorInfo([o.length],"float32",o)}},Np=Yu(e=>Math.log(e)),Tp=Zu(a.Hb,Np),jp={kernelName:a.Hb,backendName:"cpu",kernelFunc:Tp},Ep=Qu(a.Ib,e=>Math.log1p(e)),Cp={kernelName:a.Ib,backendName:"cpu",kernelFunc:Ep},Ap=al((e,t)=>e&&t),Rp=Sl(a.Jb,Ap,null,"bool"),Fp={kernelName:a.Jb,backendName:"cpu",kernelFunc:Rp},_p=Qu(a.Kb,e=>e?0:1,"bool"),Mp={kernelName:a.Kb,backendName:"cpu",kernelFunc:_p},Dp=al((e,t)=>e||t),Lp=Sl(a.Lb,Dp,null,"bool"),zp={kernelName:a.Lb,backendName:"cpu",kernelFunc:Lp};const Pp={kernelName:a.Bb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:o,bias:i,alpha:c,beta:u}=r;qu(s,"LRN");const l=s.shape[3],d=l-1,h=n.data.get(s.dataId).values,p=a.Mf.sizeFromShape(s.shape),f=new Float32Array(p);function m(e){const t=e%l;let n=e-t+Math.max(0,t-o);const r=e-t+Math.min(t+o,d);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let a=0;a<p;a++){const e=m(a),t=h[a]*Math.pow(i+c*e,-u);f[a]=t}return n.makeTensorInfo(s.shape,s.dtype,f)}};const Bp={kernelName:a.Cb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:o,dy:i}=t,{depthRadius:c,bias:u,alpha:l,beta:d}=r;qu(i,"LRNGrad");const h=a.Mf.sizeFromShape(i.shape),p=i.shape[3],f=n.data.get(i.dataId).values,m=n.data.get(s.dataId).values,g=n.data.get(o.dataId).values,b=new Float32Array(h),y=h;for(let a=0;a<y;a++){const e=a%p,t=a-e+Math.max(0,e-c),n=a-e+Math.min(p,e+c+1);let r=0;for(let a=t;a<n;a++)r+=Math.pow(m[a],2);r=l*r+u;for(let s=t;s<n;s++){let e=-2*l*d*m[s]*g[a]/r;a===s&&(e+=Math.pow(r,-d)),e*=f[a],b[s]+=e}}return n.makeTensorInfo(i.shape,s.dtype,b)}};function Wp(e,t,n,r){const s=a.Mf.getTypedArrayFromDType(r,a.Mf.sizeFromShape(n));for(let a=0;a<s.length;++a){const n=a*t;let r=e[n];for(let a=0;a<t;++a){const t=e[n+a];(Number.isNaN(t)||t>r)&&(r=t)}s[a]=r}return s}function Up(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:o,keepDims:i}=r,c=n;let u=s.shape;const l=u.length,d=a.Mf.parseAxisParam(o,u);let h=d;const p=a.Ed.getAxesPermutation(h,l);let f=c.data.get(s.dataId).values;if(null!=p){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[p[t]];f=Ul(f,u,s.dtype,p,e),h=a.Ed.getInnerMostAxes(h.length,l),u=e}qu(s,"max"),a.Ed.assertAxesAreInnerMostDims("max",h,l);const[m,g]=a.Ed.computeOutAndReduceShapes(u,h),b=Wp(f,a.Mf.sizeFromShape(g),m,s.dtype),y=c.write(b,m,s.dtype);let v=m;if(i){v=a.Ed.expandShapeToKeepDim(m,d)}return{dataId:y,shape:v,dtype:s.dtype}}const Vp={kernelName:a.Mb,backendName:"cpu",kernelFunc:Up},Gp=al((e,t)=>Math.max(e,t)),Hp=Sl(a.Sb,Gp),qp={kernelName:a.Sb,backendName:"cpu",kernelFunc:Hp};const Kp={kernelName:a.Nb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;qu(s,"maxPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:u}=r;a.Mf.assert(a.Ed.eitherStridesOrDilationsAreOne(i,1),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const l=a.Ed.computePool2DInfo(s.shape,o,i,1,c,u);let d;if(1===l.filterWidth&&1===l.filterHeight&&a.Mf.arraysEqual(l.inShape,l.outShape))d=el({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=a.Mf.computeStrides(s.shape),r=od(e,s.shape,s.dtype,t,l,"max");d=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return d}};const Xp={kernelName:a.Ob,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:u,dataFormat:l}=r;qu(s,"maxPool3d");const d=a.Ed.computePool3DInfo(s.shape,o,i,1,c,u,l),h=cd(n.data.get(s.dataId).values,s.shape,s.dtype,a.Mf.computeStrides(s.shape),d,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Yp={kernelName:a.Pb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o}=t,{filterSize:i,strides:c,pad:u,dimRoundingMode:l}=r;qu([s,o],"maxPool3DGrad");const d=a.Ed.computePool3DInfo(o.shape,i,c,1,u,l),h=function(e,t){const n=Object(a.Ld)(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let a=0;a<t.batchSize;++a)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){const y=b*r-p;let v=y;for(;v<0;)v+=i;const x=Math.min(t.inDepth,l+y);for(let r=0;r<t.outHeight;++r){const l=r*s-f;let p=l;for(;p<0;)p+=c;const w=Math.min(t.inHeight,d+l);for(let s=0;s<t.outWidth;++s){const f=s*o-m;let O=f;for(;O<0;)O+=u;const k=Math.min(t.inWidth,h+f);let S=Number.NEGATIVE_INFINITY,I=-1;for(let t=v;t<x;t+=i){const n=t-y;for(let r=p;r<w;r+=c){const s=r-l;for(let o=O;o<k;o+=u){const i=o-f,c=e.get(a,t,r,o,g);c>=S&&(S=c,I=n*d*h+s*d+i)}}}n.set(I,a,b,r,s,g)}}}return n}(n.bufferSync(o),d),p=d.strideDepth,f=d.strideHeight,m=d.strideWidth,g=d.dilationDepth,b=d.dilationHeight,y=d.dilationWidth,v=d.effectiveFilterDepth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,O=v-1-d.padInfo.front,k=w-1-d.padInfo.left,S=x-1-d.padInfo.top,I=Object(a.Ld)(o.shape,"float32"),N=n.bufferSync(s);for(let a=0;a<d.batchSize;++a)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=t-O,o=n-S,i=r-k;let c=0;for(let t=0;t<v;t+=g){const n=(s+t)/p;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let r=0;r<x;r+=b){const s=(o+r)/f;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let o=0;o<w;o+=y){const u=(i+o)/m;if(u<0||u>=d.outWidth||Math.floor(u)!==u)continue;const l=v*x*w-1-h.get(a,n,s,u,e)===t*x*w+r*w+o?1:0;if(0===l)continue;c+=N.get(a,n,s,u,e)*l}}}I.set(c,a,t,n,r,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const Qp={kernelName:a.Qb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o,output:i}=t,c=o;qu([o,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:d,dimRoundingMode:h}=r,p=a.Ed.computePool2DInfo(c.shape,u,l,1,d,h),f=n.data.get(c.dataId).values,m=Object(a.Ld)(p.outShape,c.dtype,id(f,c.shape,c.dtype,p).values),g=p.strideHeight,b=p.strideWidth,y=p.dilationHeight,v=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,O=w-1-p.padInfo.left,k=x-1-p.padInfo.top,S=Object(a.Ld)(c.shape,"float32"),I=n.data.get(s.dataId).values,N=Object(a.Ld)(s.shape,"float32",I);for(let a=0;a<p.batchSize;++a)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const r=t-k,s=n-O;let o=0;for(let t=0;t<x;t+=y){const n=(r+t)/g;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let r=0;r<w;r+=v){const i=(s+r)/b;if(i<0||i>=p.outWidth||Math.floor(i)!==i)continue;const c=x*w-1-m.get(a,n,i,e)===t*w+r?1:0;if(0===c)continue;o+=N.get(a,n,i,e)*c}}S.set(o,a,t,n,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const Zp={kernelName:a.Rb,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,{filterSize:o,strides:i,pad:c,includeBatchInIndex:u}=n,l=r;qu(s,"MaxPoolWithArgmax");const d=l.data.get(s.dataId).values,h=a.Ed.computePool2DInfo(s.shape,o,i,[1,1],c),[p,f]=function(e,t,n,r,s){const o=od(e,0,n,a.Mf.computeStrides(t),s,"max"),i=id(e,t,n,s,!0,r);return[o.values,i.values]}(d,s.shape,s.dtype,u,h),m=l.write(p,h.outShape,s.dtype),g=l.write(f,h.outShape,s.dtype);return[{dataId:m,shape:h.outShape,dtype:s.dtype},{dataId:g,shape:h.outShape,dtype:"int32"}]}};const Jp={kernelName:a.Tb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r,c=a.Mf.parseAxisParam(o,s.shape),u=a.Ed.computeOutAndReduceShapes(s.shape,c)[1],l=a.Mf.sizeFromShape(u),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));d.push(h);const p=Ol({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});d.push(p);const f=Mh({inputs:{a:p,b:h},backend:n});d.push(f);const m=dh({inputs:{x:f},backend:n,attrs:{axis:o,keepDims:i}});return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}};const $p={kernelName:a.Ub,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r;qu(s,"min");const c=a.Mf.parseAxisParam(o,s.shape);let u=c;const l=a.Ed.getAxesPermutation(u,s.shape.length);let d=s;null!=l&&(d=Vl({inputs:{x:s},backend:n,attrs:{perm:l}}),u=a.Ed.getInnerMostAxes(u.length,s.shape.length)),a.Ed.assertAxesAreInnerMostDims("min",u,d.shape.length);const[h,p]=a.Ed.computeOutAndReduceShapes(d.shape,u),f=a.Mf.sizeFromShape(p),m=a.Mf.makeZerosTypedArray(a.Mf.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let a=0;a<m.length;++a){const e=a*f;let t=g[e];for(let n=0;n<f;++n){const r=g[e+n];(Number.isNaN(r)||r<t)&&(t=r)}m[a]=t}null!=l&&n.disposeIntermediateTensorInfo(d);const b=n.makeTensorInfo(h,d.dtype,m);if(i){const e=Cl({inputs:{x:b},backend:n,attrs:{shape:a.Ed.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(b),e}return b}},ef=al((e,t)=>Math.min(e,t)),tf=Sl(a.Vb,ef),nf={kernelName:a.Vb,backendName:"cpu",kernelFunc:tf};const rf={kernelName:a.Wb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:o,mode:i}=r;qu(s,"mirrorPad");const c=o.map((e,t)=>e[0]+s.shape[t]+e[1]),u=o.map(e=>e[0]),l=o.map((e,t)=>e[0]+s.shape[t]),d="reflect"===i?0:1,h=n.data.get(s.dataId).values,p=s.shape.length,f=a.Mf.computeStrides(s.shape),m=a.Mf.sizeFromShape(c),g=c.length,b=a.Mf.computeStrides(c),y=a.Mf.getTypedArrayFromDType(s.dtype,m);for(let v=0;v<m;v++){let e=a.Mf.indexToLoc(v,g,b);for(let n=0;n<g;n++)e[n]<u[n]?e[n]=2*u[n]-e[n]-d:e[n]>=l[n]&&(e[n]=2*(l[n]-1)-e[n]+d);e=e.map((e,t)=>e-u[t]);const t=a.Mf.locToIndex(e,p,f);y[v]=h[t]}return{dataId:n.write(y,c,s.dtype),shape:c,dtype:s.dtype}}},af=al((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),sf=Sl(a.Xb,af),of={kernelName:a.Xb,backendName:"cpu",kernelFunc:sf};function cf(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:o}=r,i=s.shape.length;let c=o;if(-1===c&&(c=i-1),c!==i-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(i," and dim was ").concat(c));const u=a.Mf.parseAxisParam([c],s.shape),l=Up({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),d=a.Ed.expandShapeToKeepDim(l.shape,u),h=Cl({inputs:{x:l},backend:n,attrs:{shape:d}}),p=Ph({inputs:{a:s,b:h},backend:n}),f=Th({inputs:{x:p},backend:n}),m=dh({inputs:{x:f},backend:n,attrs:{axis:u,keepDims:!1}}),g=Cl({inputs:{x:m},backend:n,attrs:{shape:d}}),b=Mh({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),b}const uf={kernelName:a.Oc,backendName:"cpu",kernelFunc:cf};const lf={kernelName:a.Yb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:o,seed:i,normalized:c}=r;qu(s,"multinomial");const u=c?s:cf({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],d=u.shape[1],h=n.data.get(u.dataId).values,p=[l,o],f=a.Mf.makeZerosTypedArray(a.Mf.sizeFromShape(p),"int32");for(let a=0;a<l;++a){const e=a*d,t=new Float32Array(d-1);t[0]=h[e];for(let a=1;a<t.length;++a)t[a]=t[a-1]+h[e+a];const n=Pu.alea(i.toString()),r=a*o;for(let a=0;a<o;++a){const e=n();f[r+a]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){f[r+a]=n;break}}}return c||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",f)}};function df(e,t,n){const r=a.Mf.createScalarValue(-1,n);return ih([],t,r,e,n)}const hf={kernelName:a.ac,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;qu(r,"neg");const a=n.data.get(r.dataId).values,[s,o]=df(a,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,s)}},pf=a.ve.nonMaxSuppressionV3Impl;const ff={kernelName:a.bc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=r;qu(a,"NonMaxSuppression");const u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,{selectedIndices:d}=pf(u,l,o,i,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},mf=a.ve.nonMaxSuppressionV4Impl;const gf={kernelName:a.cc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:u}=r;qu(a,"NonMaxSuppressionPadded");const l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:p}=mf(l,d,o,i,c,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},bf=a.ve.nonMaxSuppressionV5Impl;const yf={kernelName:a.dc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:u}=r;qu(a,"NonMaxSuppressionWithScore");const l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,h=o,p=i,f=c,m=u,{selectedIndices:g,selectedScores:b}=bf(l,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},vf=al((e,t)=>e!==t?1:0),xf=Sl(a.ec,vf,null,"bool"),wf={kernelName:a.ec,backendName:"cpu",kernelFunc:xf};const Of={kernelName:a.fc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:o,depth:i,onValue:c,offValue:u}=r;qu(s,"oneHot");const l=a.Mf.sizeFromShape(s.shape),d=new Float32Array(l*i);d.fill(u);const h=n.data.get(s.dataId).values;for(let a=0;a<l;++a)h[a]>=0&&h[a]<i&&(d[a*i+h[a]]=c);return n.makeTensorInfo([...s.shape,i],o,d)}};function kf(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=vl({inputs:{input:r},backend:n}),t=kf({inputs:{x:e},backend:n}),a=Rd({inputs:{input:r},backend:n}),s=kf({inputs:{x:a},backend:n}),o=gl({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return Gh({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Sf={kernelName:a.ud,backendName:"cpu",kernelFunc:kf};const If={kernelName:a.gc,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=vl({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=Rd({inputs:{input:a},backend:r}),o=kf({inputs:{x:s},backend:r}),i=gl({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),i}return Gh({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function Nf(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return Eh({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const o=t[0].shape,i=t[0].dtype;t.forEach(e=>{a.Mf.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),a.Mf.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],u=_d({inputs:t.map(e=>{const t=Eh({inputs:{input:e},backend:n,attrs:{dim:s}});return c.push(t),t}),backend:n,attrs:{axis:s}});return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}const Tf={kernelName:a.ic,backendName:"cpu",kernelFunc:Nf};const jf={kernelName:a.jc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:o,constantValue:i}=r;qu(s,"pad");const c=o.map((e,t)=>e[0]+s.shape[t]+e[1]),u=o.map(e=>e[0]),l=n.data.get(s.dataId).values,d=a.Mf.sizeFromShape(s.shape),h=s.shape.length,p=a.Mf.computeStrides(s.shape),f=a.Mf.sizeFromShape(c),m=c.length,g=a.Mf.computeStrides(c),b=a.Mf.getTypedArrayFromDType(s.dtype,f);0!==i&&b.fill(i);for(let y=0;y<d;y++){const e=a.Mf.indexToLoc(y,h,p).map((e,t)=>e+u[t]);b[a.Mf.locToIndex(e,m,g)]=l[y]}return{dataId:n.write(b,c,s.dtype),shape:c,dtype:s.dtype}}},Ef=al((e,t)=>Math.pow(e,t)),Cf=Sl(a.kc,Ef),Af={kernelName:a.kc,backendName:"cpu",kernelFunc:Cf};function Rf(e,t,n,r){const[s,o]=a.Ed.computeOutAndReduceShapes(e,r),i=Object(a.Lf)(t,"int32"),c=a.Mf.makeZerosTypedArray(a.Mf.sizeFromShape(s),i),u=a.Mf.sizeFromShape(o);for(let a=0;a<c.length;++a){const e=a*u;let t=1;for(let r=0;r<u;++r)t*=n[e+r];c[a]=t}return{outVals:c,outShape:s,outDtype:i}}const Ff={kernelName:a.mc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r;qu(s,"prod");const c=s.shape.length,u=a.Mf.parseAxisParam(o,s.shape),l=a.Ed.getAxesPermutation(u,c);let d=u,h=s;const p=[];null!=l&&(h=Vl({inputs:{x:s},backend:n,attrs:{perm:l}}),p.push(h),d=a.Ed.getInnerMostAxes(d.length,c));const f=n.data.get(h.dataId).values,{outVals:m,outShape:g,outDtype:b}=Rf(h.shape,h.dtype,f,d);let y=g;return i&&(y=a.Ed.expandShapeToKeepDim(g,u)),p.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(y,b,m)}};function _f(e,t,n,r){const a=[];let s=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map(()=>[0]);!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],a=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let c=1;for(let u=0;u<t.length-1;++u){c*=t[u];const e=t[u+1];for(let t=1;t<c+1;++t)i[u].push(t*e)}for(let u=0;u<e.length;++u){let r=e[u],o=e[u]+1;for(let e=0;e<n.length;++e){const a=n[e],s=e+t.length-1;if(s>=0){const e=i[s],t=e[e.length-1]-a[r];for(let n=r;n<o;++n)i[s].push(a[n+1]+t)}r=a[r],o=a[o]}o!==r&&(a.push([r,o]),s+=o-r)}return{outSplits:i,valueSlices:a,numValues:s}}function Mf(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function Df(e,t,n,r,s){const o=t.slice();o[0]=s;const i=a.Mf.getArrayFromDType(n,a.Mf.sizeFromShape(o)),c=e.length;return function(e,t,n,r,a,s){const o=Mf(t,2)[1],i=Mf(s,2)[1];let c=0;for(const u of n)for(let t=u[0];t<u[1];++t){for(let n=0;n<r;++n)a[c*i+n]=e[t*o+n];++c}}(e,t,r,0===c?0:c/t[0],i,o),[i,o]}function Lf(e,t,n,r,s,o,i,c){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach((e,r)=>{if(e<0||e>=n){const s=a.Mf.indexToLoc(r,t.length,a.Mf.computeStrides(t)).join(",");throw new Error("indices[".concat(s,"] = ").concat(e," is not in [0, ").concat(n,")"))}})}(o,i,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:l,valueSlices:d,numValues:h}=_f(o,i,e,u),p=function(e){const t=[];for(let n=0;n<e.length;++n){const r=e[n].length,s=a.Mf.getArrayFromDType("int32",r);t.push(s),e[n].forEach((e,t)=>s[t]=e)}return t}(l),f=Df(n,r,s,d,h);return[p,f[0],f[1]]}const zf={kernelName:a.nc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=r,c=a.map(e=>n.data.get(e.dataId).values),u=a.map(e=>e.shape),l=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,[h,p,f]=Lf(c,u,l,s.shape,s.dtype,d,o.shape),m=h.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}};function Pf(e,t,n,r,s,o,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const c=0===t.length,u=0===s.length,l=0===i.length,d=[];c||d.push(t[0]),u||d.push(s[0]),l||d.push(i[0]);for(let a=1;a<d.length;++a)if(d[a]!==d[a-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===d.length?1:d[0],p=a.Mf.getArrayFromDType("int32",h+1);p[0]=0;for(let a=0;a<h;++a){const t=c?e[0]:e[a],n=u?r[0]:r[a],s=l?o[0]:o[a];if(0===s)throw new Error("Requires delta != 0");let i;if(s>0&&n<t||s<0&&n>t)i=0;else if(i=Math.ceil(Math.abs((n-t)/s)),i>2147483647)throw new Error("Requires ((limit - start) / delta) <= ".concat(2147483647));p[a+1]=p[a]+i}const f=p[h],m=a.Mf.getArrayFromDType(n,f);let g=0;for(let a=0;a<h;++a){const t=p[a+1]-p[a];let n=c?e[0]:e[a];const r=l?o[0]:o[a];for(let e=0;e<t;++e)m[g++]=n,n+=r}return[p,m]}const Bf={kernelName:a.oc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,[u,l]=Pf(o,r.shape,r.dtype,i,a.shape,c,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([l.length],r.dtype,l)]}};var Wf=a.Ed.RowPartitionType;class Uf{constructor(e,t,n,r,s,o,i,c,u,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=o,this.defaultValueShape=i,this.rowPartitionValues=c,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=a.Ed.getRowPartitionTypesHelper(l),this.raggedRank=a.Ed.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Wf.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Wf.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Wf.VALUE_ROWIDS:return Uf.getMaxWidthValueRowID(t);case Wf.ROW_SPLITS:return Uf.getMaxWidthRowSplit(t);default:throw new Error("Cannot handle partition type ".concat(Wf[this.getRowPartitionTypeByDimension(e-1)]))}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],a=0;for(let s=1;s<t;++s){const t=e[s];t!==r&&(r=t,a=Math.max(s-n,a),n=s)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Gf(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;a.Ed.validateDefaultValueShape(n,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=a.Ed.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);s[0]<0&&(s[0]=e);for(let a=1;a<=this.raggedRank;++a)s[a]<0&&(s[a]=this.getMaxWidth(a));return s}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let o=0;for(let a=0;a<r;++a,o+=t)s.push(o);for(let a=r;a<e;++a)s.push(-1);return a.Mf.assert(s.length===e,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(e,t,n,r){const a=e.length,s=[];for(let o=0;o<a-1;++o){const a=e[o+1]-e[o];let i=Math.min(r,a),c=t[o];-1===c&&(i=0);for(let e=0;e<i;++e)s.push(c),c+=n;for(let e=0;e<a-i;++e)s.push(-1)}if(a>0&&s.length!==e[a-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,r){const a=e.length,s=[];if(0===a)return[];let o=0,i=e[0];if(i>=t.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(t.length));let c=t[i];s.push(c);for(let u=1;u<a;++u){const a=e[u];if(a===i)c>=0&&(++o,o<r?c+=n:c=-1);else{if(o=0,i=a,a>=t.length)throw new Error("Got nextValueRowId=".concat(a," which is not less than ").concat(t.length));c=t[a]}s.push(c)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,r){const a=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case Wf.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case Wf.ROW_SPLITS:if(a.length-1>t.length)throw new Error("Row partition size is greater than output size: ".concat(a.length-1," > ").concat(t.length));return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error("Unsupported partition type: ".concat(Wf[s]))}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Wf.FIRST_DIM_SIZE:return e[0];case Wf.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Wf.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(Wf[t]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let a=n.length-2;a>=0;--a)n[a]=n[a+1]*t[a+1];const r=Gf(t,!1),s=a.Mf.getArrayFromDType(this.valuesDType,a.Mf.sizeFromShape(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){a=this.calculateOutputIndex(e-1,a,n[e],t[e])}this.setOutput(this.raggedRank,a,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,o=n;let i=r.slice();i=i.slice(e+1);const c=a.Mf.sizeFromShape(i),u=t.length;let l=this.defaultValue;if(l.length!==c&&1!==l.length){const e=this.defaultValueShape;Object(a.Ff)(()=>{const t=Object(a.df)(l,e),n=Object(a.Id)(t,i);l=n.dataSync()})}let d=0,h=0,p=0;for(let a=0;a<=u;++a){let e=a<u?t[a]:-1;if(e!==p){if(h<p){const e=s.subarray(d*c);Vf(o.subarray(h*c),e,(p-h)*c)}if(a>=u){const t=n.length;e=Math.floor(t/c)}if(e>p)if(1===this.defaultValue.length)o.subarray(p*c,e*c).fill(this.defaultValue[0]),p=e;else for(;e>p;){Vf(o.slice(p*c),l,c),++p}e<0?(d=a+1,h=p):(d=a,h=p,p=h+1)}else++p}}}function Vf(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function Gf(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error("Dimension ".concat(r," must be >= 0"));if(r<-1)throw new Error("Dimension ".concat(r," must be >= -1"));r=-1}n.push(r)}return n}function Hf(e,t,n,r,a,s,o,i,c,u){return new Uf(e,t,n,r,a,s,o,i,c,u).compute()}const qf={kernelName:a.pc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=r,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,h=i.map(e=>n.data.get(e.dataId).values),p=i.map(e=>e.shape),[f,m]=Hf(u,a.shape,l,s.shape,s.dtype,d,o.shape,h,p,c);return n.makeTensorInfo(f,s.dtype,m)}};function Kf(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return a.Mf.makeZerosTypedArray(0,r);const s=Math.abs(Math.ceil((t-e)/n)),o=a.Mf.makeZerosTypedArray(s,r);t<e&&1===n&&(n=-1),o[0]=e;for(let a=1;a<o.length;a++)o[a]=o[a-1]+n;return o}const Xf={kernelName:a.qc,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:o}=n,i=Kf(r,a,o,s);return t.makeTensorInfo([i.length],s,i)}},Yf=Qu(a.tc,e=>1/e),Qf={kernelName:a.tc,backendName:"cpu",kernelFunc:Yf};const Zf={kernelName:a.xc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:i,size:c}=r;qu(s,"resizeBilinear");const u=a.Mf.computeStrides(s.shape),[l,d]=c,[h,p,f,m]=s.shape,g=n.data.get(s.dataId).values,b=new Float32Array(a.Mf.sizeFromShape([h,l,d,m])),y=[o&&l>1?p-1:p,o&&d>1?f-1:f],v=[o&&l>1?l-1:l,o&&d>1?d-1:d];let x=0;const w=y[0]/v[0],O=y[1]/v[1];for(let a=0;a<h;a++)for(let e=0;e<l;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(p-1,Math.ceil(t)),o=a*u[0]+n*u[1],c=a*u[0]+s*u[1];for(let e=0;e<d;e++){let t;t=i?O*(e+.5)-.5:O*e;const n=Math.max(0,Math.floor(t)),a=t-n,s=Math.min(f-1,Math.ceil(t)),l=o+n*u[2],d=c+n*u[2],h=o+s*u[2],p=c+s*u[2];for(let e=0;e<m;e++){const t=g[l+e],n=g[d+e],s=t+(g[h+e]-t)*a,o=s+(n+(g[p+e]-n)*a-s)*r;b[x++]=o}}}return n.makeTensorInfo([h,l,d,m],"float32",b)}};const Jf={kernelName:a.yc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:o}=t,{alignCorners:i}=r;qu([o,s],"resizeBilinearGrad");const c=a.Mf.computeStrides(s.shape),[u,l,d,h]=s.shape,[,p,f]=o.shape,m=new Float32Array(u*l*d*h),g=[i&&p>1?l-1:l,i&&f>1?d-1:d],b=[i&&p>1?p-1:p,i&&f>1?f-1:f],y=g[0]/b[0],v=g[1]/b[1],x=n.data.get(o.dataId).values;let w=0;for(let a=0;a<u;a++){const e=a*c[0];for(let t=0;t<p;t++){const n=t*y,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),s=e+r*c[1],o=e+a*c[1],i=n-r,u=1-i;for(let e=0;e<f;e++){const t=e*v,n=Math.floor(t),r=Math.min(Math.ceil(t),d-1),a=t-n,l=1-a,p=s+n*c[2],f=s+r*c[2],g=o+n*c[2],b=o+r*c[2],y=u*l,O=u*a,k=i*l,S=i*a;for(let e=0;e<h;e++){const t=x[w++];m[p+e]+=t*y,m[f+e]+=t*O,m[g+e]+=t*k,m[b+e]+=t*S}}}}return n.makeTensorInfo([u,d,l,h],"float32",m)}};const $f={kernelName:a.zc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:i,size:c}=r;qu(s,"resizeNearestNeighbor");const u=a.Mf.computeStrides(s.shape),[l,d]=c,[h,p,f,m]=s.shape,g=n.data.get(s.dataId).values,b=new Float32Array(h*l*d*m),y=[o&&l>1?p-1:p,o&&d>1?f-1:f],v=[o&&l>1?l-1:l,o&&d>1?d-1:d],x=y[0]/v[0],w=y[1]/v[1];let O=0;for(let a=0;a<h;a++){const e=a*u[0];for(let t=0;t<l;t++){const n=i?x*(t+.5):x*t;let r=Math.min(p-1,o?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=e+r*u[1];for(let e=0;e<d;e++){const t=i?w*(e+.5):w*e;let n=Math.min(f-1,o?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<m;e++){const t=g[r+e];b[O++]=t}}}}return n.makeTensorInfo([h,l,d,m],s.dtype,b)}};const em={kernelName:a.Ac,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:o}=t,{alignCorners:i}=r;qu([o,s],"resizeNearestNeighborGrad");const c=a.Mf.computeStrides(s.shape),u=a.Mf.computeStrides(o.shape),[l,d,h,p]=s.shape,[,f,m]=o.shape,g=new Float32Array(l*d*h*p),b=n.data.get(o.dataId).values,y=[i&&f>1?d-1:d,i&&m>1?h-1:h],v=[i&&f>1?f-1:f,i&&m>1?m-1:m],x=y[0]/v[0],w=y[1]/v[1],O=1/x,k=1/w,S=2*Math.ceil(O)+2,I=2*Math.ceil(k)+2;for(let a=0;a<l;a++){const e=a*c[0];for(let t=0;t<d;t++){const n=e+t*c[1],r=Math.floor(t*O),a=Math.floor(r-S/2);for(let s=0;s<h;s++){const r=n+s*c[2],o=Math.floor(s*k),l=Math.floor(o-I/2);for(let n=0;n<p;n++){let o=0;for(let r=0;r<S;r++){const c=r+a;if(c<0||c>=f)continue;const p=e+c*u[1],g=c*x;if(t===Math.min(d-1,i?Math.round(g):Math.floor(g)))for(let e=0;e<I;e++){const t=e+l;if(t<0||t>=m)continue;const r=p+t*u[2],a=t*w;s===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=b[r+n])}}g[r+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,g)}};const tm={kernelName:a.Bc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:o}=r;qu(s,"reverse");const i=s.shape.length,c=a.Mf.parseAxisParam(o,s.shape);if(0===i)return el({inputs:{x:s},backend:n});const u=new a.ld(s.shape,s.dtype),l=n.bufferSync(s);for(let a=0;a<u.size;a++){const e=u.indexToLoc(a),t=e.slice();c.forEach(e=>t[e]=s.shape[e]-1-t[e]),u.set(l.get(...t),...e)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},nm={kernelName:a.Cc,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:s}=t,{radians:o,fillValue:i,center:c}=n,u=r,l=a.Mf.getTypedArrayFromDType(s.dtype,a.Mf.sizeFromShape(s.shape)),[d,h,p,f]=s.shape,[m,g]=a.Ed.getImageCenter(c,h,p),b=Math.sin(o),y=Math.cos(o),v=u.data.get(s.dataId).values;for(let a=0;a<d;a++){const e=a*p*h*f;for(let t=0;t<h;t++){const n=t*(p*f);for(let r=0;r<p;r++){const a=r*f;for(let s=0;s<f;s++){const o=[d,t,r,s],c=o[2],u=o[1];let x=(c-m)*y-(u-g)*b,w=(c-m)*b+(u-g)*y;x=Math.round(x+m),w=Math.round(w+g);let O=i;if("number"!==typeof i&&(O=3===s?255:i[s]),x>=0&&x<p&&w>=0&&w<h){O=v[e+w*(p*f)+x*f+s]}l[e+n+a+s]=O}}}}return{dataId:u.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},rm=Qu(a.Dc,e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),am={kernelName:a.Dc,backendName:"cpu",kernelFunc:rm},sm=Yu(e=>1/Math.sqrt(e)),om=Zu(a.Ec,sm),im={kernelName:a.Ec,backendName:"cpu",kernelFunc:om};function cm(e,t,n,r,s,o,i,c,u,l){const d=[r/s,s],h=e.values,p=t.values;if(0===r)return Object(a.Ld)(n,t.dtype);const f=u instanceof a.ld?u:Object(a.Ld)(d,t.dtype);"string"===typeof u||"number"===typeof u?f.values.fill(u):"boolean"===typeof u&&f.values.fill(+u);for(let a=0;a<o;a++){const e=[];let o=0;for(let t=0;t<i;t++){const n=h[a*i+t];e.push(n),o+=n*c[t]}if(o<0||o>=r/s)throw new Error("Invalid indices: ".concat(e," does not index into ").concat(n));for(let n=0;n<s;n++)l?f.values[o*s+n]+=p[a*s+n]:f.values[o*s+n]=0===t.rank?p[0]:p[a*s+n]}return f}const um={kernelName:a.Fc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:o}=t,{shape:i}=r,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:h}=a.Ed.calculateShapes(o,s,i),p=cm(n.bufferSync(s),n.bufferSync(o),i,h,l,u,c,d,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}};function lm(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function dm(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}const hm={kernelName:a.Gc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:o}=t,{side:i}=r,c=function(e,t,n,r,s,o){const i=a.Mf.getArrayFromDType("int32",n*s);for(let a=0;a<n;++a){const n=e.slice(a*r,(a+1)*r),c=a*s;for(let e=0;e<s;++e)i[c+e]="left"===o?lm(n,t[e+c]):dm(n,t[e+c])}return i}(n.data.get(s.dataId).values,n.data.get(o.dataId).values,s.shape[0],s.shape[1],o.shape[1],i);return n.makeTensorInfo(o.shape,"int32",c)}};const pm={kernelName:a.Hc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:o}=t;qu([r,s,o],"select");const i=r.shape.length,c=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values,d=Object(a.Lf)(s.dtype,o.dtype),h=a.Mf.makeZerosTypedArray(a.Mf.sizeFromShape(s.shape),d);let p=0;const f=0===i||i>1||1===s.shape.length?1:a.Mf.sizeFromShape(s.shape.slice(1));for(let a=0;a<c.length;a++)for(let e=0;e<f;e++)1===c[a]?h[p++]=u[a]:h[p++]=l[a];return n.makeTensorInfo(s.shape,d,h)}},fm=a.Ed.SELU_SCALEALPHA,mm=a.Ed.SELU_SCALE,gm=Qu(a.Ic,e=>e>=0?mm*e:fm*(Math.exp(e)-1)),bm={kernelName:a.Ic,backendName:"cpu",kernelFunc:gm},ym=Qu(a.Kc,e=>e<0?-1:e>0?1:0),vm={kernelName:a.Kc,backendName:"cpu",kernelFunc:ym},xm=Qu(a.Lc,e=>Math.sin(e)),wm={kernelName:a.Lc,backendName:"cpu",kernelFunc:xm},Om=Qu(a.Mc,e=>Math.sinh(e)),km={kernelName:a.Mc,backendName:"cpu",kernelFunc:Om},Sm=Math.log(1.1920928955078125e-7)+2,Im=Qu(a.Pc,e=>{const t=e>-Sm,n=e<Sm,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a}),Nm={kernelName:a.Pc,backendName:"cpu",kernelFunc:Im};const Tm={kernelName:a.Qc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:o,paddings:i}=r;qu([s],"spaceToBatchND");const c=a.Mf.sizeFromShape(o),u=[[0,0]];u.push(...i);for(let a=1+o.length;a<s.shape.length;++a)u.push([0,0]);const l=jf.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),d=a.Ed.getReshaped(l.shape,o,c,!1),h=a.Ed.getPermuted(d.length,o.length,!1),p=a.Ed.getReshapedPermuted(l.shape,o,c,!1),f=Cl({inputs:{x:l},backend:n,attrs:{shape:d}}),m=Vl({inputs:{x:f},backend:n,attrs:{perm:h}}),g=Cl({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function jm(e,t,n,r,s,o,i){const c=t[0],u=o[0],l=new Array(u),d=new Array(c),h=t[1];if(0===u){if(0!==c)throw new Error(a.Ed.getSparseFillEmptyRowsIndicesDenseShapeMismatch(c));return[a.Mf.getArrayFromDType(n,0),[0,h],a.Mf.getArrayFromDType(s,0),l,d]}let p=!0,f=0;const m=new Array(u).fill(0);for(let b=0;b<c;++b){const t=e[b*h];if(t<0)throw new Error(a.Ed.getSparseFillEmptyRowsNegativeIndexErrorMessage(b,t));if(t>=u)throw new Error(a.Ed.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(b,t,u));++m[t],p=p&&t>=f,f=t}let g=!0;for(let a=0;a<u;++a){const e=0===m[a];l[a]=e,g=g&&!e,m[a]=Math.max(m[a],1),a>0&&(m[a]+=m[a-1])}if(g&&p){const t=e,n=r;for(let e=0;e<c;++e)d[e]=e;return[t,[c,h],n,l,d]}{const t=m[u-1],o=a.Mf.getArrayFromDType(n,t*h),p=a.Mf.getArrayFromDType(s,t),f=new Array(u).fill(0);for(let n=0;n<c;++n){const t=e[n*h],a=f[t],s=(0===t?0:m[t-1])+a;f[t]++;for(let r=0;r<h;++r)o[s*h+r]=e[n*h+r];p[s]=r[n],d[n]=s}for(let e=0;e<u;++e){if(0===f[e]){const t=0===e?0:m[e-1];o[t*h+0]=e;for(let e=1;e<h;++e)o[t*h+e]=0;p[t]=i}}return[o,[t,h],p,l,d]}}const Em={kernelName:a.Rc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n        ".concat(s.shape));if(2!==r.shape.length)throw new Error("Indices must be a matrix, saw:\n        ".concat(r.shape));if(1!==a.shape.length)throw new Error("Values must be a vector, saw:\n        ".concat(a.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values[0],[d,h,p,f,m]=jm(i,r.shape,r.dtype,c,a.dtype,u,l);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function Cm(e,t,n,r,s){const o=a.Mf.sizeFromShape(r),i=t[0],c=s.length,u=[];let l=1,d=-1;for(let g=0;g<c;++g){const e=s[g];if(-1===e){if(-1!==d)throw new Error(a.Ed.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,g));d=g,u.push(1)}else{if(e<0)throw new Error(a.Ed.getSparseReshapeNegativeOutputDimErrorMessage(g,e));l*=e,u.push(e)}}if(-1!==d){if(l<=0)throw new Error(a.Ed.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(o/l);if(l*e!==o)throw new Error(a.Ed.getSparseReshapeInputOutputMultipleErrorMessage(r,u));u[d]=e}if(a.Mf.sizeFromShape(u)!==o)throw new Error(a.Ed.getSparseReshapeInputOutputMismatchErrorMessage(r,u));const h=r.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const f=[];if(c>0){f[c-1]=1;for(let e=c-2;e>=0;--e)f[e]=f[e+1]*u[e+1]}const m=a.Mf.getArrayFromDType(n,i*c);for(let a=0;a<i;++a){let t=0;for(let n=0;n<h;++n)t+=e[a*h+n]*p[n];for(let e=0;e<c;++e)m[a*c+e]=Math.trunc(t/f[e]),t%=f[e]}return[m,[i,c],u]}const Am={kernelName:a.Sc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(r.shape));if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(a.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.data.get(a.dataId).values),i=n.data.get(r.dataId).values,c=Array.from(n.data.get(s.dataId).values),[u,l,d]=Cm(i,r.shape,r.dtype,o,c);return[n.makeTensorInfo(l,r.dtype,u),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};function Rm(e,t,n,r,s){let o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const c=r.length,u=[t[0],e.length/t[0]],l=u[1],d=c>0?s[c-1]+1:0,h=d;if(h<0)throw new Error(a.Ed.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const p=t.slice();p[0]=h;const f=p.reduce((e,t)=>e*t,1),m=a.Mf.getArrayFromDType(n,f);if(0===c)return h>0&&m.fill(i),[m,p];if(h<=0)throw new Error(a.Ed.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let g=0,b=1,y=0,v=s[g];for(;;){let t=0;if(b<c){if(t=s[b],v===t){++b;continue}if(v>=t)throw new Error(a.Ed.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(v<0||v>=h)throw new Error(a.Ed.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(v,h));v>y&&m.fill(i,y*l,v*l);for(let n=g;n<b;++n){const t=r[n];if(t<0||t>=u[0])throw new Error(a.Ed.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,r[n],u[0]));for(let n=0;n<l;n++)m[v*l+n]+=e[t*l+n]}if(o)for(let e=0;e<l;e++)m[v*l+e]/=b-g;if(g=b,++b,y=v+1,v=t,b>c)break}return y<h&&m.fill(i,y*l,h*l),[m,p]}const Fm={kernelName:a.Tc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n          ".concat(a.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n          ".concat(s.shape));if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,[u,l]=Rm(o,r.shape,r.dtype,i,c,!0);return n.makeTensorInfo(l,r.dtype,u)}};const _m={kernelName:a.Uc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n         ".concat(a.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n         ".concat(s.shape));if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,[u,l]=Rm(o,r.shape,r.dtype,i,c);return n.makeTensorInfo(l,r.dtype,u)}};const Mm={kernelName:a.Vc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:o,defaultValue:i}=t,{outputShape:c}=r,{sliceRank:u,numUpdates:l,sliceSize:d,strides:h,outputSize:p}=a.Ed.calculateShapes(o,s,c),f=n.bufferSync(s);let m;switch(o.dtype){case"bool":m=cm(f,n.bufferSync(o),c,p,d,l,u,h,Boolean(n.data.get(i.dataId).values[0]),!1);break;case"float32":m=cm(f,n.bufferSync(o),c,p,d,l,u,h,n.data.get(i.dataId).values[0],!1);break;case"int32":m=cm(f,n.bufferSync(o),c,p,d,l,u,h,n.data.get(i.dataId).values[0],!1);break;case"string":m=cm(f,n.bufferSync(o),c,p,d,l,u,h,a.Mf.decodeString(n.data.get(i.dataId).values[0]),!1);break;default:throw new Error("Unsupported type ".concat(o.dtype))}return n.makeTensorInfo(c,m.dtype,m.values)}};const Dm={kernelName:a.Wc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:o,axis:i}=r,c=a.Mf.parseAxisParam(i,s.shape)[0],u=a.Ed.prepareSplitSize(s,o,c),l=new Array(s.shape.length).fill(0),d=s.shape.slice();return u.map(e=>{const t=[...d];t[c]=e;const r=md({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[c]+=e,r})}},Lm=Yu(e=>Math.sqrt(e)),zm=Qu(a.Xc,e=>Math.sqrt(e)),Pm={kernelName:a.Xc,backendName:"cpu",kernelFunc:zm},Bm={kernelName:a.Yc,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:r}=t,a=n;qu(r,"square");const s=a.data.get(r.dataId).values,o=new Float32Array(s.length);for(let i=0;i<s.length;++i){const e=s[i];o[i]=e*e}return{dataId:a.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Wm=al((e,t)=>{const n=e-t;return n*n}),Um=Sl(a.Zc,Wm),Vm={kernelName:a.Zc,backendName:"cpu",kernelFunc:Um},Gm=Yu((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)}),Hm=Zu(a.ad,Gm),qm={kernelName:a.ad,backendName:"cpu",kernelFunc:Hm},Km=Qu(a.bd,(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),Xm={kernelName:a.bd,backendName:"cpu",kernelFunc:Km};function Ym(e,t,n,r){const s=Object(a.Ld)(e,t.dtype);for(let a=0;a<s.size;a++){const e=s.indexToLoc(a),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+r[t];s.set(t.get(...o),...e)}return s}const Qm={kernelName:a.cd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:o,end:i,strides:c,beginMask:u,endMask:l,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r;qu(s,"stridedSlice");const{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:y,begin:v,end:x,strides:w}=a.qf.sliceInfo(s.shape,o,i,c,u,l,d,h,p);let O;if(g)O=Cl({inputs:{x:s},backend:n,attrs:{shape:m}});else if(b||y){a.Mf.assert(s.shape.length>=1,()=>"Input must have rank at least 1, got: ".concat(s.shape.length));const e=a.qf.computeOutShape(v,x,w),t=md({inputs:{x:s},backend:n,attrs:{begin:v,size:e}});O=Cl({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{const e=Ym(f,n.bufferSync(s),w,v);O=n.makeTensorInfo(m,e.dtype,e.values)}return O}};class Zm{constructor(e,t,n,r,s,o){this.separator=a.Mf.encodeString(e),this.nGramWidths=t,this.leftPad=a.Mf.encodeString(n),this.rightPad=a.Mf.encodeString(r),this.padWidth=s,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let o=0;o<a;++o){const i=this.getPadWidth(s),c=Math.max(0,i-o),u=Math.max(0,i-(a-(o+1))),l=s-(c+u),d=t+(c>0?0:o-i);let h=0;h+=c*this.leftPad.length;for(let t=0;t<l;++t)h+=e[d+t].length;h+=u*this.rightPad.length;h+=(c+u+l-1)*this.separator.length,n[r+o]=new Uint8Array(h);const p=n[r+o];let f=0;const m=e=>e.forEach(e=>p[f++]=e);for(let e=0;e<c;++e)m(this.leftPad),m(this.separator);for(let t=0;t<l-1;++t)m(e[d+t]),m(this.separator);if(l>0){m(e[d+l-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got ".concat(e));for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error("Invalid split value ".concat(t[a],", must be in [").concat(e,", ").concat(n,"]"));e=t[a]}if(e!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(e))}const s=r-1,o=a.Mf.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let t=0;t<=s;++t)o[t]=0;return[e,o]}o[0]=0;for(let a=1;a<=s;++a){const e=t[a]-t[a-1];let n=0;this.nGramWidths.forEach(t=>{n+=this.getNumNGrams(e,t)}),this.preserveShort&&e>0&&0===n&&(n=1),o[a]=o[a-1]+n}const i=new Array(o[s]);for(let a=0;a<s;++a){const n=t[a];let r=o[a];if(this.nGramWidths.forEach(s=>{const o=t[a+1]-t[a],c=this.getNumNGrams(o,s);this.createNGrams(e,n,i,r,c,s),r+=c}),this.preserveShort&&r===o[a]){const s=t[a+1]-t[a];if(0===s)continue;const o=s+2*this.padWidth,c=1;this.createNGrams(e,n,i,r,c,o)}}return[i,o]}}function Jm(e,t,n,r,a,s,o,i){return new Zm(n,r,a,s,o,i).compute(e,t)}const $m={kernelName:a.dd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:u}=r,{data:l,dataSplits:d}=t,h=n.data.get(l.dataId).values,p=n.data.get(d.dataId).values,[f,m]=Jm(h,p,a,s,o,i,c,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};function eg(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function tg(e,t,n){const r=e.length,s=[];let o=0,i=0;const c=new Array(r);for(let a=0;a<r;++a){const r=s.length;eg(e[a],t,n,s);const u=s.length-r;c[a]=u,o+=u,i=Math.max(i,u)}const u=a.Mf.getArrayFromDType("int32",2*o),l=new Array(o),d=[r,i];let h=0;for(let a=0;a<r;++a)for(let e=0;e<c[a];++e)u[2*h]=a,u[2*h+1]=e,l[h]=s[h],++h;return[u,l,d]}const ng={kernelName:a.ed,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values[0],[u,l,d]=tg(i,c,a),h=l.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};function rg(e,t){const n=a.Mf.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=a.Mf.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}const ag={kernelName:a.fd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const o=rg(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",o)}},sg=Qu(a.id,e=>Math.tan(e)),og={kernelName:a.id,backendName:"cpu",kernelFunc:sg},ig=Qu(a.jd,e=>Math.tanh(e)),cg={kernelName:a.jd,backendName:"cpu",kernelFunc:ig};const ug={kernelName:a.md,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:s,updates:o}=t,{sliceRank:i,numUpdates:c,sliceSize:u,strides:l,outputSize:d}=a.Ed.calculateShapes(o,s,r.shape),h=n.bufferSync(s),p=n.bufferSync(o),f=n.bufferSync(r),m=cm(h,p,r.shape,d,u,c,i,l,f,!1);return n.makeTensorInfo(r.shape,m.dtype,m.values)}};function lg(e,t){const n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];const r=Object(a.Ld)(n,e.dtype);for(let a=0;a<r.values.length;++a){const t=r.indexToLoc(a),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const s=e.locToIndex(n);r.values[a]=e.values[s]}return r}const dg={kernelName:a.nd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;qu(a,"tile");const o=lg(n.bufferSync(a),s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},hg=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function pg(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,o=Math.log(a),i=.5*Math.exp(2*o/3),c=.5*Math.sqrt(o*i*(a-i)/a)*Math.sign(s-a/2);pg(e,t,Math.max(n,Math.floor(t-s*i/a+c)),Math.min(r,Math.floor(t+(a-s)*i/a+c)))}const s=e[t];let o=n,i=r;for(a.Mf.swap(e,n,t),hg(e[r],s)>0&&a.Mf.swap(e,n,r);o<i;){for(a.Mf.swap(e,o,i),o++,i--;hg(e[o],s)<0;)o+=1;for(;hg(e[i],s)>0;)i-=1}0===hg(e[n],s)?a.Mf.swap(e,n,i):(i+=1,a.Mf.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function fg(e,t,n,r,s){const o=t[t.length-1],[i,c]=[e.length/o,o],u=a.Mf.getTypedArrayFromDType(n,i*r),l=a.Mf.getTypedArrayFromDType("int32",i*r);for(let a=0;a<i;a++){const t=a*c,n=e.subarray(t,t+c);let o=new Array(n.length);n.forEach((e,t)=>o[t]={value:e,index:t}),r<o.length&&(pg(o,r),o=o.slice(0,r)),s&&o.sort(hg);const i=a*r,d=u.subarray(i,i+r),h=l.subarray(i,i+r);for(let e=0;e<r;e++)d[e]=o[e].value,h[e]=o[e].index}const d=t.slice();return d[d.length-1]=r,[Object(a.Ld)(d,n,u),Object(a.Ld)(d,"int32",l)]}const mg={kernelName:a.od,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:o}=r;qu(a,"topk");const i=n.data.get(a.dataId).values,[c,u]=fg(i,a.shape,a.dtype,s,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};const gg={kernelName:a.pd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:o}=t,{interpolation:i,fillMode:c,fillValue:u,outputShape:l}=n,[d,h,p,f]=s.shape,[m,g]=null!=l?l:[h,p],b=[d,m,g,f],y=a.Mf.computeStrides(s.shape),v=y[0],x=y[1],w=y[2],O=a.Mf.computeStrides(b),k=O[0],S=O[1],I=O[2],N=a.Mf.getTypedArrayFromDType(s.dtype,a.Mf.sizeFromShape(b));N.fill(u);const T=r.data.get(s.dataId).values,j=r.data.get(o.dataId).values;for(let a=0;a<d;++a){const e=1===o.shape[0]?j:j.subarray(8*a,8*a+8);for(let t=0;t<m;++t)for(let n=0;n<g;++n)for(let r=0;r<f;++r){let s;const o=e[6]*n+e[7]*t+1;if(0===o)continue;const l=(e[0]*n+e[1]*t+e[2])/o,d=(e[3]*n+e[4]*t+e[5])/o,f=bg(l,p,c),m=bg(d,h,c);switch(i){case"nearest":s=vg(T,h,p,v,x,w,a,m,f,r,u);break;case"bilinear":s=xg(T,h,p,v,x,w,a,m,f,r,u);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+"'bilinear', but got ".concat(i))}N[a*k+t*S+n*I+r]=s}return r.makeTensorInfo(b,s.dtype,N)}return{dataId:r.write(N,b,s.dtype),shape:s.shape,dtype:s.dtype}}};function bg(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return a.Mf.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return a.Mf.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return a.Mf.clamp(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function yg(e,t,n,r,a,s,o,i,c,u,l){return 0<=i&&i<t&&0<=c&&c<n?e[o*r+i*a+c*s+u]:l}function vg(e,t,n,r,a,s,o,i,c,u,l){return yg(e,t,n,r,a,s,o,Math.round(i),Math.round(c),u,l)}function xg(e,t,n,r,a,s,o,i,c,u,l){const d=Math.floor(i),h=Math.floor(c),p=d+1,f=h+1;return(p-i)*((f-c)*yg(e,t,n,r,a,s,o,d,h,u,l)+(c-h)*yg(e,t,n,r,a,s,o,d,f,u,l))+(i-d)*((f-c)*yg(e,t,n,r,a,s,o,p,h,u,l)+(c-h)*yg(e,t,n,r,a,s,o,p,f,u,l))}function wg(e,t,n,r){const s=a.Mf.parseAxisParam(t,n)[0],o=[1,n[0],1];for(let a=0;a<s;a++)o[0]*=n[a];o[1]=n[s];for(let a=s+1;a<n.length;a++)o[2]*=n[a];const i=new Map,c=new Int32Array(n[s]),u=new a.ld(o,r,e),l=[],d=1===o[0]&&1===o[2];for(let a=0;a<n[s];a++){let t;if(d)t=e[a].toString();else{const e=[];for(let t=0;t<o[0];t++)for(let n=0;n<o[2];n++)e.push(u.get(t,a,n));t=e.join(",")}const n=i.get(t);if(null!=n)c[a]=n;else{const e=i.size;i.set(t,e),c[a]=e,l.push(a)}}const h=o.slice();h[1]=i.size;const p=new a.ld(h,r);l.forEach((e,t)=>{for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)p.set(u.get(n,e,r),n,t,r)});const f=n.slice();return f[s]=h[1],{outputValues:p.values,outputShape:f,indices:c}}const Og={kernelName:a.rd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;qu(s,"unique");const o=r.data.get(s.dataId).values,{outputValues:i,outputShape:c,indices:u}=wg(o,a,s.shape,s.dtype);return[r.makeTensorInfo(c,s.dtype,i),r.makeTensorInfo([u.length],"int32",u)]}};const kg={kernelName:a.sd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const o=a.shape.length,i=a.shape[s],c=new Array(o-1);let u=0;for(let p=0;p<o;p++)p!==s&&(c[u++]=a.shape[p]);const l=new Array(o).fill(0),d=a.shape.slice();d[s]=1;const h=new Array(i);for(let p=0;p<h.length;p++){l[s]=p;const e=md({inputs:{x:a},backend:n,attrs:{begin:l,size:d}});h[p]=Cl({inputs:{x:e},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(e)}return h}};const Sg={kernelName:a.td,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:o}=t,{numSegments:i}=r;qu(s,"unsortedSegmentSum");const c=[],u=[],l=s.shape.length-o.shape.length;let d=o;for(let a=0;a<l;++a){const e=Eh({inputs:{input:d},backend:n,attrs:{dim:a+1}});d=e,u.push(e)}for(let p=0;p<i;++p){const e=a.Mf.createScalarValue(p,"int32"),t=n.makeTensorInfo([],"int32",e),r=gh({inputs:{a:t,b:d},backend:n}),o=Ol({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),i=uh({inputs:{a:o,b:s},backend:n}),l=dh({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});c.push(l),u.push(t),u.push(r),u.push(o),u.push(i),u.push(l)}const h=Nf({inputs:c,backend:n,attrs:{axis:0}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},Ig=[_l,Dl,zl,Bl,El,Wl,Hl,ql,Kl,Xl,Ql,Jl,ed,rd,sd,ud,ld,dd,hd,Fl,pd,bd,xd,kd,Sd,kl,Td,Ed,bl,Cd,Md,Ld,zd,Pd,Bd,Wd,Ud,Gd,qd,Kd,Xd,Yd,Qd,Zd,$d,eh,th,nh,rh,ah,sh,oh,ph,$u,fh,bh,Ih,jh,Ch,Fh,Vh,Hh,qh,Yh,Jh,$h,ep,np,ap,ip,lp,tl,dp,Fd,pp,mp,bp,rl,xp,kp,Ip,jp,Cp,Fp,Mp,zp,Pp,Bp,Vp,qp,Kp,Xp,Yp,Qp,Zp,Jp,$p,nf,rf,of,lf,lh,hf,ff,gf,yf,wf,Of,If,Tf,jf,Af,il,Ff,zf,Bf,qf,Xf,xl,Dh,Qf,ul,dl,Al,Zf,Jf,$f,em,tm,nm,am,im,um,hm,pm,bm,fl,vm,wm,km,gd,uf,Nm,Tm,Em,Am,Fm,_m,Mm,Dm,Pm,Bm,Vm,qm,Xm,Qm,$m,ng,ag,Bh,hh,og,cg,ug,dg,mg,gg,Gl,Og,kg,Sg,Sf];for(const cN of Ig)Object(a.bf)(cN);const Ng={},Tg={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function jg(e,t){if(!(e in Ng)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(Object(a.he)().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete Ng[e]},!1),Object(a.he)().getBool("SOFTWARE_WEBGL_ENABLED")&&(Tg.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",Tg)||n.getContext("experimental-webgl",Tg);return n.getContext("webgl2",Tg)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;Ng[e]=n}const n=Ng[e];return null==n||n.isContextLost()?(delete Ng[e],jg(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Ng[e])}var Eg,Cg,Ag;function Rg(e,t){return[t,e]}function Fg(e){const t=a.Mf.sizeFromShape(e),n=Math.ceil(t/4);return a.Mf.sizeToSquarishShape(n)}function _g(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Mg(e,t){const n=e;let r,s,o,i,c,u,l,d,h,p;return 2===Object(a.he)().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,o=n.RGBA16F,i=n.RGBA32F,c=n.RED,l=4,d=1,h=n.HALF_FLOAT,p=n.FLOAT,u=n.RGBA8):(r=e.RGBA,s=e.RGBA,o=e.RGBA,i=n.RGBA,c=e.RGBA,l=4,d=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:c,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:p}}function Dg(e,t){const n=t();return Object(a.he)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(t)}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(Eg||(Eg={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(Cg||(Cg={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Ag||(Ag={}));function Lg(e){return!!(Object(a.he)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function zg(e,t){return Kg(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}const Pg=/ERROR: [0-9]+:([0-9]+):/g;function Bg(e,t){const n=Pg.exec(t);if(null==n)return console.log("Couldn't parse line number in error: ".concat(t)),void console.log(e);const r=+n[1],s=e.split("\n"),o=s.length.toString().length+2,i=s.map((e,t)=>a.Mf.rightPad((t+1).toString(),o)+e);let c=0;for(let a=0;a<i.length;a++)c=Math.max(i[a].length,c);const u=i.slice(0,r-1),l=i.slice(r-1,r),d=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log("%c ".concat(a.Mf.rightPad(l[0],c)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function Wg(e,t){if(Dg(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function Ug(e,t,n,r,a,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(Dg(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),Dg(e,()=>e.vertexAttribPointer(i,a,e.FLOAT,!1,s,o)),Dg(e,()=>e.enableVertexAttribArray(i)),!0)}function Vg(e,t,n,r){Dg(e,()=>function(e,t,n){Xg(e,n),Dg(e,()=>e.activeTexture(e.TEXTURE0+n)),Dg(e,()=>e.bindTexture(e.TEXTURE_2D,t))}(e,t,r)),Dg(e,()=>e.uniform1i(n,r))}function Gg(e,t,n){Dg(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),Dg(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Hg(e,t){Dg(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),Dg(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function qg(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(t)}}(e,t))}function Kg(e,t,n){const r=Dg(e,()=>t());if(null==r)throw new Error(n);return r}function Xg(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){const e="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(e,"."))}}function Yg(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return a.Mf.sizeFromShape(e.slice(0,e.length-t))}function Qg(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Zg(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Yg(e),...Qg(e)]),t}function Jg(e){return e%2===0}function $g(e,t){if(e=e.slice(-2),t=t.slice(-2),a.Mf.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(Jg(n)&&Jg(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Jg(e[0])&&Jg(t[0])}let eb,tb;function nb(e,t){return null!=e.getExtension(t)}function rb(e){try{if(null!=jg(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function ab(e){if(0===e)return!1;const t=jg(e);if(1!==e){if(nb(t,"EXT_color_buffer_float"))return sb(t);const e="EXT_color_buffer_half_float";if(nb(t,e)){const n=t.getExtension(e);return function(e,t){const n=Mg(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}if(!nb(t,"OES_texture_float"))return!1;if(!nb(t,"WEBGL_color_buffer_float"))return!1;return sb(t)}function sb(e){const t=Mg(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function ob(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&a.Mf.assert("complex64"!==e.dtype,()=>"".concat(t," does not support complex64 tensors ")+"in the WebGL backend.")})}const ib=Object(a.he)();function cb(){let e,t,n,r,s,o,i,c,u,l;return 2===Object(a.he)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",o="outputColor",i="out vec4 outputColor;",c=Object(a.he)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",o="gl_FragColor",i="",c="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:o,defineOutput:i,defineSpecialNaN:c,defineSpecialInf:u,defineRound:l}}function ub(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=a.Mf.computeStrides(t);return r.map((t,a)=>{const s="int ".concat(e[a]," = ").concat(n," / ").concat(t),o=a===r.length-1?"int ".concat(e[a+1]," = ").concat(n," - ").concat(e[a]," * ").concat(t):"index -= ".concat(e[a]," * ").concat(t);return"".concat(s,"; ").concat(o,";")}).join("")}function lb(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=a.Mf.computeStrides(t);return r.map((t,a)=>{const s="int ".concat(e[a]," = ").concat(n," / outShapeStrides[").concat(a,"]"),o=a===r.length-1?"int ".concat(e[a+1]," = ").concat(n," - ").concat(e[a]," * outShapeStrides[").concat(a,"]"):"index -= ".concat(e[a]," * outShapeStrides[").concat(a,"]");return"".concat(s,"; ").concat(o,";")}).join("")}function db(e,t){const n=e.length,r=e.map(e=>"".concat(t,"[").concat(e,"]")),a=new Array(n-1);a[n-2]=r[n-1];for(let s=n-3;s>=0;--s)a[s]="(".concat(a[s+1]," * ").concat(r[s+1],")");return a}function hb(e){const t=a.Mf.computeStrides(e).map(e=>e.toString());return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(t[0]," + coords.y * ").concat(t[1]," + coords.z;\n  }\n")}ib.registerFlag("HAS_WEBGL",()=>ib.getNumber("WEBGL_VERSION")>0),ib.registerFlag("WEBGL_VERSION",()=>rb(2)?2:rb(1)?1:0),ib.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),ib.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===ib.get("WEBGL_VERSION")),ib.registerFlag("WEBGL_CPU_FORWARD",()=>!0),ib.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),ib.registerFlag("WEBGL_PACK",()=>ib.getBool("HAS_WEBGL")),ib.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ib.getBool("WEBGL_PACK")),ib.registerFlag("WEBGL_PACK_CLIP",()=>ib.getBool("WEBGL_PACK")),ib.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ib.getBool("WEBGL_PACK")),ib.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ib.getBool("WEBGL_PACK")),ib.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ib.getBool("WEBGL_PACK")),ib.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ib.getBool("WEBGL_PACK")),ib.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ib.getBool("WEBGL_PACK")),ib.registerFlag("WEBGL_PACK_REDUCE",()=>ib.getBool("WEBGL_PACK")),ib.registerFlag("WEBGL_LAZILY_UNPACK",()=>ib.getBool("WEBGL_PACK")),ib.registerFlag("WEBGL_CONV_IM2COL",()=>ib.getBool("WEBGL_PACK")),ib.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>ib.getBool("WEBGL_PACK")),ib.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(e){if(null==eb){const t=jg(e);eb=t.getParameter(t.MAX_TEXTURE_SIZE)}return eb}(ib.getNumber("WEBGL_VERSION"))),ib.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(e){if(null==tb){const t=jg(e);tb=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,tb)}(ib.getNumber("WEBGL_VERSION"))),ib.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=ib.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=jg(e);return t=nb(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:nb(n,"EXT_disjoint_timer_query")?1:0,t}(e)}),ib.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ib.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!a.be.isMobile()),ib.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(e){if(0===e)return!1;const t=jg(e);if(1===e){if(!nb(t,"OES_texture_float"))return!1}else if(!nb(t,"EXT_color_buffer_float"))return!1;return sb(t)}(ib.getNumber("WEBGL_VERSION"))),ib.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!ib.getBool("WEBGL_FORCE_F16_TEXTURES")&&ib.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),ib.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>ab(ib.getNumber("WEBGL_VERSION"))),ib.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(e=ib.getNumber("WEBGL_VERSION"))&&null!=jg(e).fenceSync;var e}),ib.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ib.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),ib.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if("number"!==typeof e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(e,"."))}),ib.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>a.be.isMobile()?1:-1,e=>{if("number"!==typeof e)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(e,"."))}),ib.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),ib.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),ib.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),ib.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),ib.registerFlag("WEBGL_EXP_CONV",()=>!1),ib.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>ib.getBool("IS_TEST")),ib.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),ib.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),ib.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),ib.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);const pb="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:fb}=a.Ed;function mb(e,t,n){const r=[];if(e.forEach(e=>{const t=a.Mf.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push("uniform float ".concat(e.name).concat(t>1?"[".concat(t,"]"):"",";")):(r.push("uniform sampler2D ".concat(e.name,";")),r.push("uniform int offset".concat(e.name,";"))),n.enableShapeUniforms){const{uniformShape:t}=_b(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push("uniform int ".concat(e.name,"Shape;"));break;case 2:r.push("uniform ivec2 ".concat(e.name,"Shape;"));break;case 3:r.push("uniform ivec3 ".concat(e.name,"Shape;"));break;case 4:r.push("uniform ivec4 ".concat(e.name,"Shape;"))}r.push("uniform ivec2 ".concat(e.name,"TexShape;"))}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(e=>{r.push("uniform ".concat(e.type," ").concat(e.name).concat(e.arrayIndex?"[".concat(e.arrayIndex,"]"):"",";"))});const s=r.join("\n"),o=e.map(e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3?arguments[3]:void 0,a="";a+=n?bb(e,r):gb(e,r);const s=e.shapeInfo.logicalShape,o=t.logicalShape;s.length<=o.length&&(a+=n?Ab(e,t):Rb(e,t));return a}(e,t,n.packedInputs,n.enableShapeUniforms)).join("\n"),i=t.texShape,c=cb(),u=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(e.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(c);let l,d,h=function(e){return"".concat(e.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(e.varyingFs," vec2 resultUV;\n    ").concat(e.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(e.defineSpecialNaN,"\n    ").concat(e.defineSpecialInf,"\n    ").concat(e.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(yb,"\n    ").concat(vb,"\n    ").concat(xb,"\n  ")}(c);t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(r[1],".0);\n      }\n    ");if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(r[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(r[0],", ").concat(r[1],"));\n      return 2 * (resTexRC.x * ").concat(r[1]," + resTexRC.y);\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(a.Mf.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(r[0],", ").concat(r[1],"));\n      }\n    ");const s=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(r[0],", ").concat(r[1],"));\n\n      int index = resTexRC.x * ").concat(r[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(s,");\n      int c = imod(index, ").concat(s,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(r[0],", ").concat(r[1],"));\n      int index = resTexRC.x * ").concat(r[1]," + resTexRC.y;\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(a,");\n      int c = imod(index, ").concat(a,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let o=s,i="",c="b, r, c";for(let u=2;u<e.length-1;u++)o*=e[e.length-u-1],i="\n      int b".concat(u," = index / ").concat(o,";\n      index -= b").concat(u," * ").concat(o,";\n    ")+i,c="b".concat(u,", ")+c;return"\n    ivec".concat(e.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(r[0],", ").concat(r[1],"));\n      int index = resTexRC.x * ").concat(r[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(a,");\n      int c = imod(index, ").concat(a,") * 2;\n\n      return ivec").concat(e.length,"(").concat(c,");\n    }\n  ")}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),d=function(e){return"\n    void setOutput(vec4 val) {\n      ".concat(e.output," = val;\n    }\n  ")}(c)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(t[1],".0);\n      }\n    ");if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(t[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      return resTexRC.x * ").concat(t[1]," + resTexRC.y;\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){if(a.Mf.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(t[0],", ").concat(t[1],"));\n      }\n    ");if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      int r = index / ").concat(e[1],";\n      int c = index - r * ").concat(e[1],";\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n){const t=lb(["r","c","d"],e);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(t,"\n    return ivec3(r, c, d);\n  }\n")}const r=ub(["r","c","d"],e);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(r,"\n      return ivec3(r, c, d);\n    }\n  ")}(e,t,n);case 4:return function(e,t,n){if(n){const t=lb(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(t,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const r=ub(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(r,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(e,t,n);case 5:return function(e,t){const n=ub(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(t[0],",\n                             ").concat(t[1],"));\n\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(e,t);case 6:return function(e,t){const n=ub(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(e,t);default:throw new Error("".concat(e.length,"-D output sampling is not yet supported"))}}(t.logicalShape,i,n.enableShapeUniforms),d=function(e){return"\n    void setOutput(float val) {\n      ".concat(e.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(c)),n.packedInputs&&(h+=wb);return[h,u,d,s,l,o,n.userCode].join("\n")}function gb(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return kb(e,t);case 1:return Sb(e,t);case 2:return Ib(e,t);case 3:return Nb(e,t);case 4:return Tb(e,t);case 5:return jb(e);case 6:return Eb(e);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function bb(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=cb();return"\n    vec4 ".concat(n,"() {\n      return ").concat(r.texture2D,"(").concat(t,", halfCR);\n    }\n  ")}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=cb();if(t)return"\n    vec4 ".concat(r,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ");const o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return"\n    vec4 ".concat(r,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(o[0],", ").concat(o[1],", index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=e.shapeInfo.texShape,i=o[0],c=o[1],u=cb();if(null!=o&&a.Mf.arraysEqual(n,o))return t?"\n      vec4 ".concat(s,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(r,"TexShape[1], ").concat(r,"TexShape[0]);\n\n        return ").concat(u.texture2D,"(").concat(r,", uv);\n      }\n    "):"\n      vec4 ".concat(s,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(c,".0, ").concat(i,".0);\n\n        return ").concat(u.texture2D,"(").concat(r,", uv);\n      }\n    ");if(t)return"\n    vec4 ".concat(s,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(r,"TexShape[0]) / 2.0), ceil(float(").concat(r,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(r,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(u.texture2D,"(").concat(r,", uv);\n    }\n  ");const l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],d=Math.ceil(n[1]/2);return"\n    vec4 ".concat(s,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(d,", ").concat(l[0],", ").concat(l[1],", row, col);\n      return ").concat(u.texture2D,"(").concat(r,", uv);\n    }\n  ")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=n.slice(1),s=[1,2],o=Mb(e,r),i=["b","row","col"];return"\n        ".concat(bb(o,t),"\n        vec4 ").concat(a,"(int b, int row, int col) {\n          return ").concat(a,"(").concat(Db(i,s),");\n        }\n      ")}const i=cb();if(t)return"\n    vec4 ".concat(a,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(r,"TexShape[0]) / 2.0), ceil(float(").concat(r,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(r,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(r,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(r,", uv);\n    }\n  ");const c=o[0],u=o[1],l=Math.ceil(n[2]/2),d=l*Math.ceil(n[1]/2);return"\n    vec4 ".concat(a,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(c,", ").concat(u,", ").concat(d,", ").concat(l,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(r,", uv);\n    }\n  ")}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=cb();if(t)return"\n    vec4 ".concat(r,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(a.texture2D,"(").concat(n,", uv);\n    }\n  ");const s=e.shapeInfo.logicalShape,o=s.length,i=e.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=c[0],l=c[1],d=Math.ceil(s[o-1]/2);let h=d*Math.ceil(s[o-2]/2),p="int b, int row, int col",f="b * ".concat(h," + (row / 2) * ").concat(d," + (col / 2)");for(let m=2;m<o-1;m++)p="int b".concat(m,", ")+p,h*=s[o-m-1],f="b".concat(m," * ").concat(h," + ")+f;return"\n    vec4 ".concat(r,"(").concat(p,") {\n      int index = ").concat(f,";\n      int texR = index / ").concat(l,";\n      int texC = index - texR * ").concat(l,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(l,", ").concat(u,");\n      return ").concat(a.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t)}}const yb="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",vb="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",xb="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",wb="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Ob(e){return"offset".concat(e)}function kb(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"float ".concat(r,"() {return ").concat(n,";}");const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return"\n      float ".concat(r,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const o=Ob(n);if(t)return"\n    float ".concat(r,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,c]=e.shapeInfo.texShape;return"\n    float ".concat(r,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(c,", ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}function Sb(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int index) {\n        ").concat(Cb(e),"\n      }\n    ");const a=e.shapeInfo.texShape,s=a[0],o=a[1];if(1===o&&1===s)return"\n      float ".concat(r,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=Ob(n);return 1===o?t?"\n      float ".concat(r,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(r,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(s,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):1===s?t?"\n      float ".concat(r,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(r,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(o,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):t?"\n    float ".concat(r,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  "):"\n    float ".concat(r,"(int index) {\n      vec2 uv = uvFromFlat(").concat(s,", ").concat(o,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}function Ib(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=e.shapeInfo.texShape;if(null!=o&&a.Mf.arraysEqual(n,o)){if(t)return"\n      float ".concat(s,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(r,"TexShape[1], ").concat(r,"TexShape[0]);\n        return sampleTexture(").concat(r,", uv);\n      }\n    ");const e=o[0],n=o[1];return"\n    float ".concat(s,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(e,".0);\n      return sampleTexture(").concat(r,", uv);\n    }\n  ")}const{newShape:i,keptDims:c}=a.Mf.squeezeShape(n),u=i;if(u.length<n.length){const n=Mb(e,u),r=["row","col"];return"\n      ".concat(gb(n,t),"\n      float ").concat(s,"(int row, int col) {\n        return ").concat(s,"(").concat(Db(r,c),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(s,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(Cb(e),"\n      }\n    ");const l=o[0],d=o[1],h=Ob(r);return 1===d?t?"\n      float ".concat(s,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(r,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(r,"TexShape[0]));\n        return sampleTexture(").concat(r,", uv);\n      }\n    "):"\n    float ".concat(s,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(l,".0);\n      return sampleTexture(").concat(r,", uv);\n    }\n  "):1===l?t?"\n      float ".concat(s,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(r,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(r,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(r,", uv);\n      }\n    "):"\n    float ".concat(s,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(d,".0, 0.5);\n      return sampleTexture(").concat(r,", uv);\n    }\n  "):t?"\n      float ".concat(s,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(r,"Shape[1] + col + ").concat(h,";\n        vec2 uv = uvFromFlat(").concat(r,"TexShape[0], ").concat(r,"TexShape[1], index);\n        return sampleTexture(").concat(r,", uv);\n      }\n    "):"\n  float ".concat(s,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(h,";\n    vec2 uv = uvFromFlat(").concat(l,", ").concat(d,", index);\n    return sampleTexture(").concat(r,", uv);\n  }\n")}function Nb(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[1]*n[2],i=n[2],{newShape:c,keptDims:u}=a.Mf.squeezeShape(n),l=c;if(l.length<n.length){const n=Mb(e,l),r=["row","col","depth"];return"\n        ".concat(gb(n,t),"\n        float ").concat(s,"(int row, int col, int depth) {\n          return ").concat(s,"(").concat(Db(r,u),");\n        }\n      ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(s,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(o,", ").concat(i,", 1)));\n        ").concat(Cb(e),"\n      }\n    ");const d=e.shapeInfo.texShape,h=d[0],p=d[1],f=e.shapeInfo.flatOffset;if(p===o&&null==f)return t?"\n      float ".concat(s,"(int row, int col, int depth) {\n        int stride1 = ").concat(r,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(r,"TexShape[1], ").concat(r,"TexShape[0]);\n        return sampleTexture(").concat(r,", uv);\n      }\n    "):"\n        float ".concat(s,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(i,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(p,".0, ").concat(h,".0);\n          return sampleTexture(").concat(r,", uv);\n        }\n      ");if(p===i&&null==f)return t?"\n      float ".concat(s,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(r,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(r,"TexShape[1], ").concat(r,"TexShape[0]);\n        return sampleTexture(").concat(r,", uv);\n      }\n    "):"\n    float ".concat(s,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(p,".0, ").concat(h,".0);\n      return sampleTexture(").concat(r,", uv);\n    }\n  ");const m=Ob(r);return t?"\n    float ".concat(s,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(r,"Shape[1] * ").concat(r,"Shape[2];\n      int stride1 = ").concat(r,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(r,"TexShape[0], ").concat(r,"TexShape[1], index);\n      return sampleTexture(").concat(r,", uv);\n    }\n    "):"\n      float ".concat(s,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(o," + col * ").concat(i," + depth + ").concat(m,";\n        vec2 uv = uvFromFlat(").concat(h,", ").concat(p,", index);\n        return sampleTexture(").concat(r,", uv);\n      }\n  ")}function Tb(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[3],i=n[2]*o,c=n[1]*i,{newShape:u,keptDims:l}=a.Mf.squeezeShape(n);if(u.length<n.length){const n=Mb(e,u),r=["row","col","depth","depth2"];return"\n      ".concat(gb(n,t),"\n      float ").concat(s,"(int row, int col, int depth, int depth2) {\n        return ").concat(s,"(").concat(Db(r,l),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(s,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(c,", ").concat(i,", ").concat(o,", 1)));\n        ").concat(Cb(e),"\n      }\n    ");const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1],m="int stride2 = ".concat(r,"Shape[3];"),g="int stride1 = ".concat(r,"Shape[2] * stride2;"),b="int stride0 = ".concat(r,"Shape[1] * stride1;");if(f===c&&null==d)return t?"\n      float ".concat(s,"(int row, int col, int depth, int depth2) {\n        ").concat(m,"\n        ").concat(g,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(r,"TexShape[1], ").concat(r,"TexShape[0]);\n        return sampleTexture(").concat(r,", uv);\n      }\n    "):"\n      float ".concat(s,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(i,", ").concat(o,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(r,", uv);\n      }\n    ");if(f===o&&null==d)return t?"\n      float ".concat(s,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(r,"Shape[1] * ").concat(r,"Shape[2], ").concat(r,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(r,"TexShape[1], ").concat(r,"TexShape[0]);\n        return sampleTexture(").concat(r,", uv);\n      }\n    "):"\n      float ".concat(s,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(r,", uv);\n      }\n    ");const y=Ob(r);return t?"\n    float ".concat(s,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(m,"\n      ").concat(g,"\n      ").concat(b,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(r,"TexShape[0], ").concat(r,"TexShape[1], index + ").concat(y,");\n      return sampleTexture(").concat(r,", uv);\n    }\n  "):"\n    float ".concat(s,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(c," + col * ").concat(i," +\n          depth * ").concat(o," + depth2;\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index + ").concat(y,");\n      return sampleTexture(").concat(r,", uv);\n    }\n  ")}function jb(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],o=t[3]*s,i=t[2]*o,c=t[1]*i,{newShape:u,keptDims:l}=a.Mf.squeezeShape(t);if(u.length<t.length){const t=Mb(e,u),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(gb(t),"\n      float ").concat(r,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(r,"(").concat(Db(n,l),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(c,", ").concat(i,", ").concat(o,", ").concat(s,")) +\n          depth3;\n        ").concat(Cb(e),"\n      }\n    ");const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===c&&null==d)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(i,", ").concat(o,", ").concat(s,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===s&&null==d)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3],",\n               ").concat(t[2]*t[3],", ").concat(t[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=Ob(n);return"\n    float ".concat(r,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(c," + col * ").concat(i," + depth * ").concat(o," +\n          depth2 * ").concat(s," + depth3 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}function Eb(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:o}=a.Mf.squeezeShape(t);if(s.length<t.length){const t=Mb(e,s),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(gb(t),"\n      float ").concat(r,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(r,"(").concat(Db(n,o),");\n      }\n    ")}const i=t[5],c=t[4]*i,u=t[3]*c,l=t[2]*u,d=t[1]*l;if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(d,", ").concat(l,", ").concat(u,", ").concat(c,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(i,", 1)));\n        ").concat(Cb(e),"\n      }\n    ");const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],m=p[1];if(m===d&&null==h)return"\n      float ".concat(r,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(l,", ").concat(u,", ").concat(c,", ").concat(i,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(m,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(m===i&&null==h)return"\n      float ".concat(r,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3]*t[4],",\n               ").concat(t[2]*t[3]*t[4],",\n               ").concat(t[3]*t[4],",\n               ").concat(t[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(m,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const g=Ob(n);return"\n    float ".concat(r,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(d," + col * ").concat(l," + depth * ").concat(u," +\n          depth2 * ").concat(c," + depth3 * ").concat(i," + depth4 + ").concat(g,";\n      vec2 uv = uvFromFlat(").concat(f,", ").concat(m,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}function Cb(e){const t=e.name,n=a.Mf.sizeFromShape(e.shapeInfo.logicalShape);return n<2?"return ".concat(t,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(t,"[i];\n      }\n    }\n  ")}function Ab(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",o=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,c=fb(e.shapeInfo.logicalShape,t.logicalShape),u=Fb(i),l=i-o;let d;const h=["x","y","z","w","u","v"];d=0===o?"":i<2&&c.length>=1?"coords = 0;":c.map(e=>"coords.".concat(h[e+l]," = 0;")).join("\n");let p="";p=i<2&&o>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords.".concat(h[t+l])).join(", ");let f="return outputValue;";const m=1===a.Mf.sizeFromShape(e.shapeInfo.logicalShape),g=1===a.Mf.sizeFromShape(t.logicalShape);if(1!==o||m||g){if(m&&!g)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(c.length){const e=o-2,t=o-1;c.indexOf(e)>-1&&c.indexOf(t)>-1?f="return vec4(outputValue.x);":c.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":c.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(s,"() {\n      ").concat(u," coords = getOutputCoords();\n      ").concat(d,"\n      vec4 outputValue = get").concat(r,"(").concat(p,");\n      ").concat(f,"\n    }\n  ")}function Rb(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",o=t.texShape,i=e.shapeInfo.texShape,c=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&c===u&&null==e.shapeInfo.flatOffset&&a.Mf.arraysEqual(i,o))return"\n      float ".concat(s,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const l=Fb(u),d=fb(e.shapeInfo.logicalShape,t.logicalShape),h=u-c;let p;const f=["x","y","z","w","u","v"];p=0===c?"":u<2&&d.length>=1?"coords = 0;":d.map(e=>"coords.".concat(f[e+h]," = 0;")).join("\n");let m="";return m=u<2&&c>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords.".concat(f[t+h])).join(", "),"\n    float ".concat(s,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(p,"\n      return get").concat(r,"(").concat(m,");\n    }\n  ")}function Fb(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank ".concat(e," is not yet supported"))}function _b(e,t,n){const{newShape:r,keptDims:s}=a.Mf.squeezeShape(t),o=t.length,i=e&&3===o&&1===t[0],c=i?t.slice(1):r,u=!e&&o>1&&!a.Mf.arraysEqual(t,n)&&r.length<o||i;return{useSqueezeShape:u,uniformShape:u?c:t,keptDims:s}}function Mb(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Db(e,t){return t.map(t=>e[t]).join(", ")}function Lb(e,t,n,r){const s=n.map((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),o=s.map(e=>e.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},c=mb(s,i,t),u=function(e,t){const n=Kg(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Dg(e,()=>e.shaderSource(n,t)),Dg(e,()=>e.compileShader(n)),Object(a.he)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw Bg(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,c),l=e.createProgram(u);return Object(a.he)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:c,webGLProgram:l,inShapeInfos:o,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:u,source:c,webGLProgram:l,inShapeInfos:o,outShapeInfo:i},zb(e,t,l)))}function zb(e,t,n){const r=[],s=[];let o,i,c,u=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===Object(a.he)().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(n,"INFINITY",!1));for(const a of t.variableNames){const s={name:a,uniform:e.getUniformLocation(n,a,!1),offset:e.getUniformLocation(n,"offset".concat(a),!1)};t.enableShapeUniforms&&(s.shape=e.getUniformLocation(n,"".concat(a,"Shape"),!1),s.texShape=e.getUniformLocation(n,"".concat(a,"TexShape"),!1)),r.push(s)}if(t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",!1),c=e.getUniformLocation(n,"outShapeStrides",!1),i=e.getUniformLocation(n,"outTexShape",!1)),t.customUniforms)for(const a of t.customUniforms)s.push(e.getUniformLocation(n,a.name,!1));return{variablesLocations:r,customUniformLocations:s,infLoc:u,nanLoc:l,outShapeLocation:o,outShapeStridesLocation:c,outTexShapeLocation:i}}function Pb(e,t){if(e.length!==t.length)throw Error("Binary was compiled with ".concat(e.length," inputs, but ")+"was executed with ".concat(t.length," inputs"));e.forEach((e,n)=>{const r=e.logicalShape,s=t[n],o=s.shape;if(!a.Mf.arraysEqual(r,o))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(r," and ").concat(o," must match"));if(e.isUniform&&s.isUniform)return;const i=e.texShape,c=s.isUniform?null:s.texData.texShape;if(!a.Mf.arraysEqual(i,c))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(i," and ").concat(c," must match"))})}function Bb(e){return Object(a.he)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class Wb{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Eg.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=cb();this.outputShape=e,this.enableShapeUniforms=Bb(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?lb(["r","c","d"],e):ub(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class Ub{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Eg.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=cb();this.outputShape=e,this.enableShapeUniforms=Bb(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?lb(["r","c","d"],e):ub(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class Vb{constructor(e){this.variableNames=["A"],this.outTexUsage=Cg.DOWNLOAD;const t=cb();this.outputShape=e,this.userCode="\n      ".concat(pb,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}class Gb{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Cg.DOWNLOAD;const t=cb();this.outputShape=e,this.userCode="\n      ".concat(pb,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}const Hb={R:0,G:1,B:2,A:3};class qb{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=cb();this.outputShape=e,this.enableShapeUniforms=Bb(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let o=0;o<n.length;o++){const e=n[o];s+="\n          if(offset == ".concat(o,") {\n            result = values[").concat(Hb[e],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":hb(e),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(r.texture2D,"(A, uv);\n          ").concat(s,"\n        }\n        ").concat(r.output," = vec4(").concat(a,", 0., 0., 0.);\n      }\n    ")}}class Kb{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=cb();this.outputShape=e,this.enableShapeUniforms=Bb(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){const a=2*s+t;r+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(t," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(e[2]),") {\n          localCoords[2] += ").concat(t,";\n          if (localCoords[1] + ").concat(s," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(e[1]),") {\n            localCoords[1] += ").concat(s,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(a,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(a,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(a,"] = values[2];\n            } else {\n              result[").concat(a,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":hb(e),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(r,"\n\n          ").concat(n.output," = ").concat(a,";\n        }\n    ")}}function Xb(e){const t=cb();return function(e,t){const n=Kg(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Dg(e,()=>e.shaderSource(n,t)),Dg(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,"".concat(t.version,"\n    precision highp float;\n    ").concat(t.attribute," vec3 clipSpacePos;\n    ").concat(t.attribute," vec2 uv;\n    ").concat(t.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function Yb(e){return function(e,t){const n=Kg(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Dg(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Dg(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Qb(e){return function(e,t){const n=Kg(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Dg(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),Dg(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Uint16Array([0,1,2,2,1,3]))}function Zb(e,t,n,r,s,o){!function(e,t){const n=Object(a.he)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n="[".concat(e,"x").concat(t,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const r="[".concat(e,"x").concat(t,"]"),a="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+a+".")}}(t,n);const i=function(e){return Kg(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}(e),c=e.TEXTURE_2D;return Dg(e,()=>e.bindTexture(c,i)),Dg(e,()=>e.texParameteri(c,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),Dg(e,()=>e.texParameteri(c,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),Dg(e,()=>e.texParameteri(c,e.TEXTURE_MIN_FILTER,e.NEAREST)),Dg(e,()=>e.texParameteri(c,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===Object(a.he)().getNumber("WEBGL_VERSION")?Dg(e,()=>e.texImage2D(c,0,r,t,n,0,s,o,null)):Dg(e,()=>e.texStorage2D(c,1,r,t,n)),Dg(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[n,t]}}function Jb(e){return e.internalFormatFloat}function $b(e){return e.internalFormatHalfFloat}function ey(e){return e.downloadTextureFormat}function ty(e){return e.internalFormatPackedFloat}function ny(e){return e.internalFormatPackedHalfFloat}function ry(e,t,n,r,a,s,o,i){const c=e,u=new Float32Array(function(e,t){const[n,r]=_g(e,t);return n*r*4}(s,o));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,u),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),u}class ay{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Object(a.he)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){Ng[e]=t}(t,e)):this.gl=jg(t),e=this.gl,2===Object(a.he)().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>Dg(t,()=>t.createVertexArray()),this.bindVertexArray=e=>Dg(t,()=>t.bindVertexArray(e)),this.deleteVertexArray=e=>Dg(t,()=>t.deleteVertexArray(e)),this.getVertexArray=()=>Dg(t,()=>t.getParameter(t.VERTEX_ARRAY_BINDING))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Dg(e,()=>t.createVertexArrayOES()),this.bindVertexArray=n=>Dg(e,()=>t.bindVertexArrayOES(n)),this.deleteVertexArray=n=>Dg(e,()=>t.deleteVertexArrayOES(n)),this.getVertexArray=()=>Dg(e,()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Object(a.he)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=zg(this.gl,e),nb(this.gl,t))this.textureHalfFloatExtension=zg(this.gl,t);else if(Object(a.he)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),nb(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=zg(this.gl,"EXT_color_buffer_half_float");else if(Object(a.he)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",nb(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!nb(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=Yb(this.gl),this.indexBuffer=Qb(this.gl),this.framebuffer=function(e){return Kg(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Mg(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(a.he)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Dg(e,()=>e.finish()),Dg(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Dg(e,()=>e.deleteFramebuffer(this.framebuffer)),Dg(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Dg(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Dg(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Rg(t,n);return Zb(e,a,s,Jb(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Rg(t,n);return Zb(e,a,s,$b(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Rg(t,n);return Zb(e,a,s,ey(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){Dg(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?2===Object(a.he)().getNumber("WEBGL_VERSION")?Dg(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):Dg(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):2===Object(a.he)().getNumber("WEBGL_VERSION")?Dg(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):Dg(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),Dg(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,o){let i,c,u;Dg(e,()=>e.bindTexture(e.TEXTURE_2D,t)),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),c=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),c=e.FLOAT,u=o.internalFormatPackedFloat),i.set(s),2===Object(a.he)().getNumber("WEBGL_VERSION")?Dg(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,c,i)):Dg(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,c,i)),Dg(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=_g(t,n);return Zb(e,a,s,ny(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=_g(t,n);return Zb(e,a,s,ty(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Hg(this.gl,this.framebuffer),this.outputTexture=null),Dg(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n,r){const[a,s]=Rg(t,n),o=new Uint8Array(t*n*4);return Dg(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return ry(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();Dg(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));const s=16*t*n;return Dg(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),Dg(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),Dg(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Object(a.he)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Object(a.he)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Object(a.he)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n){const r=new Float32Array(t*n*4);return Dg(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=Xb(t));const n=function(e){return Kg(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}(t);Dg(t,()=>t.attachShader(n,this.vertexShader)),Dg(t,()=>t.attachShader(n,e)),function(e,t){if(Dg(e,()=>e.linkProgram(t)),!Object(a.he)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&Wg(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;Dg(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),function(e,t,n){Dg(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Ug(e,t,"clipSpacePos",n,3,20,0)&&Ug(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(Dg(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&Wg(this.gl,this.program),Dg(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return Kg(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Dg(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),Vg(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=_g(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Wg(this.gl,this.program),qg(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Dg(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Dg(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=zg(this.gl,2===Object(a.he)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(a.he)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Object(a.he)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await a.Mf.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Object(a.he)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Object(a.he)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n=void 0;"setTimeoutCustom"in Object(a.he)().platform&&(n=Object(a.he)().platform.setTimeoutCustom.bind(Object(a.he)().platform)),a.Mf.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Gg(this.gl,e,this.framebuffer),this.debug&&qg(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Gg(this.gl,this.outputTexture,this.framebuffer),this.debug&&qg(this.gl)):Hg(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;Gg(r,e,this.framebuffer),this.debug&&qg(r),this.outputTexture=e,Dg(r,()=>r.viewport(0,0,t,n)),Dg(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),Dg(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:sy,bincountImpl:oy,bincountReduceImpl:iy,bitwiseAndImpl:cy,castImpl:uy,ceilImpl:ly,concatImpl:dy,equalImpl:hy,expImpl:py,expm1Impl:fy,floorImpl:my,gatherNdImpl:gy,gatherV2Impl:by,greaterImpl:yy,greaterEqualImpl:vy,lessImpl:xy,lessEqualImpl:wy,linSpaceImpl:Oy,logImpl:ky,maxImpl:Sy,maximumImpl:Iy,minimumImpl:Ny,multiplyImpl:Ty,negImpl:jy,notEqualImpl:Ey,prodImpl:Cy,raggedGatherImpl:Ay,raggedRangeImpl:Ry,raggedTensorToTensorImpl:Fy,rangeImpl:_y,rsqrtImpl:My,scatterImpl:Dy,sigmoidImpl:Ly,simpleAbsImpl:zy,sliceImpl:Py,sparseFillEmptyRowsImpl:By,sparseReshapeImpl:Wy,sparseSegmentReductionImpl:Uy,sqrtImpl:Vy,staticRegexReplaceImpl:Gy,stridedSliceImpl:Hy,stringNGramsImpl:qy,stringSplitImpl:Ky,stringToHashBucketFastImpl:Xy,subImpl:Yy,tileImpl:Qy,topKImpl:Zy,transposeImpl:Jy,uniqueImpl:$y}=r;function ev(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>"".concat(e,".").concat(t))}function tv(e,t){return 1===t?[e]:ev(e,t)}class nv{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Bb(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=tv("rc",this.rank),t=Fb(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode="\n        void main() {\n          ".concat(t," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(r,"\n\n            setOutput(vec4(").concat(a,"));\n          }\n        }\n      ")}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a="".concat(0===n?"r":"rp1",", ").concat(0===r?"c":"cp1");for(let t=2;t<this.rank;t++)a="".concat(e[e.length-1-t],",")+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let t="";for(let n=this.rank-2;n<this.rank;n++)t+="".concat(e[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],r=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(t[0],";\n      int c = ").concat(t[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(r,";\n    ")}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(e," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(t[0],"),\n            cEdge ? 0. : getA(").concat(t[1],"),\n            rEdge ? 0. : getA(").concat(t[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(t[3],")")}}class rv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Bb(this.outputShape.length);let n="";for(let r=0;r<4;r++){let e="thisRC = rc;";r%2===1&&(e+="thisRC.z += 1;"),r>1&&(e+="thisRC.y += 1;"),n+="\n        ".concat(e,"\n        ").concat(r>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(r,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(r>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(e,t){const n=t?function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=e.map((e,t)=>t),a=db(r,t);return a.map((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(a[r]),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(a[r]):"index -= ".concat(e[r]," * ").concat(a[r]);return"".concat(s,"; ").concat(o,";")}).join("")}(["r","c","d"],"inputShape"):ub(["r","c","d"],e);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":hb(e),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":e[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":e[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class av{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=ov(t,n),a=iv(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=sv(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].pop();return this.usedTextures[a].push(e),e}let o;return r===Ag.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===Ag.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===Ag.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===Ag.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===Ag.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=ov(n,r),o=iv(t,s,r);o in this.freeTextures||(this.freeTextures[o]=[]);const i=sv(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),c=Object(a.he)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==c&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[o],l=u&&u.indexOf(e);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[l]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(e,")"));const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*t),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function sv(e,t,n,r,a){const s=function(e,t){switch(e){case Ag.PACKED_2X2_FLOAT32:return ty(t);case Ag.PACKED_2X2_FLOAT16:return ny(t);case Ag.UNPACKED_FLOAT32:return Jb(t);case Ag.UNPACKED_FLOAT16:return $b(t);case Ag.PACKED_4X1_UNSIGNED_BYTE:return ey(t);default:throw new Error("Unknown physical texture type ".concat(e))}}(t,r);let o;if(a){const[t,n]=_g(e[0],e[1]);o=t*n}else{const[t,n]=Rg(e[0],e[1]);o=t*n}return o*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(t))}(n,s)}function ov(e,t){if(e===Cg.UPLOAD)return Ag.PACKED_2X2_FLOAT32;if(e===Cg.RENDER||null==e)return function(e){return Object(a.he)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Ag.PACKED_2X2_FLOAT32:Ag.UNPACKED_FLOAT32:e?Ag.PACKED_2X2_FLOAT16:Ag.UNPACKED_FLOAT16}(t);if(e===Cg.DOWNLOAD||e===Cg.PIXELS)return Ag.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(e))}function iv(e,t,n){return"".concat(e[0],"_").concat(e[1],"_").concat(t,"_").concat(n)}class cv{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Bb(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const uv="if (isnan(x)) return x;",lv="return abs(x);";const dv=uv+"\n  return (x < 0.0) ? 0.0 : x;\n",hv=uv+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",pv="return x;",fv="return 1.0 / (1.0 + exp(-1.0 * x));",mv="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",gv="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",bv="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n";class yv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Bb(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class vv{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Bb(this.outputShape.length);const t=e.length,n=tv("rc",t),r=Fb(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":"vec2(".concat(s.join(","),")");this.userCode="\n      void main() {\n        ".concat(r," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(a,");\n\n        setOutput(getChannel(packedInput, ").concat(o,"));\n      }\n    ")}}const xv=a.ve.whereImpl,wv={};const Ov=Object(a.he)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class kv extends a.Ab{nextDataId(){return kv.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Object(a.he)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof ay)t=e;else{const n=jg(Object(a.he)().getNumber("WEBGL_VERSION"),e);t=new ay(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=jg(Object(a.he)().getNumber("WEBGL_VERSION"));t=new ay(e),this.binaryCache=((n=Object(a.he)().getNumber("WEBGL_VERSION"))in wv||(wv[n]={}),wv[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new av(this.gpgpu),this.numMBBeforeWarning=null==Object(a.he)().global.screen?1024:Object(a.he)().global.screen.height*Object(a.he)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new a.O(this,Object(a.ge)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,a,s){const o=this.makeTensorInfo(t,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[r,a]},i.texShape=[r,a];const c=Zg(t),u=new qb(c,!1,s),l=this.runWebGLProgram(u,[o],n,[[r,a]]);return l.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(o),l.dataId}write(e,t,n){if((Object(a.he)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(a.he)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:Cg.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,s){if(Object(a.he)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:Cg.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:o,shape:i,isPacked:c}=t;if(null!=o){let t;t=c?new yv(i,pv):new cv(i,pv);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,d;if(u&&(l=a.Mf.now()),"complex64"===r){const e=this.readSync(s.real.dataId),t=this.readSync(s.imag.dataId);d=a.Ed.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=a.Mf.now()-l),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:o,complexTensorInfos:i,isPacked:c}=t;if(null!=s){let t;t=c?new yv(r,pv):new cv(r,pv);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:o}],o),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(Object(a.he)().getBool("DEBUG")&&!Object(a.he)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(a.he)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,d=null;if("complex64"!==o&&Object(a.he)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...Fg(r))}if(this.pendingRead.set(e,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];l=a.Ed.mergeRealAndImagArrays(t,n)}else if(null==d)l=this.getValuesFromTexture(e);else{const e=a.Mf.sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=d){const e=this.gpgpu.gl;Dg(e,()=>e.deleteBuffer(d))}const h=this.convertAndCacheOnCPU(e,l),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(e=>e(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Object(a.ge)().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:r,shape:s,slice:o,dtype:i,isPacked:c,texture:u}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=o){let n;n=c?new yv(s,pv):new cv(s,pv);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),d=Object(a.ge)().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map(e=>a.Mf.decodeString(e));return Object(a.Ld)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(a.Ld)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!Lg(n)){if(Object(a.he)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=a.Mf.sizeFromShape(t);if(Object(a.he)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...Fg(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const o=Object(a.he)().getBool("WEBGL_PACK")&&!0===r,i=o?Zg(t):t,c=o?new Gb(i):new Vb(i),u=this.runWebGLProgram(c,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),d}timerAvailable(){return Object(a.he)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=a.Mf.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),o=a.Mf.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Object(a.he)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=a.Mf.sum(e),i.getExtraProfileInfo=()=>e.map((e,t)=>({name:o[t],ms:e})).map(e=>"".concat(e.name,": ").concat(e.ms)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(a.he)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:a.Mf.now(),endMs:null}}endTimer(e){return Object(a.he)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=a.Mf.now(),e)}async getQueryTime(e){if(Object(a.he)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Ov;return Object(a.he)().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&a.Mf.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){a.Ed.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return xv(e.shape,t)}packedUnaryOp(e,t,n){const r=new yv(e.shape,t),s=this.compileAndRun(r,[e],n);return Object(a.ge)().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=zy(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Object(a.he)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,lv,e.dtype);const t=new cv(e.shape,lv),n=this.compileAndRun(t,[e]);return Object(a.ge)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&a.Mf.isString(n[0])){const s=n.map(e=>a.Mf.encodeString(e));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return Object(a.ge)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new vv(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new nv(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[Yg(e.shape),...Qg(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[Yg(t),...Qg(t)],s=new rv(a,n),o=[n],i=this.runWebGLProgram(s,[r],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:o}=n;if(null!=t){const e=a.Mf.sizeFromShape(s),n=t[0]*t[1]*4;a.Mf.assert(e<=n,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const i=Zg(s);let c;c=r?new Ub(i):new Wb(i);const u=[null!=t?t:Fg(i)];return{dtype:o,shape:s,dataId:this.runWebGLProgram(c,[{shape:i,dtype:o,dataId:e}],o,u,!0,t).dataId}}runWebGLProgram(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5?arguments[5]:void 0;const i=this.makeTensorInfo(e.outputShape,n),c=this.texData.get(i.dataId);if(e.packedOutput&&(c.isPacked=!0),e.outPackingScheme===Eg.DENSE){const t=null!=o?o:Fg(e.outputShape);c.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(c.usage=e.outTexUsage),0===a.Mf.sizeFromShape(i.shape))return c.values=a.Mf.getTypedArrayFromDType(i.dtype,0),i;const u=[],l=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&a.Mf.sizeFromShape(t.shape)<=Object(a.he)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!$g(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(i.dataId);const d={shape:i.shape,texData:c,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach(t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const o=t.texData.texShape,{useSqueezeShape:i,uniformShape:c,keptDims:u}=_b(e.packedInputs,t.shape,o);let l="",d="",h="";if(1===c.length&&e.packedInputs){const e=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];l="".concat(e[0]>1,"_").concat(e[1]>1)}else if(2!==c.length||e.packedInputs){if(c.length>2&&!e.packedInputs){const e=a.Mf.computeStrides(c);h="".concat(e[0]===o[1],"_").concat(e[e.length-1]===o[1])}}else d="".concat(c[0]>1,"_").concat(c[1]>1);const p=t.shape.length,f=2===c.length&&a.Mf.arraysEqual(t.shape,o),m=1===a.Mf.sizeFromShape(t.shape),g=a.Ed.getBroadcastDims(t.shape,n.shape),b=!e.packedInputs&&p===n.shape.length&&a.Mf.arraysEqual(o,n.texData.texShape),y=e.packedInputs||c.length>2?"":"".concat(o[0]>1,"_").concat(o[1]>1);r+="".concat(p,"_").concat(b,"_").concat(i?u:"","_").concat(c.length,"_").concat(m,"_").concat(g,"_").concat(f,"_").concat(l,"_").concat(d,"_").concat(h,"_").concat(y,"_").concat(s)}else{const e=t.isUniform?"uniform":t.texData.texShape;r+="".concat(t.shape,"_").concat(e,"_").concat(s)}});const s=e.userCode;let o=e.constructor.name;return o+="_"+r+"_"+s+"".concat(Object(a.he)().getNumber("WEBGL_VERSION")),o}(e,l,d),p=this.getAndSaveBinary(h,()=>Lb(this.gpgpu,e,l,d)),f=null!=this.activeTimers;let m;f&&(m=this.startTimer()),Object(a.he)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(Pb(t.inShapeInfos,n),Pb([t.outShapeInfo],[r]));const o=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):e.setOutputMatrixTexture(o.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Object(a.he)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let u=0;u<n.length;++u){const r=n[u],{uniform:s,offset:o,shape:i,texShape:c}=t.variablesLocations[u];if(i){const{uniformShape:n}=_b(t.program.packedInputs,r.shape,r.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(i,new Int32Array(n));break;case 2:e.gl.uniform2iv(i,new Int32Array(n));break;case 3:e.gl.uniform3iv(i,new Int32Array(n));break;case 4:e.gl.uniform4iv(i,new Int32Array(n))}}if(c&&e.gl.uniform2i(c,r.texData.texShape[0],r.texData.texShape[1]),null!=s)if(r.isUniform)if(a.Mf.sizeFromShape(r.shape)<2)e.gl.uniform1f(s,r.uniformValues[0]);else{let t=r.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=r.texData.slice&&null!=o&&e.gl.uniform1i(o,r.texData.slice.flatOffset),e.setInputMatrixTexture(r.texData.texture.texture,s,u)}const c=t.outShapeLocation;if(c)switch(r.shape.length){case 1:e.gl.uniform1iv(c,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(c,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(c,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(c,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=a.Mf.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s)for(let a=0;a<t.program.customUniforms.length;++a){const n=t.program.customUniforms[a],r=t.customUniformLocations[a],o=s[a];if("float"===n.type)e.gl.uniform1fv(r,o);else if("vec2"===n.type)e.gl.uniform2fv(r,o);else if("vec3"===n.type)e.gl.uniform3fv(r,o);else if("vec4"===n.type)e.gl.uniform4fv(r,o);else if("int"===n.type)e.gl.uniform1iv(r,o);else if("ivec2"===n.type)e.gl.uniform2iv(r,o);else if("ivec3"===n.type)e.gl.uniform3iv(r,o);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));e.gl.uniform4iv(r,o)}}e.executeProgram()}(this.gpgpu,p,l,d,r),u.forEach(e=>this.disposeIntermediateTensorInfo(e)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=Object(a.he)().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=a.Mf.now();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Object(a.he)().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(a.he)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(a.Ff)(()=>{if(!Object(a.he)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Object(a.he)().getBool("DEBUG");Object(a.he)().set("DEBUG",!1);const t=this.abs(Object(a.ff)(1e-8)).dataSync()[0];if(Object(a.he)().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:o,usage:i,isPacked:c}=t;if(null!=o)return;const u=null!=this.activeTimers;let l;u&&(l=a.Mf.now());let d=t.texShape;if(null==d&&(d=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Object(a.he)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=Object(a.he)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&Object(a.he)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map((t,n)=>n>=e.length-2?a.Mf.nearestLargerEven(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length){const t=a.Mf.squeezeShape(e);e=t.newShape}let s=a.Mf.sizeFromShape(e),o=null;e.length<=1&&s<=n?o=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?o=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?o=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?o=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?o=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(o=[e[0],e[1]*e[2]*e[3]]);const i=null!=o&&Math.max(...o)>r&&Math.min(...o)<=(t?2:1)&&Math.min(...o)>0;if(null==o||i)if(t){const t=Yg(e);let n=2,r=2;e.length&&([n,r]=Qg(e)),s=t*(n/2)*(r/2),o=a.Mf.sizeToSquarishShape(s).map(e=>2*e)}else o=a.Mf.sizeToSquarishShape(s);return o}(n,c),t.texShape=d),null!=s){const e=Zg(n);let o,i=d[1],h=d[0];const p=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!c&&p||([i,h]=_g(d[0],d[1])),o=c?new Kb(e,p):new qb(e,p);const f=p?[h,i]:d,m=this.makeTensorInfo(f,r),g=this.texData.get(m.dataId);g.usage=p?Cg.PIXELS:Cg.UPLOAD,g.texShape=f,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),i,h,s);const b=[[h,i]],y=!0,v=this.runWebGLProgram(o,[m],r,b,y),x=this.texData.get(v.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Object(a.he)().get("ENGINE_COMPILE_ONLY")?this.disposeData(v.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(v.dataId)),this.disposeIntermediateTensorInfo(m),u&&(this.uploadWaitMs+=a.Mf.now()-l)}else{const e=this.acquireTexture(d,i,r,c);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype ".concat(t))}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(e," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*a.Mf.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise(e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}});e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Object(a.Pe)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw Bg(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}=zb(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.outShapeLocation=s,e.outShapeStridesLocation=o,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:o,channels:i}=e,c=Object(a.ge)().backend;if(!c.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=c.writeTexture(r,t,n,s,o,i);return Object(a.ge)().makeTensorFromDataId(u,t,n,c)}}kv.nextDataId=0;a.be.isBrowser()&&Object(a.af)("webgl",()=>new kv,2);class Sv{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=a.Ed.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Bb(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const Iv="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Nv{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a.Ed.assertAndGetBroadcastShape(t,n);const s=this.outputShape.length;this.enableShapeUniforms=Bb(s);let o="";if(r)if(0===s||1===a.Mf.sizeFromShape(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=Fb(s);if(o="\n          ".concat(e," coords = getOutputCoords();\n        "),1===s)this.enableShapeUniforms?o+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":o+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const e=tv("coords",s);this.enableShapeUniforms?o+="\n            bool nextRowOutOfBounds =\n              (".concat(e[s-2]," + 1) >= outShape[").concat(s," - 2];\n            bool nextColOutOfBounds =\n              (").concat(e[s-1]," + 1) >= outShape[").concat(s," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):o+="\n            bool nextRowOutOfBounds =\n              (".concat(e[s-2]," + 1) >= ").concat(this.outputShape[s-2],";\n            bool nextColOutOfBounds =\n              (").concat(e[s-1]," + 1) >= ").concat(this.outputShape[s-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(o,"\n\n        setOutput(result);\n      }\n    ")}}function Tv(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const jv={kernelName:a.vb,backendName:"webgl",kernelFunc:Tv};function Ev(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(s.dataId),i=Tv({inputs:{x:r},backend:n}),c=Tv({inputs:{x:a},backend:n});return o.complexTensorInfos={real:i,imag:c},s}const Cv={kernelName:a.A,backendName:"webgl",kernelFunc:Ev},Av="return (a < 0.) ? b * a : a;",Rv="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Fv={kernelName:a.Db,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:o}=r,i=n.makeTensorInfo([],"float32",a.Mf.createScalarValue(o,"float32")),c=Object(a.he)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Nv(Rv,s.shape,i.shape):new Sv(Av,s.shape,i.shape),u=n.runWebGLProgram(c,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),u}},_v="return (a < 0.) ? b * a : a;",Mv="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Dv={kernelName:a.lc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,o=Object(a.he)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Nv(Mv,r.shape,s.shape):new Sv(_v,r.shape,s.shape);return n.runWebGLProgram(o,[r,s],"float32")}};function Lv(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:r,dtype:s}=e;return e=>{let{inputs:o,backend:i}=e;const{x:c}=o,u=i,l=s||c.dtype;if(u.shouldExecuteOnCPU([c])&&null!=r){const e=u.texData.get(c.dataId),t=r(e.values,l);return u.makeTensorInfo(c.shape,l,t)}let d;return d=Object(a.he)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new yv(c.shape,n):new cv(c.shape,t),u.runWebGLProgram(d,[c],l)}}function zv(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:r=!1,supportsComplex:s=!1,cpuKernelImpl:o,dtype:i}=e;return e=>{let{inputs:c,backend:u}=e;const{a:l,b:d}=c,h=u;if(s&&"complex64"===l.dtype){const e=h.texData.get(l.dataId),n=h.texData.get(d.dataId),[r,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(e=>{const[n,r]=e,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},o={dataId:r.dataId,dtype:r.dtype,shape:d.shape},i=new Sv(t,l.shape,d.shape);return h.runWebGLProgram(i,[s,o],Object(a.Lf)(n.dtype,r.dtype))}),o=Ev({inputs:{real:r,imag:s},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(s),o}const p=i||Object(a.Lf)(l.dtype,d.dtype);if(("string"===l.dtype||"string"===d.dtype||h.shouldExecuteOnCPU([l,d]))&&null!=o){const e=h.texData.get(l.dataId).values,t=h.texData.get(d.dataId).values,n="string"===l.dtype?a.Ed.fromUint8ToStringArray(e):e,r="string"===l.dtype?a.Ed.fromUint8ToStringArray(t):t,[s,i]=o(l.shape,d.shape,n,r,p),c=h.makeTensorInfo(i,p);return h.texData.get(c.dataId).values=s,c}let f;return f=Object(a.he)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new Nv(n,l.shape,d.shape,r):new Sv(t,l.shape,d.shape),h.runWebGLProgram(f,[l,d],p)}}function Pv(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return"return x;";if("relu"===e)return t?gv:dv;if("elu"===e)return t?mv:"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?bv:hv;if("prelu"===e)return t?Mv:_v;if("leakyrelu"===e)return t?Rv:Av;if("sigmoid"===e)return t?"return 1.0 / (1.0 + exp(-1.0 * x));":fv;throw new Error("Activation ".concat(e," has not been implemented for the WebGL backend."))}class Bv{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Bb(this.outputShape.length);const u=r?e[1]:e[2],l=Math.ceil(u/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(o,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(o,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(o,"\n        }"),g="result = activation(result);");const b=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let y="rc.x",v="rc.x";e[0]<t[0]?y="imod(rc.x, ".concat(e[0],")"):t[0]<e[0]&&(v="imod(rc.x, ".concat(t[0],")")),this.userCode="\n      ".concat(m,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(l,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(y,";\n        int batchB = ").concat(v,";\n        for (int i = 0; i < ").concat(l,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(d,");\n          vec4 b = getMatrixB(batchB, ").concat(h,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(p[0]," * ").concat(f[0],");\n          result += (").concat(p[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(b,"\n\n        ").concat(g,"\n\n        setOutput(result);\n      }\n    ")}}const Wv="return areal * breal - aimag * bimag;",Uv="return areal * bimag + aimag * breal;";class Vv{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=a.Ed.assertAndGetBroadcastShape(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const Gv="return a * b;";function Hv(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,o=a.Ed.upcastType(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new Vv(Wv,r.shape,s.shape),o=new Vv(Uv,r.shape,s.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],c=n.runWebGLProgram(a,i,"float32"),u=n.runWebGLProgram(o,i,"float32"),l=Ev({inputs:{real:c,imag:u},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),l}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[a,i]=Ty(r.shape,s.shape,e.values,t.values,o),c=n.makeTensorInfo(i,o);return n.texData.get(c.dataId).values=a,c}let i;return i=Object(a.he)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Nv(Gv,r.shape,s.shape):new Sv(Gv,r.shape,s.shape),n.runWebGLProgram(i,[r,s],o)}const qv={kernelName:a.Zb,backendName:"webgl",kernelFunc:Hv};function Kv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:o}=r,i=n,c=a.Mf.sizeFromShape(s.shape),u=a.Mf.inferFromImplicitShape(o,c),l=a.Mf.sizeFromShape(u);a.Mf.assert(c===l,()=>"The new shape (".concat(u,") has ").concat(l," elements and the old ")+"shape (".concat(s.shape,") has ").concat(c," elements. The new shape and old ")+"shape must have the same number of elements.");const d=i.texData.get(s.dataId);return!d.isPacked||$g(s.shape,u)||null!==d.texture&&$g(d.shape,u)?(i.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(e,t,n){const r=[Yg(e.shape),...Qg(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[Yg(t),...Qg(t)],o=new rv(s,r),i=[r],c=n.runWebGLProgram(o,[a],e.dtype,i,!0);return{dataId:c.dataId,shape:t,dtype:c.dtype}}(s,u,i)}const Xv={kernelName:a.wc,backendName:"webgl",kernelFunc:Kv};class Yv{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:o}=e;this.outputShape=[r,o];const i=4*Math.floor(n/4),c=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u="sumValue += dot(values * ".concat(a.Mf.isInt(e)?e.toPrecision(2):e,", ones);")}let l="";s%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(s,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(u,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(u,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(u,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(u,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class Qv{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let c="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?c="sumValue":"prod"===t?c="prodValue":"all"===t?c="allValue":"any"===t&&(c="anyValue");const u=4*Math.floor(n/4),l=n%4;let d="\n      if (".concat("sum"===t,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===t,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===t," || ").concat("max"===t,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),h="vec4";"all"===t?(o="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(o="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p="\n        if (inIdx < 0 || inIdx >= ".concat(a,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(o,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(p,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(o,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(u,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(d,"\n        }\n\n        int inIdx = inOffset + ").concat(u,";\n        if (").concat(1===l,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(2===l,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(3===l,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(d,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function Zv(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=a.Ed.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let o=e;for(let a=0;a<s.length;a++){const{inSize:i,windowSize:c,outSize:u}=s[a];let l,d;l="mean"===n?0===a?new Yv({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:u},i):new Yv({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:u}):new Qv({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:u},n),d=o,o=r.runWebGLProgram(l,[o],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return o}class Jv{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const r=Fb(this.rank),a=function(e){const t=e.length;if(t>6)throw Error("Transpose for rank ".concat(t," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}(t);this.userCode="\n    void main() {\n      ".concat(r," resRC = getOutputCoords();\n      setOutput(getA(").concat(a,"));\n    }\n    ")}}class $v{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const r=Fb(this.rank),a=ev("rc",this.rank),s=new Array(this.rank);for(let u=0;u<t.length;u++)s[t[u]]=a[u];const o="vec2(".concat(s.slice(-2).join(),")"),i="++".concat(a[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(s.join(),"), ").concat(o,")");this.userCode="\n    void main() {\n      ".concat(r," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(a[this.rank-1],";\n      if(++").concat(a[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function ex(e,t,n){const r=Object(a.he)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $v(e.shape,t):new Jv(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function tx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r;return function(e,t,n,r){const s=t,o=e.shape.length,i=a.Mf.parseAxisParam(s,e.shape);let c=i;const u=a.Ed.getAxesPermutation(c,o),l=null!=u;let d=e;l&&(d=ex(e,u,r),c=a.Ed.getInnerMostAxes(c.length,o)),a.Ed.assertAxesAreInnerMostDims("sum",c,o);const[h,p]=a.Ed.computeOutAndReduceShapes(d.shape,c);let f=h;n&&(f=a.Ed.expandShapeToKeepDim(h,i));const m=a.Mf.sizeFromShape(p),g=Kv({inputs:{x:d},attrs:{shape:[a.Mf.sizeFromShape(e.shape)/m,m]},backend:r}),b=Zv(g,Object(a.zf)(e.dtype),"sum",r),y=Kv({inputs:{x:b},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(b),l&&r.disposeIntermediateTensorInfo(d),y}(s,o,i,n)}const nx={kernelName:a.hd,backendName:"webgl",kernelFunc:tx};function rx(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,o=n,i=a.shape.length,c=new Array(i);for(let l=0;l<c.length;l++)c[l]=a.shape[s[l]];let u;if(o.shouldExecuteOnCPU([a])){const e=o.texData.get(a.dataId).values,t=Jy(e,a.shape,a.dtype,s,c);u=o.makeTensorInfo(c,a.dtype);o.texData.get(u.dataId).values=t}else u=ex(a,s,o);return u}const ax={kernelName:a.qd,backendName:"webgl",kernelFunc:rx};function sx(e){let{a:t,b:n,transposeA:r,transposeB:s,backend:o,bias:i=null,preluActivationWeights:c=null,leakyreluAlpha:u=0,activation:l=null}=e;const d=t.shape.length,h=n.shape.length,p=r?t.shape[d-2]:t.shape[d-1],f=s?n.shape[h-1]:n.shape[h-2],m=r?t.shape[d-1]:t.shape[d-2],g=s?n.shape[h-2]:n.shape[h-1],b=t.shape.slice(0,-2),y=n.shape.slice(0,-2),v=a.Mf.sizeFromShape(b),x=a.Mf.sizeFromShape(y),w=a.Jd.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([m,g]);a.Mf.assert(p===f,()=>"Error in matMul: inner shapes (".concat(p,") and (")+"".concat(f,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(n.shape," and transposeA=").concat(r)+" and transposeB=".concat(s," must match."));const O=r?[v,p,m]:[v,m,p],k=s?[x,g,f]:[x,f,g],S=Kv({inputs:{x:t},backend:o,attrs:{shape:O}}),I=Kv({inputs:{x:n},backend:o,attrs:{shape:k}}),N=[S,I],T=Math.max(v,x),j=r?S.shape[1]:S.shape[2],E=null!=i,C=null!=c,A="leakyrelu"===l,R=null!=l?Pv(l,!0):null;let F;if((1===m||1===g)&&j>1e3&&!1===(E||C||A||null!=R)){let e=S,t=I;r&&(e=rx({inputs:{x:S},backend:o,attrs:{perm:[0,2,1]}}),N.push(e)),s&&(t=rx({inputs:{x:I},backend:o,attrs:{perm:[0,2,1]}}),N.push(t));const n=1===g;let a=e;1!==g&&(a=Kv({inputs:{x:e},backend:o,attrs:{shape:[T,j,1]}}),N.push(a));const i=1===g?2:1;let c=t;n&&(c=Kv({inputs:{x:t},backend:o,attrs:{shape:[T,1,j]}}),N.push(c));const u=Hv({inputs:{a:a,b:c},backend:o});F=tx({inputs:{x:u},backend:o,attrs:{axis:i,keepDims:!0}}),N.push(u)}else{const e=Object(a.Lf)(t.dtype,n.dtype),l=new Bv(O,k,[T,m,g],r,s,E,R,C,A),d=[S,I];if(null!=i&&d.push(i),C&&d.push(c),A){const e=o.makeTensorInfo([],"float32",a.Mf.createScalarValue(u,"float32"));d.push(e),N.push(e)}F=o.runWebGLProgram(l,d,e)}const _=Kv({inputs:{x:F},backend:o,attrs:{shape:w}});N.push(F);for(const a of N)o.disposeIntermediateTensorInfo(a);return _}const ox={kernelName:a.vd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=r;return sx({a:a,b:s,transposeA:c,transposeB:u,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}};const ix={kernelName:a.a,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=zy(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=Object(a.he)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new yv(r.shape,"return abs(x);"):new cv(r.shape,"return abs(x);"),n.runWebGLProgram(s,[r],r.dtype)}},cx=Lv({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),ux={kernelName:a.b,backendName:"webgl",kernelFunc:cx},lx=Lv({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),dx={kernelName:a.c,backendName:"webgl",kernelFunc:lx},hx="return a + b;",px=zv({opSnippet:hx,packedOpSnippet:hx,supportsComplex:!0,cpuKernelImpl:sy}),fx={kernelName:a.d,backendName:"webgl",kernelFunc:px};class mx{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>"T".concat(t));const n=[];this.variableNames.forEach(e=>{n.push("float v".concat(e," = get").concat(e,"AtOutCoords();"))});const r=this.variableNames.map(e=>"v".concat(e)).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(r,";\n        setOutput(result);\n      }\n    ")}}class gx{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>"T".concat(t));const n=[];this.variableNames.forEach(e=>{n.push("vec4 v".concat(e," = get").concat(e,"AtOutCoords();"))});const r=this.variableNames.map(e=>"v".concat(e)).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(r,";\n        setOutput(result);\n      }\n    ")}}const bx={kernelName:a.e,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return Tv({inputs:{x:s[0]},backend:r});if(s.length>Object(a.he)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const o=s.map(e=>e.dtype).reduce((e,t)=>Object(a.Lf)(e,t)),i=s.map(e=>e.shape),c=Object(a.he)().getBool("WEBGL_PACK")?new gx(s[0].shape,i):new mx(s[0].shape,i);return r.runWebGLProgram(c,s,o)}};const yx={kernelName:a.f,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r,c=s.shape.length,u=a.Mf.parseAxisParam(o,s.shape);let l=u;const d=a.Ed.getAxesPermutation(l,c);let h=s;null!=d&&(h=rx({inputs:{x:s},backend:n,attrs:{perm:d}}),l=a.Ed.getInnerMostAxes(l.length,c)),a.Ed.assertAxesAreInnerMostDims("all",l,c);const[p,f]=a.Ed.computeOutAndReduceShapes(h.shape,l),m=Kv({inputs:{x:h},backend:n,attrs:{shape:[-1,a.Mf.sizeFromShape(f)]}}),g=Zv(m,m.dtype,"all",n);let b;if(i){b=Kv({inputs:{x:g},backend:n,attrs:{shape:a.Ed.expandShapeToKeepDim(p,u)}})}else b=Kv({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),b}};const vx={kernelName:a.g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r,c=s.shape.length,u=a.Mf.parseAxisParam(o,s.shape);let l=u;const d=a.Ed.getAxesPermutation(l,c);let h=s;null!=d&&(h=rx({inputs:{x:s},backend:n,attrs:{perm:d}}),l=a.Ed.getInnerMostAxes(l.length,c)),a.Ed.assertAxesAreInnerMostDims("any",l,c);const[p,f]=a.Ed.computeOutAndReduceShapes(h.shape,l),m=Kv({inputs:{x:h},backend:n,attrs:{shape:[-1,a.Mf.sizeFromShape(f)]}}),g=Zv(m,m.dtype,"any",n);let b;if(i){b=Kv({inputs:{x:g},backend:n,attrs:{shape:a.Ed.expandShapeToKeepDim(p,u)}})}else b=Kv({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),b}};class xx{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(r,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(r,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(o," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class wx{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,a.Mf.assert(e.length>2,()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2."));const s=e[e.length-1],o=Math.ceil(s/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,c=i.length,u=Fb(c),l=tv("coords",c);let d,h;if(1===o){h=c+1;const e=Fb(h);d="\n        ".concat(e," sourceLocR = ").concat(e,"(").concat(l.join(),", 0);\n        ++").concat(l[c-1],";\n        ").concat(e," sourceLocG = ").concat(e,"(").concat(l.join(),", 0);\n        ++").concat(l[c-2],";\n        ").concat(e," sourceLocA = ").concat(e,"(").concat(l.join(),", 0);\n        --").concat(l[c-1],";\n        ").concat(e," sourceLocB = ").concat(e,"(").concat(l.join(),", 0);\n        --").concat(l[c-2],";")}else h=c,d="\n        ".concat(u," sourceLocR = coords;\n        ++").concat(l[c-1],";\n        ").concat(u," sourceLocG = coords;\n        ++").concat(l[c-2],";\n        ").concat(u," sourceLocA = coords;\n        --").concat(l[c-1],";\n        ").concat(u," sourceLocB = coords;\n        --").concat(l[c-2],";");const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map(e=>"int "+e),g=tv("sourceLocR",h-1).concat("inIdx.r"),b=tv("sourceLocG",h-1).concat("inIdx.g"),y=tv("sourceLocB",h-1).concat("inIdx.b"),v=tv("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(b.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(v.join(),")));"),O="vec4(\n            getAChannel(".concat(g.join(),"),\n            hasNextCol ? getAChannel(").concat(b.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(v.join(),") : 0.)"),k=r?"":"\n      float getBestIndicesAChannel(".concat(m.join(),") {\n        return getChannel(getBestIndicesA(").concat(p.join(),"),\n                                          vec2(").concat(p.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(m.join(),") {\n        return getChannel(getA(").concat(p.join(),"),\n                               vec2(").concat(p.slice(-2).join(),"));\n      }\n      ").concat(k,"\n      void main() {\n        ").concat(u," coords = getOutputCoords();\n        bool hasNextCol = ").concat(l[c-1]," < ").concat(i[c-1]-1,";\n        bool hasNextRow = ").concat(l[c-2]," < ").concat(i[c-2]-1,";\n        ").concat(d,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(f,", sourceLocG").concat(f,",\n          sourceLocB").concat(f,", sourceLocA").concat(f,") * ").concat(t,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(O,";\n\n        for (int i = 0; i < ").concat(t,"; i++) {\n          inIdx = srcIdx;\n          ").concat(w,"\n          vec4 candidate = ").concat(O,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(x,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function Ox(e,t,n,r){const s=[n];if(a.Ed.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!Object(a.he)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],o=e.texData.get(t.dataId);let i=t;null!==o&&o.isPacked&&(i=e.unpackTensor(t),n.push(i));const[c,u]=a.Ed.computeOutAndReduceShapes(i.shape,s),l=a.Mf.sizeFromShape(u),d=Kv({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(d);const h=function e(t,n,r){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,o=n.shape[0],i=n.shape[1];null!=s&&(o=s.shape[0],i=s.shape[1]);const c=a.Ed.computeOptimalWindowSize(i),u={windowSize:c,inSize:i,batchSize:o,outSize:Math.ceil(i/c)},l=new xx(u,r,null==s),d=[n];null!=s&&d.push(s);const h=t.runWebGLProgram(l,d,"int32");if(1===h.shape[1])return h;const p=e(t,n,r,h);return t.disposeIntermediateTensorInfo(h),p}(e,d,r);n.push(h);const p=Kv({inputs:{x:h},backend:e,attrs:{shape:c}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),p}return function e(t,n,r){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const o=null!=s?s.shape:n.shape,i=o[o.length-1],c=a.Ed.computeOptimalWindowSize(i),u=new wx(o,c,r,null==s),l=null==s?[n]:[n,s],d=t.runWebGLProgram(u,l,"int32");if(d.shape.length===n.shape.length){const a=e(t,n,r,d);return t.disposeIntermediateTensorInfo(d),a}return d}(e,t,r)}const kx={kernelName:a.h,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o}=r;let i=a.Mf.parseAxisParam(o,s.shape);const c=a.Ed.getAxesPermutation(i,s.shape.length);let u=s;const l=[];null!=c&&(u=rx({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(u),i=a.Ed.getInnerMostAxes(i.length,u.shape.length)),a.Ed.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const d=Ox(n,u,i[0],"max");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}};const Sx={kernelName:a.i,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o}=r;let i=a.Mf.parseAxisParam(o,s.shape);const c=a.Ed.getAxesPermutation(i,s.shape.length);let u=s;const l=[];null!=c&&(u=rx({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(u),i=a.Ed.getInnerMostAxes(i.length,u.shape.length)),a.Ed.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const d=Ox(n,u,i[0],"min");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},Ix=Lv({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Nx={kernelName:a.j,backendName:"webgl",kernelFunc:Ix},Tx=Lv({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),jx={kernelName:a.k,backendName:"webgl",kernelFunc:Tx},Ex=Lv({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Cx={kernelName:a.l,backendName:"webgl",kernelFunc:Ex},Ax=zv({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),Rx={kernelName:a.m,backendName:"webgl",kernelFunc:Ax},Fx=Lv({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),_x={kernelName:a.n,backendName:"webgl",kernelFunc:Fx};class Mx{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m="((batch  * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + d"),g="(xR * ".concat(e.inWidth," + xC) * ").concat(e.inChannels," + d");let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(h,", ").concat(p,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(l,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(u,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(t," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(r?a?m:g:"wR * ".concat(d," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let y="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(y="avgValue / max(count, 1.0)");const v=4*Math.floor(s/4),x=s%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(h,", ").concat(p,");\n      const float initializationValue = ").concat(b,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(b,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(l,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(v,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(u,", d),\n              getValue(batch, xR, xC + 2 * ").concat(u,", d),\n              getValue(batch, xR, xC + 3 * ").concat(u,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(v,";\n          if (").concat(1===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(u,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(u,", d),\n              getValue(batch, xR, xC + 2 * ").concat(u,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(y,");\n      }\n    ")}}class Dx{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,c=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let v="0.0";if(y||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(b,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(h,";\n              wD += ").concat(u,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(p,";\n                wR += ").concat(l,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(d,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(t," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(r?a?"(((batch * ".concat(e.inDepth," + xD) * ").concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"((xD * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"wD * ".concat(p," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let x="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(x="avgValue / max(count, 1.0)");const w=4*Math.floor(s/4),O=s%4,k="\n      if (".concat(y,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(b,");\n      const float initializationValue = ").concat(v,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(v,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(h,";\n            wD += ").concat(u,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p,";\n            wR += ").concat(l,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(d,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(d,", ch)\n              );\n\n              ").concat(k,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===O,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(k,"\n            } else if (").concat(2===O,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(k,"\n            } else if (").concat(3===O,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                initializationValue\n              );\n\n              ").concat(k,"\n            }\n          }\n        }\n        setOutput(").concat(x,");\n      }\n    ")}}const Lx={kernelName:a.o,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;ob(s,"avgPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:u}=r;a.Mf.assert(a.Ed.eitherStridesOrDilationsAreOne(i,1),()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const l=a.Ed.computePool2DInfo(s.shape,o,i,1,c,u);if(1===l.filterWidth&&1===l.filterHeight&&a.Mf.arraysEqual(l.inShape,l.outShape))return Tv({inputs:{x:s},backend:n});const d=new Mx(l,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}};const zx={kernelName:a.p,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:u,dataFormat:l}=r,d=a.Ed.computePool3DInfo(s.shape,o,i,[1,1,1],c,u,l),h=new Dx(d,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class Px{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=i-1-e.padInfo.top,l=c-1-e.padInfo.left,d=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(u,", ").concat(l,");\n      const float avgMultiplier = float(").concat(d,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(s,") {\n          float dyR = float(dyRCorner + wR) / ").concat(r,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(o,") {\n            float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Bx{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=l-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*r);this.userCode="\n      const ivec3 pads = ivec3(".concat(p,", ").concat(f,", ").concat(m,");\n      const float avgMultiplier = float(").concat(g,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(l,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(a,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(d,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(h,";\n                wC += ").concat(u,") {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const Wx={kernelName:a.q,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o}=t,i=o,{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=r,h=a.Ed.computePool3DInfo(i.shape,c,u,[1,1,1],l,d),p=new Bx(h);return n.runWebGLProgram(p,[s],i.dtype)}};const Ux={kernelName:a.r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o}=t,i=o;ob([s,o],"avgPoolGrad");const{filterSize:c,strides:u,pad:l}=r,d=a.Ed.computePool2DInfo(i.shape,c,u,1,l),h=new Px(d);return n.runWebGLProgram(h,[s],i.dtype)}};const Vx={kernelName:a.s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:o,transposeB:i}=r;return sx({a:a,b:s,transposeA:o,transposeB:i,backend:n})}};class Gx{constructor(e,t,n,r,s,o){this.outputShape=[],this.variableNames=["x","mean","variance"],a.Ed.assertAndGetBroadcastShape(e,t),a.Ed.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(a.Ed.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="1.0";null!=s&&(a.Ed.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(i,";\n        float scale = ").concat(c,";\n        float inv = scale * inversesqrt(variance + float(").concat(o,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class Hx{constructor(e,t,n,r,s,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],a.Ed.assertAndGetBroadcastShape(e,t),a.Ed.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(a.Ed.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="vec4(1.0)";null!=s&&(a.Ed.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = ".concat(i,";\n        vec4 scale = ").concat(c,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(o,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const qx={kernelName:a.nb,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,mean:o,variance:i,offset:c,scale:u}=t;a.Mf.assert(o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),a.Mf.assert(null==c||o.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),a.Mf.assert(null==u||o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=r;null==l&&(l=.001);const d=[s,o,i];let h=null;null!=c&&(h=c.shape,d.push(c));let p=null;null!=u&&(p=u.shape,d.push(u));const f=Object(a.he)().getBool("WEBGL_PACK_NORMALIZATION")?new Hx(s.shape,o.shape,i.shape,h,p,l):new Gx(s.shape,o.shape,i.shape,h,p,l);return n.runWebGLProgram(f,d,d[0].dtype)}};class Kx{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Fb(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Xx.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error("Slicing for rank ".concat(e," is not yet supported"))}(this.rank);let r;const a=e.map((e,t)=>"sourceLoc.".concat(Xx[t]," = start[").concat(t,"] + coords.").concat(Xx[t],";"));r="\n        ".concat(t," sourceLoc;\n        ").concat(t," coords = getOutputCoords();\n        ").concat(a.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(r,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const Xx=["x","y","z","w","u","v"];class Yx{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Fb(this.rank),n=tv("coords",this.rank),r=tv("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":"vec2(".concat(r.slice(-2).join(),")"),s="getChannel(getSource(".concat(r.join(),"), ").concat(a,")"),o="\n      result.x = ".concat(s,";\n      if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n        ++").concat(r[this.rank-1],";\n        result.y = ").concat(s,";\n        --").concat(r[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(e[this.rank-2],") {\n        ++").concat(r[this.rank-2],";\n        result.z = ").concat(s,";\n        if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n          ++").concat(r[this.rank-1],";\n          result.w = ").concat(s,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(t,"(").concat(e.map((e,t)=>"start[".concat(t,"]")).join(),");"):e.map((e,t)=>"".concat(r[t]," = ").concat(n[t]," + start[").concat(t,"];")).join("\n");this.userCode="\n      void main() {\n        ".concat(t," coords = getOutputCoords();\n        ").concat(t," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(o,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}function Qx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:o,size:i}=r,[c,u]=a.qf.parseSliceParams(s,o,i);if(a.qf.assertParamsValid(s,c,u),0===a.Mf.sizeFromShape(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=Py(e.values,c,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,t)}const{isPacked:l}=n.texData.get(s.dataId),d=a.qf.isSliceContinous(s.shape,c,u);if(l||!d){const e=Object(a.he)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Yx(u):new Kx(u),t=[c];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),o=r.makeTensorInfo(n,e.dtype),i=r.texData.get(o.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let c=a.qf.computeFlatOffset(t,a.Mf.computeStrides(e.shape));s.slice&&(c+=s.slice.flatOffset),i.slice={flatOffset:c,origDataId:s.slice&&s.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),o}(s,c,u,n)}const Zx={kernelName:a.Nc,backendName:"webgl",kernelFunc:Qx},Jx={kernelName:a.t,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:o,crops:i}=r;a.Mf.assert(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const c=o.reduce((e,t)=>e*t),u=a.Ed.getReshaped(s.shape,o,c),l=a.Ed.getPermuted(u.length,o.length),d=a.Ed.getReshapedPermuted(s.shape,o,c),h=a.Ed.getSliceBeginCoords(i,o.length),p=a.Ed.getSliceSize(d,i,o.length),f=[],m=Kv({inputs:{x:s},backend:n,attrs:{shape:u}}),g=rx({inputs:{x:m},backend:n,attrs:{perm:l}}),b=Kv({inputs:{x:g},backend:n,attrs:{shape:d}}),y=Qx({inputs:{x:b},backend:n,attrs:{begin:h,size:p}});return f.push(m),f.push(g),f.push(b),f.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}};const $x={kernelName:a.u,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o}=r,i=n.readSync(a.dataId),c=n.readSync(s.dataId),u=oy(i,c,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,u)}};const ew={kernelName:a.v,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,o=Object(a.he)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=Object(a.he)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||1===i){const e=n.texData.get(r.dataId).values,t=n.texData.get(s.dataId).values,[a,o]=cy(r.shape,s.shape,e,t,r.dtype),i=n.makeTensorInfo(o,r.dtype);return n.texData.get(i.dataId).values=a,i}let c;return c=o?new Nv("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,s.shape,!1):new Sv("\n  return float(int(a.r) & int(b.r));\n",r.shape,s.shape),n.runWebGLProgram(c,[r,s],r.dtype)}};const tw={kernelName:a.w,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,o=n.readSync(r.dataId),i=n.readSync(s.dataId),c=a.Ed.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return n.makeTensorInfo([c.length],"int32",Int32Array.from(c))}},nw=zv({opSnippet:"return float(a != b);",cpuKernelImpl:Ey,dtype:"bool"}),rw={kernelName:a.ec,backendName:"webgl",kernelFunc:nw};function aw(e){const{inputs:t,backend:n}=e,{input:r}=t;return Tv({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const sw={kernelName:a.rc,backendName:"webgl",kernelFunc:aw};const ow={kernelName:a.x,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:o}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===o.dtype)return Tv({inputs:{x:o},backend:r});const t=a.Rf(o.shape),n=e({inputs:{x:o},backend:r,attrs:{dtype:"float32"}}),s=Ev({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===o.dtype){const t=aw({inputs:{input:o},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!a.Mf.hasEncodingLoss(o.dtype,i)){const e=Tv({inputs:{x:o},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([o])){const e=r.texData.get(o.dataId).values,[t,n,a]=uy(e,o.shape,o.dtype,i);return r.makeTensorInfo(t,n,a)}if("int32"===i)return function(e,t){const n=new cv(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(o,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",a.Mf.getTypedArrayFromDType("bool",1)),t=nw({inputs:{a:o,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error("Error in Cast: failed to cast ".concat(o.dtype," to ").concat(i))}},iw="return ceil(x);",cw=Lv({opSnippet:iw,packedOpSnippet:iw,cpuKernelImpl:ly}),uw={kernelName:a.y,backendName:"webgl",kernelFunc:cw};class lw{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class dw{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const hw={kernelName:a.z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:o,clipValueMax:i}=r;let c;c=Object(a.he)().getBool("WEBGL_PACK_CLIP")?new dw(s.shape):new lw(s.shape);const u=[[o],[i]];return n.runWebGLProgram(c,[s],s.dtype,u)}};class pw{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function fw(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const mw={kernelName:a.B,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new pw(r.shape),o=[fw(r,a.complexTensorInfos.real),fw(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class gw{constructor(e){this.outputShape=[],this.outputShape=a.Ed.computeOutShape(e,1),this.variableNames=e.map((e,t)=>"T".concat(t));const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const n=["if (yC < ".concat(t[0],") setOutput(getT0(yR, yC));")];for(let a=1;a<t.length;a++){const e=t[a-1];n.push("else if (yC < ".concat(t[a],") ")+"setOutput(getT".concat(a,"(yR, yC-").concat(e,"));"))}const r=t.length,s=t[t.length-1];n.push("else setOutput(getT".concat(r,"(yR, yC-").concat(s,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class bw{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=a.Ed.computeOutShape(e,t);const n=this.outputShape,r=n.length,s=Fb(r),o=tv("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>"T".concat(t));const c=new Array(e.length-1);c[0]=e[0][t];for(let a=1;a<c.length;a++)c[a]=c[a-1]+e[a][t];const u=i[t],l=i.slice(-2),d=i.join();let h="if (".concat(u," < ").concat(c[0],") {\n        return getChannel(\n            getT0(").concat(d,"), vec2(").concat(l.join(),"));\n        }");for(let a=1;a<c.length;a++){const e=c[a-1];h+="\n        if (".concat(u," < ").concat(c[a],"  && ").concat(u," >= ").concat(c[a-1],") {\n          return getChannel(\n            getT").concat(a,"(").concat(yw(i,u,e),"),\n            vec2(").concat(yw(l,u,e),"));\n        }")}const p=c.length,f=c[c.length-1];h+="\n        return getChannel(\n          getT".concat(p,"(").concat(yw(i,u,f),"),\n          vec2(").concat(yw(l,u,f),"));"),this.userCode="\n      float getValue(".concat(i.map(e=>"int "+e),") {\n        ").concat(h,"\n      }\n\n      void main() {\n        ").concat(s," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(o,"), 0., 0., 0.);\n\n        ").concat(o[r-1]," = ").concat(o[r-1]," + 1;\n        if (").concat(o[r-1]," < ").concat(n[r-1],") {\n          result.g = getValue(").concat(o,");\n        }\n\n        ").concat(o[r-2]," = ").concat(o[r-2]," + 1;\n        if (").concat(o[r-2]," < ").concat(n[r-2],") {\n          result.a = getValue(").concat(o,");\n        }\n\n        ").concat(o[r-1]," = ").concat(o[r-1]," - 1;\n        if (").concat(o[r-2]," < ").concat(n[r-2]," &&\n            ").concat(o[r-1]," < ").concat(n[r-1],") {\n          result.b = getValue(").concat(o,");\n        }\n        setOutput(result);\n      }\n    ")}}function yw(e,t,n){const r=e.indexOf(t);return e.map((e,t)=>t===r?"".concat(e," - ").concat(n):e).join()}function vw(e){const{inputs:t,backend:n}=e,{input:r}=t;return Tv({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const xw={kernelName:a.wb,backendName:"webgl",kernelFunc:vw};function ww(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map(e=>aw({inputs:{input:e},backend:n})),a=e.map(e=>vw({inputs:{input:e},backend:n})),s=ww(r,t,n),o=ww(a,t,n),i=Ev({inputs:{real:s,imag:o},backend:n});return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),a.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map(e=>{const r=a.Mf.sizeFromShape(e.shape.slice(t));return Kv({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})}),o=s.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),i=a.Ed.computeOutShape(s.map(e=>e.shape),1),c=1===s[0].shape[0],u=dy(o,i,r,c),l=a.Ed.computeOutShape(e.map(e=>e.shape),t),d=n.makeTensorInfo(l,r,u);return s.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}const o=e.filter(e=>a.Mf.sizeFromShape(e.shape)>0),i=Object(a.he)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(1===o.length){const t=i?new cv(e[0].shape,pv):new yv(e[0].shape,pv);return n.runWebGLProgram(t,e,r)}const c=Object(a.he)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>c){const e=[];for(let a=0;a<o.length;a+=c){const r=o.slice(a,a+c);e.push(ww(r,t,n))}const r=ww(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(i){const e=new bw(o.map(e=>e.shape),t);return n.runWebGLProgram(e,o,r)}const{tensors2D:u,outShape:l}=function(e,t,n){const r=a.Ed.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>Kv({inputs:{x:e},attrs:{shape:[-1,a.Mf.sizeFromShape(e.shape.slice(t))]},backend:n})),outShape:r}}(o,t,n),d=new gw(u.map(e=>e.shape)),h=n.runWebGLProgram(d,u,r);u.forEach(e=>n.disposeIntermediateTensorInfo(e));const p=Kv({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),p}function Ow(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,o=a.Mf.parseAxisParam(s,t[0].shape)[0],i=t.map(e=>e.shape);a.Ed.assertParamsConsistent(i,o);const c=a.Ed.computeOutShape(t.map(e=>e.shape),o);if(0===a.Mf.sizeFromShape(c))return n.makeTensorInfo(c,t[0].dtype,[]);const u=t.filter(e=>a.Mf.sizeFromShape(e.shape)>0);return 1===u.length?Tv({inputs:{x:u[0]},backend:n}):ww(u,o,n)}const kw={kernelName:a.C,backendName:"webgl",kernelFunc:Ow};class Sw{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,c=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,b=m?2:3,y=m?3:1;let v="",x="";n&&(v=r?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):a?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(v,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(y,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(g,"], coords[").concat(b,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(d,"; wR++) {\n          int xR = xRCorner + wR * ").concat(u,";\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(h,"; wC++) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            if (xC < 0 || xC >= ").concat(e.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(m,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(p,") *\n                    getW(wR, wC, ").concat(p,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(p,", xR, xC) *\n                    getW(wR, wC, ").concat(p,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2)\n              );\n\n              if (").concat(m,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2),\n                getW(wR, wC, ").concat(p," + 2, d2)\n              );\n\n              if (").concat(m,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1),\n                  getX(batch, xR, xC, ").concat(p," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC),\n                  getX(batch, ").concat(p," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(x,"\n        setOutput(result);\n      }\n    ")}}class Iw{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,l=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(a,", ").concat(s,", ").concat(o,");\n      const ivec3 pads = ivec3(").concat(t,", ").concat(n,", ").concat(r,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(l,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(d,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(h,"; wC++) {\n              int xC = xCCorner + wC * ").concat(u,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(p,") *\n                  getW(wF, wR, wC, ").concat(p,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1),\n                  getX(batch, xF, xR, xC, ").concat(p," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2),\n                  getW(wF, wR, wC, ").concat(p," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Nw{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Bb(this.outputShape.length);const o=e.padInfo.left,i=e.strideWidth,c=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,d=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let a=0;a<l;a++)h+="\n           vec4 xTexelC".concat(2*a,";\n           int xTexelC").concat(2*a,"Ready;\n           vec4 xTexelC").concat(2*a+1,";\n           int xTexelC").concat(2*a+1,"Ready;\n           vec4 xC").concat(a,";");h+="\n     for (int r = 0; r < ".concat(u,"; r++) {\n      for (int d1 = 0; d1 < ").concat(e.inChannels,"; d1 += 2) {\n       ");for(let a=0;a<l;a++)h+="\n           xTexelC".concat(2*a," = vec4(0.0);\n           xTexelC").concat(2*a,"Ready = 0;\n           xTexelC").concat(2*a+1," = vec4(0.0);\n           xTexelC").concat(2*a+1,"Ready = 0;\n           xC").concat(a," = vec4(0.0);");h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let g=0;g<(d+1)/2;g++){const t=2*g;if(h+="\n           xC = xCCorner + ".concat(t*c,";\n           "),1===i){if(t<l&&(o%2===1?(h+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n               "),h+=1===c&&t>0?"\n                 xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                   } else {\n                     xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                   }\n                   ")):h+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xC").concat(t," = xTexelC").concat(t,";\n                 "),t+1<l)){const e=o%2===0?a.Mf.nearestLargerEven(c):c;c%2===0&&o%2===1||c%2!==0&&o%2!==1?(h+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                     xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(t+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(t+1,"Ready = 1;\n                   }\n                   "),h+=c>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                     } else {\n                      xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                     }\n                     "):"\n                     xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                     ")):h+=1===e?"\n                     xC".concat(t+1," = xTexelC").concat(t,";\n                     "):"\n                     xCOffset = xC + ".concat(e,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                       xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(t+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(t+1,"Ready = 1;\n                     }\n\n                     xC").concat(t+1," = xTexelC").concat(t+1,";\n                     ")}}else t<l&&(o%2===1?(h+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n               "),t+1<l&&(h+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                 "))):(h+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(\n                   xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n               "),t+1<l&&(h+="\n                   xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                 "))));t<l&&(h+="\n             wTexel = getW(r, ".concat(t,", d1, d2);\n             dotProd += xC").concat(t,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(e.inChannels,") {\n               dotProd += xC").concat(t,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),t+1<l&&(h+="\n               wTexel = getW(r, ".concat(t+1,", d1, d2);\n               dotProd += xC").concat(t+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(e.inChannels,") {\n                 dotProd += xC").concat(t+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",f="";n&&(p=r?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):s?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(p,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(h,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(m,"\n         ").concat(f,"\n         setOutput(result);\n       }\n     ")}}class Tw{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Bb(this.outputShape.length);const{dataFormat:n}=t,r=cb(),a="channelsLast"===n,s=a?1:2,o=a?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(e[2]," && pos < ").concat(e[1],") {");let c="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)c+="\n          blockIndex = rc.z + ".concat(e,";\n          pos = rc.y + ").concat(u,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(s,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(o,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(a,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*u+e,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*u+e,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(c,"\n\n        ").concat(r.output," = result;\n      }\n    ")}}function jw(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function Ew(e){let{x:t,filter:n,convInfo:r,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:u=null}=e;const l=t.shape,d=s.texData.get(t.dataId),h=r.inChannels,p=l[0]*l[1]*l[2],f=r.outChannels,m="channelsLast"===r.dataFormat;let g;const b=[];if(null!=i){const e=jw(i.shape,m);null!=e&&(i=Kv({inputs:{x:i},backend:s,attrs:{shape:e}}),b.push(i))}if(null!=o){const e=jw(o.shape,m);null!=e&&(o=Kv({inputs:{x:o},backend:s,attrs:{shape:e}}),b.push(o))}if(!((1===p||1===f)&&h>1e3)&&d.isPacked&&m&&null!=d.texture&&l[2]%2!==0&&a.Mf.arraysEqual(d.shape.slice(-3),l.slice(-3))){const e=l[0]*l[1]*(l[2]+1),h={dataId:t.dataId,shape:[1,e,r.inChannels],dtype:t.dtype},p=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,a.Mf.assert($g(d.shape,h.shape),()=>"packed reshape ".concat(d.shape," to ").concat(h.shape," isn't free"));const f=Kv({inputs:{x:n},backend:s,attrs:{shape:[1,r.inChannels,r.outChannels]}});b.push(f);const m=sx({a:h,b:f,backend:s,transposeA:!1,transposeB:!1,bias:o,activation:u,preluActivationWeights:i,leakyreluAlpha:c}),y=s.texData.get(m.dataId);a.Mf.assert(y.isPacked,()=>"batchMatMul result is expected to be packed"),d.shape=p,y.shape=r.outShape,g=Tv({inputs:{x:m},backend:s}),g.shape=r.outShape,b.push(m)}else{const e=r.outHeight*r.outWidth,a=Kv({inputs:{x:t},backend:s,attrs:{shape:m?[r.batchSize,e,r.inChannels]:[r.batchSize,r.inChannels,e]}}),l=Kv({inputs:{x:n},backend:s,attrs:{shape:[1,r.inChannels,r.outChannels]}}),d=sx({a:m?a:l,b:m?l:a,transposeA:!m,transposeB:!1,backend:s,bias:o,activation:u,preluActivationWeights:i,leakyreluAlpha:c});g=Kv({inputs:{x:d},backend:s,attrs:{shape:r.outShape}}),b.push(a),b.push(l),b.push(d)}for(const a of b)s.disposeIntermediateTensorInfo(a);return g}function Cw(e){let{x:t,filter:n,convInfo:r,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:u=null}=e;const{filterWidth:l,filterHeight:d,inChannels:h,outWidth:p,outHeight:f,dataFormat:m}=r,g="channelsLast"===m,b=l*d*h,y=f*p,v=[r.batchSize,b,y],x=[];if(null!=i){const e=jw(i.shape,g);null!=e&&(i=Kv({inputs:{x:i},backend:s,attrs:{shape:e}}),x.push(i))}if(null!=o){const e=jw(o.shape,g);null!=e&&(o=Kv({inputs:{x:o},backend:s,attrs:{shape:e}}),x.push(o))}const w=Kv({inputs:{x:n},backend:s,attrs:{shape:[1,b,a.Mf.sizeFromShape(n.shape)/b]}});x.push(w);const O=new Tw(v,r),k=[t.shape,[r.padInfo.top,r.padInfo.left],[r.strideHeight,r.strideWidth],[r.dilationHeight,r.dilationWidth],[r.inChannels],[r.filterWidth*r.inChannels],[r.outWidth]],S=s.runWebGLProgram(O,[t],"float32",k),I=Kv({inputs:{x:S},backend:s,attrs:{shape:v}});x.push(S),x.push(I);const N=null!=o,T=null!=i,j="leakyrelu"===u,E=u?Pv(u,!0):null,C=new Bv(g?I.shape:w.shape,g?w.shape:I.shape,g?[r.batchSize,y,r.outChannels]:[r.batchSize,r.outChannels,y],!0,!1,N,E,T,j),A=g?[I,w]:[w,I];if(o&&A.push(o),T&&A.push(i),j){const e=s.makeTensorInfo([],"float32",a.Mf.createScalarValue(c,"float32"));A.push(e),x.push(e)}const R=s.runWebGLProgram(C,A,"float32"),F=Kv({inputs:{x:R},backend:s,attrs:{shape:r.outShape}});x.push(R);for(const a of x)s.disposeIntermediateTensorInfo(a);return F}const Aw={kernelName:a.D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:i,pad:c,dataFormat:u,dilations:l,dimRoundingMode:d}=r,h=a.Ed.convertConv2DDataFormat(u),p=a.Ed.computeConv2DInfo(s.shape,o.shape,i,l,c,d,!1,h);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===h&&Object(a.he)().getBool("WEBGL_EXP_CONV")){const e=new Nw(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];f=n.runWebGLProgram(e,[s,o],"float32",t)}else if(Object(a.he)().getBool("WEBGL_CONV_IM2COL"))f=Cw({x:s,filter:o,convInfo:p,backend:n});else{const e=new Sw(p);f=n.runWebGLProgram(e,[s,o],"float32")}else f=Ew({x:s,filter:o,convInfo:p,backend:n});const m=Kv({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class Rw{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(r,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(a,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              ").concat(s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Fw{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,c=s?1:2,u=s?2:3,l=s?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(l,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(u,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(r,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n\n              if (").concat(s,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class _w{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(e.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(t," - ").concat(a,";\n\n            if (xF < 0 || xF >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(s,";\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(r," - ").concat(o,";\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Mw{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,c=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(u,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(t,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(a,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(e.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(t," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(r,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(r," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const Dw={kernelName:a.E,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:o}=t,{strides:i,pad:c,dataFormat:u,dimRoundingMode:l,filterShape:d}=r,h=a.Ed.convertConv2DDataFormat(u),p=a.Ed.computeConv2DInfo(s.shape,d,i,1,c,l,!1,h),f=new Rw(p);return n.runWebGLProgram(f,[s,o],"float32")}};class Lw{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Bb(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(r,", ").concat(a,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(e.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(e.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}const zw={kernelName:a.F,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:o}=t,{inputShape:i,strides:c,pad:u,dataFormat:l,dimRoundingMode:d}=r,h=a.Ed.convertConv2DDataFormat(l),p=a.Ed.computeConv2DInfo(i,o.shape,c,1,u,d,!1,h);if(Object(a.he)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[p.strideHeight,p.strideWidth]],t=new Lw(p);return n.runWebGLProgram(t,[s,o],"float32",e)}{const e=new Fw(p);return n.runWebGLProgram(e,[s,o],"float32")}}};const Pw={kernelName:a.G,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:i,pad:c,dilations:u}=r,l=a.Ed.computeConv3DInfo(s.shape,o.shape,i,u,c),d=new Iw(l);return n.runWebGLProgram(d,[s,o],"float32")}};const Bw={kernelName:a.H,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:o}=t,{strides:i,pad:c,filterShape:u}=r,l=a.Ed.computeConv3DInfo(s.shape,u,i,1,c),d=new _w(l);return n.runWebGLProgram(d,[s,o],"float32")}};const Ww={kernelName:a.I,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:o}=t,{pad:i,strides:c,inputShape:u}=r,l=a.Ed.computeConv3DInfo(u,o.shape,c,1,i),d=new Mw(l);return n.runWebGLProgram(d,[s,o],"float32")}},Uw=Lv({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Iv,"\n  return result;\n")}),Vw={kernelName:a.J,backendName:"webgl",kernelFunc:Uw},Gw=Lv({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Hw={kernelName:a.K,backendName:"webgl",kernelFunc:Gw};class qw{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,c]=e,[u]=t,[l,d]=n;this.outputShape=[u,l,d,c];const h="bilinear"===r?1:0,[p,f]=["".concat(o-1,".0"),"".concat(i-1,".0")],[m,g,b]=l>1?["".concat((o-1)/(l-1)),"(y2-y1) * height_ratio","y1*".concat(p," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(p)],[y,v,x]=d>1?["".concat((i-1)/(d-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(y,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(s,") {\n          return;\n        }\n\n        float height_scale = ").concat(g,";\n        float width_scale = ").concat(v,";\n\n        float in_y = ").concat(b,";\n        if( in_y < 0.0 || in_y > ").concat(p," ) {\n          setOutput(float(").concat(a,"));\n          return;\n        }\n        float in_x = ").concat(x,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(a,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(h," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const Kw={kernelName:a.L,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:u}=r,l=new qw(a.shape,s.shape,i,c,u);return n.runWebGLProgram(l,[a,s,o],"float32")}};var Xw;!function(e){e.Prod="*",e.Sum="+"}(Xw||(Xw={}));class Yw{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const a=this.outputShape.length,s=this.op===Xw.Prod?"1.0":"0.0",o=n?s:"getX(".concat(Qw(a,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let c="",u="";n?(c=r?"end != ".concat(i-1):"end != 0",u=r?"end + 1":"end - 1"):(c=r?"end + pow2 < ".concat(i):"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat(Fb(a)," coords = getOutputCoords();\n        int end = ").concat(Zw(a,"coords",this.op),";\n        float val = ").concat(o,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(c,") {\n          int idx = ").concat(u,";\n          ").concat(Zw(a,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(Qw(a,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function Qw(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".x, ").concat(t,".y");if(3===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z");if(4===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z, ").concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function Zw(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".y");if(3===e)return"".concat(t,".z");if(4===e)return"".concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function Jw(e,t,n,r,s,o){const i=t.shape.length,c=a.Ed.getAxesPermutation([r],i);let u=t;null!=c&&(u=rx({inputs:{x:t},backend:n,attrs:{perm:c}}));const l=a.Ed.getInnerMostAxes(1,i)[0];if(l!==i-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(t.shape.length-1," ")+"but got axis=".concat(r));const d=u.shape[l];let h=Tv({inputs:{x:u},backend:n});for(let a=0;a<=Math.ceil(Math.log2(d))-1;a++){const t=new Yw(e,u.shape,!1,o),r=[[a]],s=h;h=n.runWebGLProgram(t,[h],h.dtype,r),n.disposeIntermediateTensorInfo(s)}if(s){const t=new Yw(e,u.shape,s,o),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=c){const e=rx({inputs:{x:h},backend:n,attrs:{perm:a.Ed.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),e}return h}const $w={kernelName:a.M,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:o,reverse:i}=r;return Jw(Xw.Prod,a,n,s,o,i)}};const eO={kernelName:a.N,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:o,reverse:i}=r;return Jw(Xw.Sum,a,n,s,o,i)}};const tO={kernelName:a.P,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o,binaryOutput:i}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=oy(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=iy(e,t,o,i);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(a.shape.length,"."))}};class nO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(t,";\n      int offset_h = imod(h, ").concat(t,");\n      int in_w = w / ").concat(t,";\n      int offset_w = imod(w, ").concat(t,");\n      int offset_d = (offset_h * ").concat(t," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const rO={kernelName:a.Q,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:o}=r,i=a.shape[0],c=("NHWC"===o?a.shape[1]:a.shape[2])*s,u=("NHWC"===o?a.shape[2]:a.shape[3])*s,l=("NHWC"===o?a.shape[3]:a.shape[1])/(s*s),d=new nO("NHWC"===o?[i,c,u,l]:[i,l,c,u],s,o);return n.runWebGLProgram(d,[a],a.dtype)}};class aO{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Bb(this.outputShape.length);const s=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let c="",u="";n&&(c=r?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):a?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),u="result = activation(result);");const l=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(c,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(s,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(l,"\n        ").concat(u,"\n        setOutput(result);\n      }\n    ")}}class sO{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Bb(this.outputShape.length);const o=e.outChannels/e.inChannels,i=e.padInfo.left,c=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,d=e.filterWidth,h=d;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let a=0;a<d;a++)p+="\n          vec4 xTexelC".concat(2*a,";\n          int xTexelC").concat(2*a,"Ready;\n          vec4 xTexelC").concat(2*a+1,";\n          int xTexelC").concat(2*a+1,"Ready;\n          vec4 xC").concat(a,";");p+="\n    for (int r = 0; r < ".concat(l,"; r++) {\n      ");for(let a=0;a<d;a++)p+="\n          xTexelC".concat(2*a," = vec4(0.0);\n          xTexelC").concat(2*a,"Ready = 0;\n          xTexelC").concat(2*a+1," = vec4(0.0);\n          xTexelC").concat(2*a+1,"Ready = 0;\n          xC").concat(a," = vec4(0.0);");p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let b=0;b<(h+1)/2;b++){const e=2*b;if(p+="\n          xC = xCCorner + ".concat(e*u,";\n          "),1===c){if(e<d&&(i%2===1?(p+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n              "),p+=1===u&&e>0?"\n                xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                  } else {\n                    xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                  }\n                  ")):p+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xC").concat(e," = xTexelC").concat(e,";\n                "),e+1<d)){const t=i%2===0?a.Mf.nearestLargerEven(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(p+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                    xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(e+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(e+1,"Ready = 1;\n                  }\n                  "),p+=u>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                    } else {\n                     xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                    }\n                    "):"\n                    xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                    ")):p+=1===t?"\n                    xC".concat(e+1," = xTexelC").concat(e,";\n                    "):"\n                    xCOffset = xC + ".concat(t,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                      xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(e+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(e+1,"Ready = 1;\n                    }\n\n                    xC").concat(e+1," = xTexelC").concat(e+1,";\n                    ")}}else e<d&&(i%2===1?(p+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n              "),e+1<d&&(p+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                "))):(p+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(\n                  xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n              "),e+1<d&&(p+="\n                  xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                "))));e<d&&(p+="\n            wTexel = getW(r, ".concat(e,", d1, q);\n            dotProd += xC").concat(e," * vec4(wTexel.xz, wTexel.xz);\n          "),e+1<d&&(p+="\n              wTexel = getW(r, ".concat(e+1,", d1, q);\n              dotProd += xC").concat(e+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",m="";n&&(f=r?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):s?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(f,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(o,";\n        int q = d2 - d1 * ").concat(o,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(p,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(g,"\n        ").concat(m,"\n        setOutput(result);\n      }\n    ")}}const oO={kernelName:a.R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:i,pad:c,dilations:u,dimRoundingMode:l}=r;let d=u;null==d&&(d=[1,1]),a.Mf.assert(a.Ed.eitherStridesOrDilationsAreOne(i,d),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(i," and dilations '").concat(d,"'"));const h=a.Ed.computeConv2DInfo(s.shape,o.shape,i,d,c,l,!0);let p;p=Object(a.he)().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new sO(h):new aO(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[s,o],"float32",f)}};class iO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(s," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(r,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(a,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class cO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(r,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const uO={kernelName:a.S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:o}=t,{strides:i,dilations:c,pad:u,dimRoundingMode:l,filterShape:d}=r,h=a.Ed.computeConv2DInfo(s.shape,d,i,c,u,l,!0),p=new iO(h);return n.runWebGLProgram(p,[s,o],"float32")}};const lO={kernelName:a.T,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:o}=t,{strides:i,dilations:c,pad:u,dimRoundingMode:l,inputShape:d}=r,h=a.Ed.computeConv2DInfo(d,o.shape,i,c,u,l,!0),p=new cO(h);return n.runWebGLProgram(p,[s,o],"float32")}};class dO{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const hO={kernelName:a.U,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],o=a.Mf.sizeFromShape(r.shape),i=Kv({inputs:{x:r},backend:n,attrs:{shape:[o]}}),c=new dO(o),u=n.runWebGLProgram(c,[i],i.dtype),l=Kv({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class pO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:c,dilationWidth:u}=e,{top:l,left:d}=r;this.userCode="\n      const ivec2 strides = ivec2(".concat(a,", ").concat(s,");\n      const ivec2 pads = ivec2(").concat(l,", ").concat(d,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(o,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(t,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(u,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const fO={kernelName:a.V,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:i,pad:c,dilations:u}=r,l=a.Ed.computeDilation2DInfo(s.shape,o.shape,i,c,"NHWC",u);let d;const h=new pO(l);d=n.runWebGLProgram(h,[s,o],"float32");const p=Kv({inputs:{x:d},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(d),p}};const mO={kernelName:a.Z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,o=t,{allDims:i,summedDims:c,idDims:u}=a.Ed.decodeEinsumEquation(s,o.length);a.Ed.checkEinsumDimSizes(i.length,u,o);const{path:l,steps:d}=a.Ed.getEinsumComputePath(c,u),h=d.length;let p=null,f=i.length;const m=[];for(let g=0;g<h;++g){for(const e of d[g]){const{permutationIndices:t,expandDims:r}=a.Ed.getEinsumPermutation(f,u[e]);let s;a.Ed.isIdentityPermutation(t)?s=o[e]:(s=rx({inputs:{x:o[e]},backend:n,attrs:{perm:t}}),m.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);a.Mf.arraysEqual(s.shape,i)||(s=Kv({inputs:{x:s},backend:n,attrs:{shape:i}}),m.push(s)),null===p?p=s:(p=Hv({inputs:{a:s,b:p},backend:n}),m.push(p))}g<h-1&&(l[g]>=0&&(p=tx({inputs:{x:p},backend:n,attrs:{axis:l[g]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const a of m)a!==p&&n.disposeIntermediateTensorInfo(a);return p}},gO=Lv({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),bO={kernelName:a.ab,backendName:"webgl",kernelFunc:gO},yO={kernelName:a.bb,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,o=Object(a.he)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Nv("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new Sv("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(o,[r,s],r.dtype)}},vO=zv({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:hy}),xO={kernelName:a.cb,backendName:"webgl",kernelFunc:vO},wO=Lv({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(a.Ed.ERF_P,";\n  float a1 = ").concat(a.Ed.ERF_A1,";\n  float a2 = ").concat(a.Ed.ERF_A2,";\n  float a3 = ").concat(a.Ed.ERF_A3,";\n  float a4 = ").concat(a.Ed.ERF_A4,";\n  float a5 = ").concat(a.Ed.ERF_A5,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),OO={kernelName:a.db,backendName:"webgl",kernelFunc:wO},kO=Lv({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:py,dtype:"float32"}),SO={kernelName:a.eb,backendName:"webgl",kernelFunc:kO};function IO(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:o}=t,i=o.shape.length,c=o.shape.slice();let u=s;return s<0&&(a.Mf.assert(-(i+1)<=s,()=>"Axis must be in the interval [".concat(-(i+1),", ").concat(i,"]")),u=i+s+1),c.splice(u,0,1),Kv({inputs:{x:o},backend:r,attrs:{shape:c}})}const NO={kernelName:a.fb,backendName:"webgl",kernelFunc:IO},TO="return exp(x) - 1.0;",jO=Lv({opSnippet:TO,packedOpSnippet:TO,cpuKernelImpl:fy}),EO={kernelName:a.gb,backendName:"webgl",kernelFunc:jO};class CO{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),s=n?"".concat(r,".0"):"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error('FFT component must be either "real" or "imag", got '.concat(e,"."));o="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(a,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(o,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(r,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(r,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(s,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function AO(e,t,n){const r=n.texData.get(e.dataId),s=a.Mf.sizeFromShape(e.shape),o=e.shape[e.shape.length-1],i=Kv({inputs:{x:e},backend:n,attrs:{shape:[s/o,o]}}),c=i.shape,u=new CO("real",c,t),l=new CO("imag",c,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:c},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:c}],h=n.runWebGLProgram(u,d,"float32"),p=n.runWebGLProgram(l,d,"float32"),f=Ev({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const m=Kv({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}const RO={kernelName:a.hb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return AO(r,!1,n)}};class FO{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function _O(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:o}=n;if(o=o||a.Mf.inferDtype(s),"string"===o){const e=a.Mf.getArrayFromDType(o,a.Mf.sizeFromShape(r));return e.fill(s),t.makeTensorInfo(r,o,e)}{const e=new FO(r,s),n=[[s]];return t.runWebGLProgram(e,[],o,n)}}const MO={kernelName:a.ib,backendName:"webgl",kernelFunc:_O};class DO{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(t," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(t,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const LO={kernelName:a.jb,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:r}=t,a=n,s=new DO(r.shape);return a.runWebGLProgram(s,[r],r.dtype)}},zO="return floor(x);",PO=Lv({opSnippet:zO,packedOpSnippet:zO,cpuKernelImpl:my}),BO={kernelName:a.kb,backendName:"webgl",kernelFunc:PO},WO=zv({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),UO={kernelName:a.lb,backendName:"webgl",kernelFunc:WO};class VO{constructor(e){this.variableNames=["A"];const t=cb(),[n,r]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(r,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(t.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class GO{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=cb(),[n,r]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(r,".0, ").concat(n,".0);\n            vec4 values = ").concat(t.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}const HO={kernelName:a.mb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:o}=r,i="undefined"!==typeof HTMLVideoElement&&s instanceof HTMLVideoElement,c="undefined"!==typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],d=[l,u],h=[l,u,o];if(c||i){const e=Object(a.he)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=qO&&e===KO||(KO=e,qO=document.createElement("canvas").getContext("2d",{willReadFrequently:KO})),qO.canvas.width=u,qO.canvas.height=l,qO.drawImage(s,0,0,u,l),s=qO.canvas}const p=n.makeTensorInfo(d,"int32");n.texData.get(p.dataId).usage=Cg.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const f=Object(a.he)().getBool("WEBGL_PACK")?new GO(h):new VO(h),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}};let qO,KO=Object(a.he)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const XO={kernelName:a.ob,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o,bias:i,preluActivationWeights:c}=t,{strides:u,pad:l,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=r,g=a.Ed.convertConv2DDataFormat(d),b=a.Ed.computeConv2DInfo(s.shape,o.shape,u,h,l,p,!1,g);let y;const v=[],x=null!=i,w=null!=c,O="leakyrelu"===f,k=()=>{const e=[s,o],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=Kv({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return v.push(t),t}return e};if(x&&e.push(t(i,d)),w&&e.push(t(c,d)),O){const t=n.makeTensorInfo([],"float32",a.Mf.createScalarValue(m,"float32"));e.push(t),v.push(t)}return e};if(1!==b.filterHeight||1!==b.filterWidth||1!==b.dilationHeight||1!==b.dilationWidth||1!==b.strideHeight||1!==b.strideWidth||"SAME"!==b.padInfo.type&&"VALID"!==b.padInfo.type)if(b.strideWidth<=2&&"channelsLast"===g&&Object(a.he)().getBool("WEBGL_EXP_CONV")){const e=f?Pv(f,!0):null,t=new Nw(b,x,e,w,O),r=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],a=k();y=n.runWebGLProgram(t,a,"float32",r)}else if(Object(a.he)().getBool("WEBGL_CONV_IM2COL"))y=Cw({x:s,filter:o,convInfo:b,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:m});else{const e=f?Pv(f,!1):null,t=new Sw(b,x,e,w,O),r=k();y=n.runWebGLProgram(t,r,"float32")}else y=Ew({x:s,filter:o,convInfo:b,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:m});const S=Kv({inputs:{x:y},backend:n,attrs:{shape:b.outShape}});return v.push(y),v.forEach(e=>n.disposeIntermediateTensorInfo(e)),S}};const YO={kernelName:a.pb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o,bias:i,preluActivationWeights:c}=t,{strides:u,pad:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,m=[];let g=d;null==g&&(g=[1,1]),a.Mf.assert(a.Ed.eitherStridesOrDilationsAreOne(u,g),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(u," and dilations '").concat(g,"'"));const b=a.Ed.computeConv2DInfo(s.shape,o.shape,u,g,l,h,!0),y=Object(a.he)().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels===1,v=p?Pv(p,y):null,x=[s,o],w=null!=i,O=null!=c,k="leakyrelu"===p;if(w&&x.push(i),O&&x.push(c),k){const e=n.makeTensorInfo([],"float32",a.Mf.createScalarValue(f,"float32"));x.push(e),m.push(e)}let S;S=y?new sO(b,w,v,O,k):new aO(b,w,v,O,k);const I=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],N=n.runWebGLProgram(S,x,"float32",I);return m.forEach(e=>n.disposeIntermediateTensorInfo(e)),N}};class QO{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const a=Fb(n.length);let s="\n    int index;";for(let o=0;o<this.sliceDim;o++)s+="\n          index = round(getIndices(coords[0], ".concat(o,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[o],";\n          flattenIndex += index * ").concat(this.strides[o],";");this.userCode="\n         void main() {\n          ".concat(a," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(s,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}const ZO={kernelName:a.qb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,o=s.shape,i=o[o.length-1],c=a.Mf.sizeFromShape(r.shape),[u,l,d,h]=a.Ed.prepareAndValidate(r,s),p=Kv({inputs:{x:s},backend:n,attrs:{shape:[l,i]}}),f=Kv({inputs:{x:r},backend:n,attrs:{shape:[a.Mf.sizeFromShape(r.shape)/d,d]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=gy(e,t,r.dtype,l,i,d,h,r.shape,c);return n.makeTensorInfo(u,r.dtype,a.values)}const m=new QO(i,h,[l,d],r.shape),g=n.runWebGLProgram(m,[f,p],f.dtype),b=Kv({inputs:{x:g},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),b}};class JO{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Fb(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)2===a?r.push("index"):r.push("".concat(n[a]));return r.join()}(e);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(e[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(r,"));\n      }\n    ")}}function $O(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:o}=t,{axis:i,batchDims:c}=r,u=a.Mf.parseAxisParam(i,s.shape)[0];if(Object(a.he)().get("DEBUG")){const e=n.readSync(o.dataId),t=s.shape[u];for(let n=0;n<e.length;++n){const r=e[n];a.Mf.assert(r<=t-1&&r>=0,()=>"GatherV2: the index value ".concat(r," is not in [0, ").concat(t-1,"]"))}}const l=a.Ed.segment_util.collectGatherOpShapeInfo(s,o,u,c),d=a.Mf.sizeFromShape(o.shape),h=[],p=Kv({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=Kv({inputs:{x:o},backend:n,attrs:{shape:[l.batchSize,d/l.batchSize]}});h.push(p),h.push(f);const m=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,o])||"string"===s.dtype){const e=n.bufferSync(f),t=n.bufferSync(p),r=by(t,e,m);return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const g=new JO(p.shape,m),b=n.runWebGLProgram(g,[p,f],p.dtype);h.push(b);const y=Kv({inputs:{x:b},backend:n,attrs:{shape:l.outputShape}});return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}const ek={kernelName:a.rb,backendName:"webgl",kernelFunc:$O},tk=zv({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:yy,dtype:"bool"}),nk={kernelName:a.sb,backendName:"webgl",kernelFunc:tk},rk=zv({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:vy}),ak={kernelName:a.tb,backendName:"webgl",kernelFunc:rk};const sk={kernelName:a.ub,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return AO(r,!0,n)}},ok=Lv({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),ik={kernelName:a.xb,backendName:"webgl",kernelFunc:ok},ck=Lv({opSnippet:"return float(isinf(x));",dtype:"bool"}),uk={kernelName:a.yb,backendName:"webgl",kernelFunc:ck},lk=Lv({opSnippet:"return float(isnan(x));",dtype:"bool"}),dk={kernelName:a.zb,backendName:"webgl",kernelFunc:lk},hk=zv({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:xy,dtype:"bool"}),pk={kernelName:a.Eb,backendName:"webgl",kernelFunc:hk},fk=zv({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:wy,dtype:"bool"}),mk={kernelName:a.Fb,backendName:"webgl",kernelFunc:fk};const gk={kernelName:a.Gb,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,o=Oy(r,a,s);return t.makeTensorInfo([o.length],"float32",o)}},bk=Lv({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:ky}),yk={kernelName:a.Hb,backendName:"webgl",kernelFunc:bk},vk=Lv({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),xk={kernelName:a.Ib,backendName:"webgl",kernelFunc:vk},wk=zv({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Ok={kernelName:a.Jb,backendName:"webgl",kernelFunc:wk},kk=Lv({opSnippet:"return float(!(x >= 1.0));"}),Sk={kernelName:a.Kb,backendName:"webgl",kernelFunc:kk},Ik=zv({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Nk={kernelName:a.Lb,backendName:"webgl",kernelFunc:Ik};class Tk{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(r,") * sum");i=.5===a?"inversesqrt(".concat(c,")"):1===a?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(a,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(s,"; j <= ").concat(s,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(o,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class jk{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(r,") * sum");i=.5===a?"inversesqrt(".concat(c,")"):1===a?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(a,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(s,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(s,"; j <= ").concat(s,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(o,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const Ek={kernelName:a.Bb,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:o,bias:i,alpha:c,beta:u}=r,l=Object(a.he)().getBool("WEBGL_PACK_NORMALIZATION")?new jk(s.shape,o,i,c,u):new Tk(s.shape,o,i,c,u);return n.runWebGLProgram(l,[s],s.dtype)}};class Ck{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(t,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(t," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(r,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(r,")\n                * float(").concat(a,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(a,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const Ak={kernelName:a.Cb,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:o}=t,{depthRadius:i,bias:c,alpha:u,beta:l}=r,d=new Ck(a.shape,i,c,u,l);return n.runWebGLProgram(d,[a,s,o],a.dtype)}};function Rk(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:o,keepDims:i}=r,c=s.shape.length,u=a.Mf.parseAxisParam(o,s.shape);let l=u;const d=a.Ed.getAxesPermutation(l,c),h=null!=d,p=n.shouldExecuteOnCPU([s]);let f=s;if(h){if(p){const e=n.texData.get(f.dataId).values,t=new Array(c);for(let n=0;n<t.length;n++)t[n]=s.shape[d[n]];const r=Jy(e,s.shape,s.dtype,d,t);f=n.makeTensorInfo(t,s.dtype);n.texData.get(f.dataId).values=r}else f=ex(s,d,n);l=a.Ed.getInnerMostAxes(l.length,c)}a.Ed.assertAxesAreInnerMostDims("max",l,c);const[m,g]=a.Ed.computeOutAndReduceShapes(f.shape,l);let b,y=m;if(i&&(y=a.Ed.expandShapeToKeepDim(m,u)),p){const e=n.texData.get(f.dataId).values,t=Sy(e,a.Mf.sizeFromShape(g),y,s.dtype);b=n.makeTensorInfo(y,s.dtype);n.texData.get(b.dataId).values=t}else b=function(e,t,n,r){const s=a.Mf.sizeFromShape(t),o=Kv({inputs:{x:e},attrs:{shape:[a.Mf.sizeFromShape(e.shape)/s,s]},backend:r}),i=Zv(o,e.dtype,"max",r),c=Kv({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(i),c}(f,g,y,n);return h&&n.disposeIntermediateTensorInfo(f),b}const Fk={kernelName:a.Mb,backendName:"webgl",kernelFunc:Rk},_k=zv({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Iy}),Mk={kernelName:a.Sb,backendName:"webgl",kernelFunc:_k};const Dk={kernelName:a.Nb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;ob(s,"maxPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:u}=r;a.Mf.assert(a.Ed.eitherStridesOrDilationsAreOne(i,1),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const l=a.Ed.computePool2DInfo(s.shape,o,i,1,c,u);if(1===l.filterWidth&&1===l.filterHeight&&a.Mf.arraysEqual(l.inShape,l.outShape))return Tv({inputs:{x:s},backend:n});const d=new Mx(l,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}};const Lk={kernelName:a.Ob,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:o,strides:i,pad:c,dataFormat:u,dimRoundingMode:l}=r,d=a.Ed.computePool3DInfo(s.shape,o,i,[1,1,1],c,l,u),h=new Dx(d,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class zk{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=a-1-e.padInfo.top,i=s-1-e.padInfo.left,c=a*s-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(a,";\n          wR += ").concat(r,") {\n          float dyR = float(dyRCorner + wR) / ").concat(t,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(s,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(s," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Pk{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,c=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=i-1-e.padInfo.front,d=c-1-e.padInfo.top,h=u-1-e.padInfo.left,p=i*c*u-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(l,", ").concat(d,", ").concat(h,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(a,") {\n          float dyD = float(dyDCorner + wD) / ").concat(t,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(s,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(u,";\n                wC += ").concat(o,") {\n              float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(p," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(u," +\n                  wR * ").concat(u," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const Bk={kernelName:a.Pb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o}=t,i=o,{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=r,h=a.Ed.computePool3DInfo(i.shape,c,u,[1,1,1],l,d),p=new Dx(h,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new Pk(h),g=n.runWebGLProgram(m,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const Wk={kernelName:a.Qb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o,output:i}=t,c=o;ob([o,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:d,dimRoundingMode:h}=r,p=a.Ed.computePool2DInfo(c.shape,u,l,1,d,h),f=new Mx(p,"max",!0),m=n.runWebGLProgram(f,[c],c.dtype),g=new zk(p),b=n.runWebGLProgram(g,[s,m],c.dtype);return n.disposeIntermediateTensorInfo(m),b}};const Uk={kernelName:a.Rb,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,{filterSize:o,strides:i,pad:c,includeBatchInIndex:u}=n,l=r;a.Mf.assert(4===s.shape.length,()=>"Error in maxPool: input must be rank 4 but got rank ".concat(s.shape.length,"."));const d=[1,1];a.Mf.assert(a.Ed.eitherStridesOrDilationsAreOne(i,d),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(d,"'"));const h=a.Ed.computePool2DInfo(s.shape,o,i,d,c),[p,f]=function(e,t,n,r){let a=new Mx(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new Mx(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(s,u,h,l);return[p,f]}};const Vk={kernelName:a.Tb,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,{keepDims:o,axis:i}=n,c=r,u=s.shape.length,l=a.Mf.parseAxisParam(i,s.shape);let d=l;const h=a.Ed.getAxesPermutation(d,u),p=null!=h,f=c.shouldExecuteOnCPU([s]),m=[];let g=s;if(p){if(f){const e=c.texData.get(g.dataId).values,t=new Array(u);for(let r=0;r<t.length;r++)t[r]=s.shape[h[r]];const n=Jy(e,s.shape,s.dtype,h,t);g=c.makeTensorInfo(t,s.dtype);c.texData.get(g.dataId).values=n}else g=ex(s,h,c);m.push(g),d=a.Ed.getInnerMostAxes(d.length,u)}a.Ed.assertAxesAreInnerMostDims("sum",d,u);const[b,y]=a.Ed.computeOutAndReduceShapes(g.shape,d);let v=b;o&&(v=a.Ed.expandShapeToKeepDim(b,l));const x=function(e,t,n,r){const s=a.Mf.sizeFromShape(t),o=Kv({inputs:{x:e},attrs:{shape:[a.Mf.sizeFromShape(e.shape)/s,s]},backend:r}),i=Zv(o,"float32","mean",r),c=Kv({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(i),c}(g,y,v,c);for(const a of m)c.disposeIntermediateTensorInfo(a);return x}};const Gk={kernelName:a.Ub,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r,c=s.shape.length,u=a.Mf.parseAxisParam(o,s.shape);let l=u;const d=a.Ed.getAxesPermutation(l,c);let h=s;null!=d&&(h=rx({inputs:{x:s},backend:n,attrs:{perm:d}}),l=a.Ed.getInnerMostAxes(l.length,s.shape.length)),a.Ed.assertAxesAreInnerMostDims("min",l,c);const[p,f]=a.Ed.computeOutAndReduceShapes(h.shape,l),m=Kv({inputs:{x:h},backend:n,attrs:{shape:[-1,a.Mf.sizeFromShape(f)]}}),g=Zv(m,m.dtype,"min",n);let b;if(i){b=Kv({inputs:{x:g},backend:n,attrs:{shape:a.Ed.expandShapeToKeepDim(p,u)}})}else b=Kv({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),b}},Hk=zv({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Ny}),qk={kernelName:a.Vb,backendName:"webgl",kernelFunc:Hk};class Kk{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=Fb(r),s=t.map(e=>e[0]).join(","),o=t.map((t,n)=>t[0]+e[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),c="reflect"===n?0:1;this.userCode=1!==r?"\n      ".concat(a," start = ").concat(a,"(").concat(s,");\n      ").concat(a," end = ").concat(a,"(").concat(o,");\n\n      void main() {\n        ").concat(a," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(r,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(a," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class Xk{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=Fb(r),s=t.map(e=>e[0]).join(","),o=t.map((t,n)=>t[0]+e[n]).join(","),i=tv("rc",r),c=tv("source",r),u="".concat(i[r-1]," < ").concat(this.outputShape[r-1]),l=1===r?"source":"vec2(".concat(c.slice(-2).join(),")"),d="reflect"===n?0:1;let h="";if(1===r){const e="\n        ".concat(a," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(d,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(d,";\n        }\n        source -= start;\n      ");h="\n        ".concat(a," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        ").concat(i[r-1]," += 1;\n        if(").concat(u,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        }\n      ")}else{const e="\n        ".concat(a," source = rc;\n        ").concat(a," lt = ").concat(a,"(lessThan(source, start));\n        ").concat(a," gte = ").concat(a,"(greaterThanEqual(source, end));\n        ").concat(a," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(d,") +\n                gte * ((end - 1) * 2 - source + ").concat(d,");\n        source -= start;\n      ");h="\n        ".concat(a," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        ").concat(i[r-1]," += 1;\n        if(").concat(u,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        }\n        rc = outputLoc;\n        ").concat(i[r-2]," += 1;\n        if(").concat(i[r-2]," < ").concat(this.outputShape[r-2],") {\n          ").concat(e,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n          ").concat(i[r-1]," += 1;\n          if(").concat(u,") {\n            ").concat(e,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(a," start = ").concat(a,"(").concat(s,");\n      const ").concat(a," end = ").concat(a,"(").concat(o,");\n\n      void main() {\n        ").concat(a," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(h,"\n        setOutput(result);\n      }\n    ")}}const Yk={kernelName:a.Wb,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s}=t,{paddings:o,mode:i}=r,c=Object(a.he)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Xk(s.shape,o,i):new Kk(s.shape,o,i);return n.runWebGLProgram(c,[s],s.dtype)}},Qk=zv({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),Zk={kernelName:a.Xb,backendName:"webgl",kernelFunc:Qk};class Jk{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(t-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(t-1,"));\n      }\n    ")}}const $k=zv({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),eS={kernelName:a.sc,backendName:"webgl",kernelFunc:$k},tS="return a - b;",nS=zv({opSnippet:tS,packedOpSnippet:tS,supportsComplex:!0,cpuKernelImpl:Yy}),rS={kernelName:a.gd,backendName:"webgl",kernelFunc:nS};function aS(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:o}=r,i=a.Mf.parseAxisParam([o],s.shape),c=Rk({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=a.Ed.expandShapeToKeepDim(c.shape,i),l=Kv({inputs:{x:c},backend:n,attrs:{shape:u}}),d=nS({inputs:{a:s,b:l},backend:n}),h=kO({inputs:{x:d},backend:n}),p=tx({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),f=Kv({inputs:{x:p},backend:n,attrs:{shape:u}}),m=$k({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const sS={kernelName:a.Oc,backendName:"webgl",kernelFunc:aS};const oS={kernelName:a.Yb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:o,normalized:i}=r,c=i?a:aS({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=c.shape[0],l=c.shape[1],d=new Jk(u,l,s),h=[[o]],p=n.runWebGLProgram(d,[c],"int32",h);return i||n.disposeIntermediateTensorInfo(c),p}};const iS={kernelName:a.ac,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=jy(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let s;return s=Object(a.he)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new yv(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new cv(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(s,[r],r.dtype)}},cS=a.ve.nonMaxSuppressionV3Impl;const uS={kernelName:a.bc,backendName:"webgl",kernelFunc:function(e){a.Ed.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:u}=r,l=n.readSync(s.dataId),d=n.readSync(o.dataId),{selectedIndices:h}=cS(l,d,i,c,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},lS=a.ve.nonMaxSuppressionV4Impl;const dS={kernelName:a.cc,backendName:"webgl",kernelFunc:function(e){a.Ed.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:u,padToMaxOutputSize:l}=r,d=n.readSync(s.dataId),h=n.readSync(o.dataId),{selectedIndices:p,validOutputs:f}=lS(d,h,i,c,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},hS=a.ve.nonMaxSuppressionV5Impl;const pS={kernelName:a.dc,backendName:"webgl",kernelFunc:function(e){a.Ed.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:u,softNmsSigma:l}=r,d=n.readSync(s.dataId),h=n.readSync(o.dataId),p=i,f=c,m=u,g=l,{selectedIndices:b,selectedScores:y}=hS(d,h,p,f,m,g);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class fS{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(r,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const mS={kernelName:a.fc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:o,depth:i,onValue:c,offValue:u}=r,l=a.Mf.sizeFromShape(s.shape),d=new fS(l,i,c,u),h=Kv({inputs:{x:s},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(d,[h],o);n.disposeIntermediateTensorInfo(h);const f=Kv({inputs:{x:p},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(p),f}};function gS(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=aw({inputs:{input:r},backend:n}),t=gS({inputs:{x:e},backend:n}),a=vw({inputs:{input:r},backend:n}),s=gS({inputs:{x:a},backend:n}),o=Ev({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return _O({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const bS={kernelName:a.ud,backendName:"webgl",kernelFunc:gS};const yS={kernelName:a.gc,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=aw({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=vw({inputs:{input:a},backend:r}),o=gS({inputs:{x:s},backend:r}),i=Ev({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),i}return _O({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};const vS={kernelName:a.ic,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return IO({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const o=t[0].shape,i=t[0].dtype;t.forEach(e=>{a.Mf.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),a.Mf.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],u=Ow({inputs:t.map(e=>{const t=IO({inputs:{input:e},backend:n,attrs:{dim:s}});return c.push(t),t}),backend:n,attrs:{axis:s}});return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}};class xS{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=Fb(r),s=t.map(e=>e[0]).join(","),o=t.map((t,n)=>t[0]+e[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?"\n      ".concat(a," start = ").concat(a,"(").concat(s,");\n      ").concat(a," end = ").concat(a,"(").concat(o,");\n\n      void main() {\n        ").concat(a," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(a," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class wS{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=Fb(r),s=t.map(e=>e[0]).join(","),o=t.map((t,n)=>t[0]+e[n]).join(","),i=tv("rc",r),c=tv("source",r),u="".concat(i[r-1]," < ").concat(this.outputShape[r-1]),l=1===r?"source":"vec2(".concat(c.slice(-2).join(),")"),d=["".concat(a," rc = outputLoc;"),"".concat(i[r-1]," += 1;\n       if(").concat(u,") {\n      "),1===r?"":"}\n       rc = outputLoc;\n       ".concat(i[r-2]," += 1;\n       if(").concat(i[r-2]," < ").concat(this.outputShape[r-2],") {"),1===r?"":"  ".concat(i[r-1]," += 1;\n         if(").concat(u,") {")],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+="\n        ".concat(d[f],"\n        if (").concat(h,") {\n          result[").concat(f,"] = float(value);\n        } else {\n          ").concat(a," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        }\n      ");p+=1===r?"} ":"}}",this.userCode="\n      const ".concat(a," start = ").concat(a,"(").concat(s,");\n      const ").concat(a," end = ").concat(a,"(").concat(o,");\n\n      void main() {\n        ").concat(a," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const OS=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:o,constantValue:i}=r;if(0===a.Mf.sizeFromShape(s.shape)){return _O({backend:n,attrs:{shape:o.map((e,t)=>e[0]+s.shape[t]+e[1]),value:i,dtype:s.dtype}})}const c=Object(a.he)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wS(s.shape,o,i):new xS(s.shape,o,i),u=[[i]];return n.runWebGLProgram(c,[s],s.dtype,u)},kS={kernelName:a.jc,backendName:"webgl",kernelFunc:OS},SS=zv({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),IS={kernelName:a.kc,backendName:"webgl",kernelFunc:SS};const NS={kernelName:a.mc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r,c=s.shape.length,u=[],l=a.Mf.parseAxisParam(o,s.shape);let d=l;const h=a.Ed.getAxesPermutation(d,c);let p,f=s;if(null!=h&&(f=rx({inputs:{x:s},backend:n,attrs:{perm:h}}),d=a.Ed.getInnerMostAxes(d.length,c),u.push(f)),a.Ed.assertAxesAreInnerMostDims("prod",d,c),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=Cy(f.shape,f.dtype,e,d);p=n.makeTensorInfo(r,a,t)}else{const[e,t]=a.Ed.computeOutAndReduceShapes(f.shape,d),r=a.Mf.sizeFromShape(t),o=Kv({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),i=Zv(o,Object(a.zf)(s.dtype),"prod",n);p=Kv({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(o),u.push(i)}if(i){u.push(p);const e=a.Ed.expandShapeToKeepDim(p.shape,l);p=Kv({inputs:{x:p},backend:n,attrs:{shape:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}};const TS={kernelName:a.nc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=r,c=a.map(e=>n.readSync(e.dataId)),u=a.map(e=>e.shape),l=n.readSync(s.dataId),d=n.readSync(o.dataId),[h,p,f]=Ay(c,u,l,s.shape,s.dtype,d,o.shape,i),m=h.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}};const jS={kernelName:a.oc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,o=n.readSync(r.dataId),i=n.readSync(a.dataId),c=n.readSync(s.dataId),[u,l]=Ry(o,r.shape,r.dtype,i,a.shape,c,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([l.length],r.dtype,l)]}};const ES={kernelName:a.pc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=r,u=n.readSync(a.dataId),l=n.readSync(s.dataId),d=n.readSync(o.dataId),h=i.map(e=>n.readSync(e.dataId)),p=i.map(e=>e.shape),[f,m]=Fy(u,a.shape,l,s.shape,s.dtype,d,o.shape,h,p,c);return n.makeTensorInfo(f,s.dtype,m)}},CS=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:o}=n,i=_y(r,a,s,o);return t.makeTensorInfo([i.length],o,i)},AS={kernelName:a.qc,backendName:"webgl",kernelFunc:CS},RS=Lv({opSnippet:"return 1.0 / x;"}),FS={kernelName:a.tc,backendName:"webgl",kernelFunc:RS},_S=Lv({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),MS={kernelName:a.uc,backendName:"webgl",kernelFunc:_S},DS=Lv({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),LS={kernelName:a.vc,backendName:"webgl",kernelFunc:DS};class zS{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(u[0]/l[0],",\n          ").concat(u[1]/l[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class PS{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(u[0]/l[0],",\n          ").concat(u[1]/l[1],",\n          ").concat(u[1]/l[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const BS={kernelName:a.xc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:i,size:c}=r,[u,l]=c,d=Object(a.he)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new PS(s.shape,u,l,o,i):new zS(s.shape,u,l,o,i);return n.runWebGLProgram(d,[s],"float32")}};class WS{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],u=i[0]/c[0],l=i[1]/c[1],d=1/u,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(u,");\n        const float widthScale = float(").concat(l,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(h,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(r-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(a-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const US={kernelName:a.yc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new WS(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class VS{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(u[0]/l[0],",\n          ").concat(u[1]/l[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}class GS{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(u[0]/l[0],",\n          ").concat(u[1]/l[1],",\n          ").concat(u[1]/l[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}const HS={kernelName:a.zc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:i,size:c}=r,[u,l]=c,d=Object(a.he)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new GS(s.shape,u,l,o,i):new VS(s.shape,u,l,o,i);return n.runWebGLProgram(d,[s],s.dtype)}};class qS{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],u=i[0]/c[0],l=i[1]/c[1],d=1/u,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(u,");\n        const float widthScale = float(").concat(l,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(h,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(r,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const KS={kernelName:a.Ac,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new qS(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class XS{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=e,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(e[0]," - coord - 1));\n        }\n      "));const r=e.map((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(r)).join(","),a=Fb(n);this.userCode="\n      void main() {\n        ".concat(a," coords = getOutputCoords();\n        setOutput(getX(").concat(r,"));\n      }\n    ")}}class YS{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=e;const r=tv("rc",n),a="".concat(r[n-1]," + 1 < ").concat(this.outputShape[n-1]),s="".concat(r[n-2]," + 1 < ").concat(this.outputShape[n-2]),o=Fb(n);function i(n){const r=e.map((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - ").concat(r[n]," - 1"):"".concat(r[n])}(a,n)),a=r.join(","),s=r.slice(-2).join(",");return"getChannel(getX(".concat(a,"), vec2(").concat(s,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(e[0]," - rc - 1),\n            ").concat(e[0]," - rc - 1);\n          if(").concat(a,"){\n              result.g = getChannel(getX(").concat(e[0]," - (rc  + 1) - 1),\n                ").concat(e[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(o," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(e){return i(e)}(r.slice()),";\n          if(").concat(a,"){\n            result.g = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(r.slice()),";\n          }\n          if(").concat(s,") {\n            result.b = ").concat(function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice()),";\n            if(").concat(a,") {\n              result.a = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const QS={kernelName:a.Bc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:o}=r,i=s.shape.length,c=a.Mf.parseAxisParam(o,s.shape);if(0===i)return Tv({inputs:{x:s},backend:n});const u=Object(a.he)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new YS(s.shape,c):new XS(s.shape,c);return n.runWebGLProgram(u,[s],s.dtype)}};class ZS{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"===typeof t?"float outputValue = ".concat(t.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(t.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(a,"\n          if(coordX >= 0 && coordX < ").concat(r," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const JS={kernelName:a.Cc,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:s}=t,{radians:o,fillValue:i,center:c}=n,u=r,l=new ZS(s.shape,i),[d,h]=a.Ed.getImageCenter(c,s.shape[1],s.shape[2]),p=[[d,h,Math.sin(o),Math.cos(o)]];return u.runWebGLProgram(l,[s],s.dtype,p)}},$S=Lv({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),eI={kernelName:a.Dc,backendName:"webgl",kernelFunc:$S},tI=Lv({opSnippet:"return inversesqrt(x);",cpuKernelImpl:My}),nI={kernelName:a.Ec,backendName:"webgl",kernelFunc:tI};class rI{constructor(e,t,n,r,a,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=Fb(a.length),c=Fb(s.length);let u="";1===n?u="i":2===n&&(u="i, j");const l="getIndices(".concat(u,")");let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h="getUpdates(".concat(d,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(a,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(e,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(t,"; j++) {\n              int index = round(").concat(l,");\n              flattenedIndex += index * ").concat(m,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(h,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(f,", sum, float(found)));\n        }\n      ")}}class aI{constructor(e,t,n,r,a,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const i=Fb(a.length),c=Fb(s.length);let u="";1===n?u="i":2===n&&(u="i, j");const l="getIndices(".concat(u,")");let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h="getUpdates(".concat(d,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(a,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(e,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(t,"; j+=2) {\n              ivec4 index = round(").concat(l,");\n              flattenedIndex += index.xz * ").concat(m,";\n              if (j + 1 < ").concat(t,") {\n                flattenedIndex += index.yw * ").concat(g,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(h,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(f,", sum, found));\n        }\n      ")}}const sI={kernelName:a.Fc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:o}=t,{shape:i}=r,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:h}=a.Ed.calculateShapes(o,s,i),p=[h/l,l];if(0===h)return n.makeTensorInfo(i,s.dtype);const f=Kv({inputs:{x:s},backend:n,attrs:{shape:[u,c]}}),m=Kv({inputs:{x:o},backend:n,attrs:{shape:[u,l]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let b;b=Object(a.he)().getBool("WEBGL_PACK")?new aI(u,c,f.shape.length,m.shape.length,d,p):new rI(u,c,f.shape.length,m.shape.length,d,p);const y=n.runWebGLProgram(b,[m,f,g],m.dtype),v=Kv({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(g),v}};class oI{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s="for (int i = 0; i < ".concat(Math.ceil(Math.log2(t+1)),"; ++i) { if (left >= right) break;"),o=2===Object(a.he)().getNumber("WEBGL_VERSION")?"while (left < right) {":s,i="left"===r?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(o,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(i," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}const iI={kernelName:a.Gc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:o}=r,i=new oI(a.shape[0],a.shape[1],s.shape[1],o),c=[[a.shape[1]]];return n.runWebGLProgram(i,[a,s],"int32",c)}};class cI{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let r=0;r<t.length;r++)o.push("".concat(n[r])),r<e&&s.push("".concat(n[r]));r=s.join(),a=o.join()}const s=Fb(n);this.userCode="\n      void main() {\n        ".concat(s," resRC = getOutputCoords();\n        float cVal = getC(").concat(r,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(a,"));\n        } else {\n          setOutput(getB(").concat(a,"));\n        }\n      }\n    ")}}const uI={kernelName:a.Hc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:o}=t,i=new cI(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,o],Object(a.Lf)(s.dtype,o.dtype))}},lI=Lv({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(a.Ed.SELU_SCALEALPHA,";\n  float scale = ").concat(a.Ed.SELU_SCALE,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),dI={kernelName:a.Ic,backendName:"webgl",kernelFunc:lI},hI=Lv({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Ly}),pI={kernelName:a.Jc,backendName:"webgl",kernelFunc:hI},fI=Lv({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),mI={kernelName:a.Kc,backendName:"webgl",kernelFunc:fI},gI=Lv({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Iv,"\n  return result;\n")}),bI={kernelName:a.Lc,backendName:"webgl",kernelFunc:gI},yI=Lv({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),vI={kernelName:a.Mc,backendName:"webgl",kernelFunc:yI},xI=Lv({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),wI={kernelName:a.Pc,backendName:"webgl",kernelFunc:xI},OI={kernelName:a.Qc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:o,paddings:i}=r;a.Mf.assert(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const c=o.reduce((e,t)=>e*t),u=[[0,0]];u.push(...i);for(let a=1+o.length;a<s.shape.length;++a)u.push([0,0]);const l=[],d=OS({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),h=a.Ed.getReshaped(d.shape,o,c,!1),p=a.Ed.getPermuted(h.length,o.length,!1),f=a.Ed.getReshapedPermuted(d.shape,o,c,!1),m=Kv({inputs:{x:d},backend:n,attrs:{shape:h}}),g=rx({inputs:{x:m},backend:n,attrs:{perm:p}}),b=Kv({inputs:{x:g},backend:n,attrs:{shape:f}});return l.push(d),l.push(m),l.push(g),l.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}};const kI={kernelName:a.Rc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(s.shape));if(2!==r.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(r.shape));if(1!==a.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(a.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.readSync(r.dataId),c=n.readSync(a.dataId),u=n.readSync(s.dataId),l=n.readSync(o.dataId)[0],[d,h,p,f,m]=By(i,r.shape,r.dtype,c,a.dtype,u,l);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};const SI={kernelName:a.Sc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(r.shape));if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(a.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.readSync(a.dataId)),i=n.readSync(r.dataId),c=Array.from(n.readSync(s.dataId)),[u,l,d]=Wy(i,r.shape,r.dtype,o,c);return[n.makeTensorInfo(l,r.dtype,u),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};const II={kernelName:a.Tc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(a.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(s.shape));const o=n.readSync(r.dataId),i=n.readSync(a.dataId),c=n.readSync(s.dataId),[u,l]=Uy(o,r.shape,r.dtype,i,c,!0);return n.makeTensorInfo(l,r.dtype,u)}};const NI={kernelName:a.Uc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(a.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(s.shape));const o=n.readSync(r.dataId),i=n.readSync(a.dataId),c=n.readSync(s.dataId),[u,l]=Uy(o,r.shape,r.dtype,i,c);return n.makeTensorInfo(l,r.dtype,u)}};const TI={kernelName:a.Vc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:o,defaultValue:i}=t,{outputShape:c}=r,{sliceRank:u,numUpdates:l,sliceSize:d,strides:h,outputSize:p}=a.Ed.calculateShapes(o,s,c);if("string"===o.dtype){const e=n.bufferSync(s),t=n.bufferSync(o),r=a.Mf.decodeString(n.readSync(i.dataId)[0]),f=Dy(e,t,c,p,d,l,u,h,r,!1);return n.makeTensorInfo(c,f.dtype,f.values)}const f=new rI(l,u,s.shape.length,o.shape.length,h,[p,1],!1),m=n.runWebGLProgram(f,[o,s,i],o.dtype),g=Kv({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),g}};const jI={kernelName:a.Wc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:o,axis:i}=r,c=a.Mf.parseAxisParam(i,s.shape)[0],u=a.Ed.prepareSplitSize(s,o,c),l=s.shape.length,d=new Array(l).fill(0),h=s.shape.slice();return u.map(e=>{const t=[...h];t[c]=e;const r=Qx({inputs:{x:s},backend:n,attrs:{begin:d,size:t}});return d[c]+=e,r})}},EI="return sqrt(x);",CI=Lv({opSnippet:EI,packedOpSnippet:EI,cpuKernelImpl:Vy}),AI={kernelName:a.Xc,backendName:"webgl",kernelFunc:CI},RI=Lv({opSnippet:"return x * x;"}),FI={kernelName:a.Yc,backendName:"webgl",kernelFunc:RI},_I=zv({opSnippet:"return (a - b) * (a - b);",packedOpSnippet:"return (a - b) * (a - b);"}),MI={kernelName:a.Zc,backendName:"webgl",kernelFunc:_I};const DI={kernelName:a.ad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const o=n.readSync(s.dataId),i=a.Ed.fromUint8ToStringArray(o),c=Gy(i,"string",r);return n.makeTensorInfo(s.shape,"string",c)}};const LI={kernelName:a.bd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e;const{x:a}=t,s=uv+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),o=new cv(a.shape,s);return r.runWebGLProgram(o,[a],a.dtype)}};class zI{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=Fb(n.length),s=Fb(n.length);let o="";if(1===r)o="coords * strides + begin";else{let e=0;o=n.map((t,r)=>(e++,1===n.length?"coords * strides[".concat(r,"] + begin[").concat(r,"]"):"coords[".concat(e-1,"] * strides[").concat(r,"] + begin[").concat(r,"]"))).join(",")}this.userCode="\n      ".concat(a," begin = ").concat(a,"(").concat(e,");\n      ").concat(a," strides = ").concat(a,"(").concat(t,");\n\n      void main() {\n        ").concat(s," coords = getOutputCoords();\n        setOutput(getX(").concat(o,"));\n      }\n    ")}}const PI={kernelName:a.cd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:o,end:i,strides:c,beginMask:u,endMask:l,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:y,begin:v,end:x,strides:w}=a.qf.sliceInfo(s.shape,o,i,c,u,l,d,h,p);let O;if(g)O=Kv({inputs:{x:s},backend:n,attrs:{shape:m}});else if(b||y){a.Mf.assert(s.shape.length>=1,()=>"Input must have rank at least 1, got: ".concat(s.shape.length));const e=a.qf.computeOutShape(v,x,w),t=Qx({inputs:{x:s},backend:n,attrs:{begin:v,size:e}});O=Kv({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=Object(a.Ld)(s.shape,s.dtype,e),r=Hy(f,t,w,v);O=n.makeTensorInfo(m,s.dtype,r.values)}else{const e=new zI(v,w,f);O=n.runWebGLProgram(e,[s],s.dtype)}}const k=Kv({inputs:{x:O},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(O),k}};const BI={kernelName:a.dd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:u}=r,{data:l,dataSplits:d}=t,h=n.readSync(l.dataId),p=n.readSync(d.dataId),[f,m]=qy(h,p,a,s,o,i,c,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};const WI={kernelName:a.ed,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.readSync(s.dataId),c=n.readSync(o.dataId)[0],[u,l,d]=Ky(i,c,a),h=l.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};const UI={kernelName:a.fd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(s.dataId),i=Xy(o,a);return n.makeTensorInfo(s.shape,"int32",i)}},VI=Lv({opSnippet:"return tan(x);"}),GI={kernelName:a.id,backendName:"webgl",kernelFunc:VI},HI=Lv({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),qI={kernelName:a.jd,backendName:"webgl",kernelFunc:HI};const KI={kernelName:a.md,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:o,updates:i}=t,{}=r,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:h}=a.Ed.calculateShapes(i,o,s.shape),p=[h/l,l];if(0===h)return n.makeTensorInfo(s.shape,o.dtype);const f=Kv({inputs:{x:o},backend:n,attrs:{shape:[u,c]}}),m=Kv({inputs:{x:i},backend:n,attrs:{shape:[u,l]}}),g=Kv({inputs:{x:s},backend:n,attrs:{shape:p}}),b=new rI(u,c,f.shape.length,m.shape.length,d,p,!1,!0),y=n.runWebGLProgram(b,[m,f,g],g.dtype),v=Kv({inputs:{x:y},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),v}};class XI{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const r=Fb(this.rank),a=function(e){const t=e.length;if(t>5)throw Error("Tile for rank ".concat(t," is not yet supported"));if(1===t)return"imod(resRC, ".concat(e[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push("imod(".concat(n[a],", ").concat(e[a],")"));return r.join()}(e);this.userCode="\n      void main() {\n        ".concat(r," resRC = getOutputCoords();\n        setOutput(getA(").concat(a,"));\n      }\n    ")}}function YI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:o}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map(e=>a.Mf.decodeString(e)):e,r=Object(a.Ld)(s.shape,s.dtype,t),i=Qy(r,o);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new XI(s.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}const QI={kernelName:a.nd,backendName:"webgl",kernelFunc:YI};class ZI{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class JI{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function $I(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function eN(e){let t=1;for(;t<e;)t*=2;return t}const tN={kernelName:a.od,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:o,sorted:i}=r,c=Object(a.he)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=Object(a.he)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,d=l[l.length-1];if(n.shouldExecuteOnCPU([s])||d<c||o>u){const e=n.readSync(s.dataId),[t,r]=Zy(e,l,s.dtype,o,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===o)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===d)return[s,_O({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),p=null!==h&&h.isPacked,f=p?n.unpackTensor(s):s,m=a.Mf.sizeFromShape(l)/d,g=Kv({inputs:{x:f},attrs:{shape:[m,d]},backend:n});p&&$I(n,f);const b=eN(o),y=eN(d);let v=null;const x=()=>null===v?[g,g]:[g,v],w=(e,t,r)=>{const a=x(),s=new ZI(r),o=[[d],[null===v?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=v;v=n.runWebGLProgram(s,a,"int32",o),$I(n,i)};for(let a=1;a<b;a*=2){const e=2*a;for(let t=a;t>=1;t/=2)w(e,t,[m,y])}for(let a=y;a>b;a/=2){const e=x(),t=new JI([m,a/2]),r=[[d],[null===v?1:0],[b]],s=v;v=n.runWebGLProgram(t,e,"int32",r),$I(n,s);const o=b/2,i=2*o;for(let n=o;n>=1;n/=2)w(i,n,v.shape)}let O=v;v=Qx({inputs:{x:v},backend:n,attrs:{begin:0,size:[m,o]}}),$I(n,O);let k=$O({inputs:{x:g,indices:v},backend:n,attrs:{axis:1,batchDims:1}});$I(n,g);const S=l.slice(0,-1);S.push(o),O=v,v=Kv({inputs:{x:v},attrs:{shape:S},backend:n}),$I(n,O);const I=k;return k=Kv({inputs:{x:k},attrs:{shape:S},backend:n}),$I(n,I),[k,v]}};class nN{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(e," && 0 <= coordX && coordX < ").concat(t,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(a,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(a,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(t,"));\n                float mapY = mapCoord(inY, float(").concat(e,"));\n\n                if (").concat(o," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const rN={kernelName:a.pd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:u}=r,[l,d,h,p]=a.shape,[f,m]=null!=u?u:[d,h],g=new nN(d,h,o,i,c,[l,f,m,p]);return n.runWebGLProgram(g,[a,s],"float32")}};const aN={kernelName:a.rd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;ob(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(s.dataId),{outputValues:i,outputShape:c,indices:u}=$y(o,a,s.shape,s.dtype);return[r.makeTensorInfo(c,s.dtype,i),r.makeTensorInfo([u.length],"int32",u)]}};const sN={kernelName:a.sd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const o=a,i=o.shape.length,c=a.shape[s],u=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==s&&(u[l++]=o.shape[m]);const d=[],h=new Array(i).fill(0),p=o.shape.slice();p[s]=1;const f=new Array(c);for(let m=0;m<f.length;m++){h[s]=m;const e=Qx({inputs:{x:o},backend:n,attrs:{begin:h,size:p}}),t=Kv({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,d.push(e)}return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}};class oN{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,o=s*Math.ceil(a/n);this.outputShape=[r,o];const i=4*Math.floor(n/4),c=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let l="";a%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(a,") {\n          return initializationValue;\n        }\n      "));let d="";a%n>0&&(d="\n        if (inIdx < 0 || inIdx >= ".concat(a,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(d,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(s,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(s,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(u,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(u,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(u,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(u,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const iN=[ox,ix,ux,dx,fx,bx,yx,vx,kx,Sx,Nx,jx,Cx,Rx,_x,Lx,zx,Wx,Ux,Vx,qx,Jx,$x,ew,tw,ow,uw,hw,Cv,mw,kw,Aw,Dw,zw,Pw,Bw,Ww,Vw,Hw,Kw,$w,eO,tO,rO,oO,uO,lO,hO,fO,mO,bO,yO,xO,OO,SO,NO,EO,RO,MO,LO,BO,UO,HO,XO,YO,ZO,ek,nk,ak,jv,sk,xw,ik,uk,dk,Fv,pk,mk,gk,yk,xk,Ok,Sk,Nk,Ek,Ak,Fk,Mk,Dk,Lk,Bk,Wk,Uk,Vk,Gk,qk,Yk,Zk,oS,qv,iS,uS,dS,pS,rw,mS,yS,vS,kS,IS,Dv,NS,TS,jS,ES,AS,sw,eS,FS,MS,LS,Xv,BS,US,HS,KS,QS,JS,eI,nI,sI,iI,uI,dI,pI,mI,bI,vI,Zx,sS,wI,OI,kI,SI,II,NI,TI,jI,AI,FI,MI,DI,LI,PI,BI,WI,UI,rS,nx,GI,qI,KI,QI,tN,rN,ax,aN,sN,{kernelName:a.td,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:o}=t,{numSegments:i}=r,c=s.shape.length,u=[];let l=0;const d=a.Ed.getAxesPermutation([l],c);let h=s;null!=d&&(h=rx({inputs:{x:s},backend:n,attrs:{perm:d}}),u.push(h),l=a.Ed.getInnerMostAxes(1,c)[0]);const p=a.Ed.segment_util.computeOutShape(h.shape,l,i),f=a.Mf.sizeFromShape([h.shape[l]]),m=Kv({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});u.push(m);const g=Object(a.zf)(s.dtype),b=(e,t,r,s,o)=>{const i=e.shape[0],c=e.shape[1],l=a.Ed.segment_util.segOpComputeOptimalWindowSize(c,o),d=new oN({windowSize:l,inSize:c,batchSize:i,numSegments:o},t),h=n.compileAndRun(d,[e,r],s);if(u.push(h),h.shape[1]===o)return h;const p=CS({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),f=YI({inputs:{x:p},backend:n,attrs:{reps:[c/l]}});u.push(p),u.push(f);return b(h,t,f,s,o)},y=Kv({inputs:{x:b(m,"unsortedSegmentSum",o,g,i)},backend:n,attrs:{shape:p}});let v=y;if(null!=d){u.push(y);const e=a.Ed.getUndoAxesPermutation(d);v=rx({inputs:{x:v},backend:n,attrs:{perm:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),v}},bS];for(const cN of iN)Object(a.bf)(cN);a.Pf,zu.b}]]);
//# sourceMappingURL=2.598f5b3e.chunk.js.map